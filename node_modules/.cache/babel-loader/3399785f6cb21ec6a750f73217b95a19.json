{"ast":null,"code":"var _jsxFileName = \"/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js\";\n// // import React from 'react';\n// // import './table.css';\n// // import Button from '@mui/material/Button';\n// // import axios from 'axios';\n// // import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// // import CancelIcon from '@mui/icons-material/Cancel';\n// // export default class Procurement extends React.Component {\n// //     state = {\n// //         products: [],\n// //         loggedIn:false,\n// //         isAdmin:false\n// //     }\n// //     componentDidMount() {\n// //         let loggedIn = localStorage.getItem('LoggedIn');\n// //         let isAdmin = localStorage.getItem('isAdmin')\n// //         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n// //         if(loggedIn=='true'){\n// //             this.setState({\n// //                 loggedIn:true\n// //             })\n// //         }\n// //         if(isAdmin=='true'){\n// //             this.setState({\n// //                 isAdmin:true\n// //             })\n// //         }\n// //         axios.post('http://localhost:8080/Procurement/procurement')\n// //             .then((res) => {\n// //                 console.log(res);\n// //                 let products = res.data.data.map((element) => {\n// //                     let obj = {\n// //                         projectID: element.projectID,\n// //                         quantity: element.quantity,\n// //                         requiredDate: element.requiredDate,\n// //                         approvedByProcurement: element.approvedByProcurement,\n// //                         price:element.price,\n// //                         name:element.name\n// //                     }\n// //                     return obj;\n// //                 })\n// //                 console.log(products)\n// //                 this.setState({\n// //                     products\n// //                 });\n// //             })\n// //             .catch((Err) => {\n// //                 console.log(Err);\n// //             })\n// //     }\n// //     handleApprove = (element) => {\n// //         console.log(element);\n// //         let data = {\n// //             projectID: element.projectID,\n// //             approvedByProcurement: 'Approved'\n// //         };\n// //         let updatedProducts = this.state.products.map((product) => {\n// //             if (product.projectID == element.projectID) {\n// //                 let obj = {\n// //                     projectID: product.projectID,\n// //                     quantity: product.quantity,\n// //                     requiredDate: product.requiredDate,\n// //                     approvedByProcurement:  'Approved',\n// //                     price:element.price,\n// //                     name:element.name\n// //                 }\n// //                 return obj;\n// //             } else {\n// //                 return product;\n// //             }\n// //         })\n// //         console.log('updatedProducts',updatedProducts)\n// //         this.setState({\n// //             products:updatedProducts\n// //         });\n// //         axios.put('http://localhost:3001/updateProcurement', data)\n// //             .then((response) => {\n// //                 console.log(response);\n// //                 let financeData = {\n// //                     projectID: element.projectID,\n// //                     approvedByProcurement: 'Approved',\n// //                     requiredDate: element.requiredDate,\n// //                     quantity: element.quantity,\n// //                     name:element.name,\n// //                     price:element.price\n// //                 }\n// //                 axios.post('http://localhost:3001/Finance', financeData)\n// //                     .then((updatedRes) => {\n// //                         console.log(updatedRes);\n// //                     }).catch((Err) => {\n// //                         console.log(Err);\n// //                     })\n// //             }).catch((Err) => {\n// //                 console.log(Err);\n// //             })\n// //     }\n// //     handleReject = (element) => {\n// //         console.log(element);\n// //         let data = {\n// //             projectID: element.projectID,\n// //             approvedByProcurement: 'Rejected'\n// //         };\n// //         axios.put('http://localhost:3001/updateProcurement', data)\n// //             .then((response) => {\n// //                 console.log(response);\n// //                 let updatedProducts = this.state.products.map((product) => {\n// //                     if (product.projectID == element.projectID) {\n// //                         let obj = {\n// //                             projectID: product.projectID,\n// //                             quantity: product.quantity,\n// //                             requiredDate: product.requiredDate,\n// //                             approvedByProcurement:  'Rejected',\n// //                             price:product.price,\n// //                             name:product.name\n// //                         }\n// //                         return obj;\n// //                     } else {\n// //                         return product;\n// //                     }\n// //                 })\n// //                 console.log('updatedProducts',updatedProducts)\n// //                 this.setState({\n// //                     products:updatedProducts\n// //                 });\n// //             }).catch((Err) => {\n// //                 console.log(Err);\n// //             })\n// //     }\n// //     render() {\n// //         return (\n// //             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n// //                     <div style={{color:'black'}}>\n// //                 <h3>Procurement</h3>\n// //                 </div>\n// //                 <table>\n// //                     <thead>\n// //                         <th>Project ID</th>\n// //                         <th>Quantity</th>\n// //                         <th>Required Date</th>\n// //                         <th>Price</th>\n// //                         <th>Name</th>\n// //                         <th>Action</th>\n// //                     </thead>\n// //                     <tbody>\n// //                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n// //                             return (\n// //                                 <tr key={element.projectID}>\n// //                                     <td>{element.projectID}</td>\n// //                                     <td>{element.quantity}</td>\n// //                                     <td>{element.requiredDate}</td>\n// //                                     <td>{element.price}</td>\n// //                                     <td>{element.name}</td>\n// //                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n// //                                 </tr>\n// //                             )\n// //                         }) : null}\n// //                     </tbody>\n// //                 </table>\n// //             </div>\n// //         )\n// //     }\n// // }\nimport React from 'react';\nimport './table.css';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Procurement extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [],\n      loggedIn: false,\n      isAdmin: false\n    };\n\n    this.handleApprove = element => {\n      // axios.post('http://localhost:8080/Procurement/procurement', data)\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByProcurement: 'Approved'\n      };\n      let updatedProducts = this.state.products.map(product => {\n        if (product.projectID == element.projectID) {\n          let obj = {\n            projectID: product.projectID,\n            quantity: product.quantity,\n            requiredDate: product.requiredDate,\n            approvedByProcurement: 'Approved',\n            price: element.price,\n            name: element.name\n          };\n          return obj;\n        } else {\n          return product;\n        }\n      });\n      console.log('updatedProducts', updatedProducts);\n      this.setState({\n        products: updatedProducts\n      });\n      axios.put('http://localhost:8080/Procurement/procurement', data).then(response => {\n        console.log(response);\n        let financeData = {\n          projectID: element.projectID,\n          approvedByProcurement: 'Approved',\n          requiredDate: element.requiredDate,\n          quantity: element.quantity,\n          name: element.name,\n          price: element.price\n        };\n        axios.post('http://localhost:8080/Finance/finance', financeData).then(updatedRes => {\n          console.log(updatedRes);\n        }).catch(Err => {\n          console.log(Err);\n        });\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n\n    this.handleReject = element => {\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByProcurement: 'Rejected'\n      };\n      axios.put('http://localhost:3001/updateProcurement', data).then(response => {\n        console.log(response);\n        let updatedProducts = this.state.products.map(product => {\n          if (product.projectID == element.projectID) {\n            let obj = {\n              projectID: product.projectID,\n              quantity: product.quantity,\n              requiredDate: product.requiredDate,\n              approvedByProcurement: 'Rejected',\n              price: product.price,\n              name: product.name\n            };\n            return obj;\n          } else {\n            return product;\n          }\n        });\n        console.log('updatedProducts', updatedProducts);\n        this.setState({\n          products: updatedProducts\n        });\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    let loggedIn = localStorage.getItem('LoggedIn');\n    let isAdmin = localStorage.getItem('isAdmin');\n    console.log('loggedIn', loggedIn, 'isAdmin', isAdmin);\n\n    if (loggedIn == 'true') {\n      this.setState({\n        loggedIn: true\n      });\n    }\n\n    if (isAdmin == 'true') {\n      this.setState({\n        isAdmin: false\n      });\n    }\n\n    axios.get('http://localhost:8080/procurement').then(res => {\n      console.log(res);\n      let products = res.data.map(element => {\n        let obj = {\n          productID: element.productID,\n          quantity: element.quantity // requiredDate: element.requiredDate,\n          // approvedByProcurement: element.approvedByProcurement,\n          // price:element.price,\n          // name:element.name\n\n        };\n        return obj;\n      });\n      console.log(products);\n      this.setState({\n        products\n      });\n    }).catch(Err => {\n      console.log(Err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Product ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.state.products.length > 0 ? this.state.products.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.productID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [element.approvedByProcurement == 'Approved' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Approved\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 99\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 88\n              }, this) : element.approvedByFinance == 'Rejected' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Rejected\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 188\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 177\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                hidden: element.approvedByProcurement !== 'Pending',\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"inherit\",\n                  onClick: () => this.handleApprove(element),\n                  children: [\"Approve\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 359\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 285\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"inherit\",\n                  onClick: () => this.handleReject(element),\n                  children: [\"Reject\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 468\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 397\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 225\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this)]\n          }, element.productID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 33\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this);\n  }\n\n} // import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\n// import CloseIcon from '@mui/icons-material/Close';\n// import DoneIcon from '@mui/icons-material/Done';\n// import Box from '@mui/material/Box';\n// // import Tabs from '@mui/material/Tabs';\n// // import Tab from '@mui/material/Tab';\n// // import Procurementapproval from './Procurementapproval';\n// // import Hrreject from './Hrreject';\n// export default function CenteredTabs() {\n//  const [value, setValue] = React.useState(0);\n//  const [data, setData] = useState([]);\n//  const [ashow, setAShow] = useState(false);\n//  const [rshow, setRShow] = useState(false);\n//  const [pshow, setPShow] = useState(true);\n//  const handleChange = (event, newValue) => {\n//    if(newValue == 0){\n//      setPShow(true);\n//      setAShow(false);\n//      setRShow(false);\n//    }else if(newValue == 1){\n//     setPShow(false);\n//     setAShow(true);\n//     setRShow(false);\n//   }\n//   else if(newValue == 2){\n//     setPShow(false);\n//     setAShow(false);\n//     setRShow(true);\n//   }\n//    setValue(newValue);\n//  };\n//   useEffect(()=> {\n//    console.log(\"trying to load procurement customer on page load\")\n//      handleRefresh();\n// } ,[])\n// const handleRefresh = () => {\n//  axios.get('http://localhost:8080/procurement')\n//    .then((response) => {\n//      console.log(response)\n//      setData(response.data);\n//    }).catch((err) => {\n//      console.log(err);\n//    })\n// }\n// const handleApprove = (row, id) => {\n//  console.log(id)\n//    axios.post('/procurement/approve/'+row.id)\n//      .then((response) => {\n//        console.log('new item added',response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err)\n//      })\n//  }\n//  const handleReject = (row, id) => {\n//    console.log(id);\n//    axios.post('/procurement/reject/' +row.id,)\n//      .then((response) => {\n//        console.log(response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err);\n//      })\n//  }\n//   return (\n//    <TableContainer component={Paper}>\n//     <div key='div'>\n//    </div>\n//    { pshow?\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \n//         <TableHead>\n//           <TableRow>\n//            <TableCell align=\"center\">Title</TableCell>\n//            <TableCell align=\"center\">Quantity</TableCell>\n//            <TableCell align=\"center\">Price</TableCell>\n//            <TableCell align=\"center\">Status</TableCell>\n//          </TableRow>\n//        </TableHead>\n//         <TableBody>\n//          {data.map((row, id) => (\n//            <TableRow\n//              key={row.name}\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//            >\n//              <TableCell align=\"center\">{row.title}</TableCell>\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\n//              <TableCell align=\"center\">{row.price}</TableCell>\n//              <TableCell align=\"center\">{row.status}</TableCell>\n//              <TableCell align=\"center\">\n//               </TableCell>\n//              <TableCell align=\"center\">\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\n//                <CloseIcon onClick={() => handleReject(row, id)} />\n//              </TableCell>\n//            </TableRow>\n//          ))}\n//        </TableBody> \n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\n//      }\n//     </TableContainer>\n//   );\n// }","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js"],"names":["React","Button","axios","CheckBoxIcon","CancelIcon","Procurement","Component","state","products","loggedIn","isAdmin","handleApprove","element","console","log","data","projectID","approvedByProcurement","updatedProducts","map","product","obj","quantity","requiredDate","price","name","setState","put","then","response","financeData","post","updatedRes","catch","Err","handleReject","componentDidMount","localStorage","getItem","get","res","productID","render","length","approvedByFinance"],"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":["// // import React from 'react';\r\n// // import './table.css';\r\n// // import Button from '@mui/material/Button';\r\n// // import axios from 'axios';\r\n// // import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// // import CancelIcon from '@mui/icons-material/Cancel';\r\n// // export default class Procurement extends React.Component {\r\n// //     state = {\r\n// //         products: [],\r\n// //         loggedIn:false,\r\n// //         isAdmin:false\r\n// //     }\r\n// //     componentDidMount() {\r\n// //         let loggedIn = localStorage.getItem('LoggedIn');\r\n// //         let isAdmin = localStorage.getItem('isAdmin')\r\n// //         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n// //         if(loggedIn=='true'){\r\n// //             this.setState({\r\n// //                 loggedIn:true\r\n// //             })\r\n// //         }\r\n// //         if(isAdmin=='true'){\r\n// //             this.setState({\r\n// //                 isAdmin:true\r\n// //             })\r\n// //         }\r\n// //         axios.post('http://localhost:8080/Procurement/procurement')\r\n// //             .then((res) => {\r\n// //                 console.log(res);\r\n// //                 let products = res.data.data.map((element) => {\r\n// //                     let obj = {\r\n// //                         projectID: element.projectID,\r\n// //                         quantity: element.quantity,\r\n// //                         requiredDate: element.requiredDate,\r\n// //                         approvedByProcurement: element.approvedByProcurement,\r\n// //                         price:element.price,\r\n// //                         name:element.name\r\n// //                     }\r\n// //                     return obj;\r\n// //                 })\r\n// //                 console.log(products)\r\n// //                 this.setState({\r\n// //                     products\r\n// //                 });\r\n// //             })\r\n// //             .catch((Err) => {\r\n// //                 console.log(Err);\r\n// //             })\r\n// //     }\r\n// //     handleApprove = (element) => {\r\n// //         console.log(element);\r\n// //         let data = {\r\n// //             projectID: element.projectID,\r\n// //             approvedByProcurement: 'Approved'\r\n// //         };\r\n// //         let updatedProducts = this.state.products.map((product) => {\r\n// //             if (product.projectID == element.projectID) {\r\n// //                 let obj = {\r\n// //                     projectID: product.projectID,\r\n// //                     quantity: product.quantity,\r\n// //                     requiredDate: product.requiredDate,\r\n// //                     approvedByProcurement:  'Approved',\r\n// //                     price:element.price,\r\n// //                     name:element.name\r\n// //                 }\r\n// //                 return obj;\r\n// //             } else {\r\n// //                 return product;\r\n// //             }\r\n// //         })\r\n// //         console.log('updatedProducts',updatedProducts)\r\n// //         this.setState({\r\n// //             products:updatedProducts\r\n// //         });\r\n// //         axios.put('http://localhost:3001/updateProcurement', data)\r\n// //             .then((response) => {\r\n// //                 console.log(response);\r\n// //                 let financeData = {\r\n// //                     projectID: element.projectID,\r\n// //                     approvedByProcurement: 'Approved',\r\n// //                     requiredDate: element.requiredDate,\r\n// //                     quantity: element.quantity,\r\n// //                     name:element.name,\r\n// //                     price:element.price\r\n// //                 }\r\n// //                 axios.post('http://localhost:3001/Finance', financeData)\r\n// //                     .then((updatedRes) => {\r\n// //                         console.log(updatedRes);\r\n// //                     }).catch((Err) => {\r\n// //                         console.log(Err);\r\n// //                     })\r\n// //             }).catch((Err) => {\r\n// //                 console.log(Err);\r\n// //             })\r\n\r\n// //     }\r\n// //     handleReject = (element) => {\r\n// //         console.log(element);\r\n// //         let data = {\r\n// //             projectID: element.projectID,\r\n// //             approvedByProcurement: 'Rejected'\r\n// //         };\r\n// //         axios.put('http://localhost:3001/updateProcurement', data)\r\n// //             .then((response) => {\r\n// //                 console.log(response);\r\n// //                 let updatedProducts = this.state.products.map((product) => {\r\n// //                     if (product.projectID == element.projectID) {\r\n// //                         let obj = {\r\n// //                             projectID: product.projectID,\r\n// //                             quantity: product.quantity,\r\n// //                             requiredDate: product.requiredDate,\r\n// //                             approvedByProcurement:  'Rejected',\r\n// //                             price:product.price,\r\n// //                             name:product.name\r\n// //                         }\r\n// //                         return obj;\r\n// //                     } else {\r\n// //                         return product;\r\n// //                     }\r\n// //                 })\r\n// //                 console.log('updatedProducts',updatedProducts)\r\n// //                 this.setState({\r\n// //                     products:updatedProducts\r\n// //                 });\r\n// //             }).catch((Err) => {\r\n// //                 console.log(Err);\r\n// //             })\r\n// //     }\r\n// //     render() {\r\n// //         return (\r\n// //             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n// //                     <div style={{color:'black'}}>\r\n// //                 <h3>Procurement</h3>\r\n// //                 </div>\r\n// //                 <table>\r\n// //                     <thead>\r\n// //                         <th>Project ID</th>\r\n// //                         <th>Quantity</th>\r\n// //                         <th>Required Date</th>\r\n// //                         <th>Price</th>\r\n// //                         <th>Name</th>\r\n// //                         <th>Action</th>\r\n// //                     </thead>\r\n// //                     <tbody>\r\n// //                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n// //                             return (\r\n// //                                 <tr key={element.projectID}>\r\n// //                                     <td>{element.projectID}</td>\r\n// //                                     <td>{element.quantity}</td>\r\n// //                                     <td>{element.requiredDate}</td>\r\n// //                                     <td>{element.price}</td>\r\n// //                                     <td>{element.name}</td>\r\n// //                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n// //                                 </tr>\r\n// //                             )\r\n// //                         }) : null}\r\n// //                     </tbody>\r\n// //                 </table>\r\n// //             </div>\r\n// //         )\r\n// //     }\r\n// // }\r\n\r\nimport React from 'react';\r\nimport './table.css';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nexport default class Procurement extends React.Component {\r\n    state = {\r\n        products: [],\r\n        loggedIn:false,\r\n        isAdmin:false\r\n    }\r\n    componentDidMount() {\r\n        let loggedIn = localStorage.getItem('LoggedIn');\r\n        let isAdmin = localStorage.getItem('isAdmin')\r\n        console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n        if(loggedIn=='true'){\r\n            this.setState({\r\n                loggedIn:true\r\n            })\r\n        }\r\n        if(isAdmin=='true'){\r\n            this.setState({\r\n                isAdmin:false\r\n            })\r\n        }\r\n        axios.get('http://localhost:8080/procurement')\r\n            .then((res) => {\r\n                console.log(res);\r\n                let products = res.data.map((element) => {\r\n                    let obj = {\r\n                        productID: element.productID,\r\n                        quantity: element.quantity,\r\n                        // requiredDate: element.requiredDate,\r\n                        // approvedByProcurement: element.approvedByProcurement,\r\n                        // price:element.price,\r\n                        // name:element.name\r\n                    }\r\n                    return obj;\r\n                })\r\n                console.log(products)\r\n                this.setState({\r\n                    products\r\n                });\r\n            })\r\n            .catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    handleApprove = (element) => {\r\n        // axios.post('http://localhost:8080/Procurement/procurement', data)\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByProcurement: 'Approved'\r\n        };\r\n        let updatedProducts = this.state.products.map((product) => {\r\n            if (product.projectID == element.projectID) {\r\n                let obj = {\r\n                    projectID: product.projectID,\r\n                    quantity: product.quantity,\r\n                    requiredDate: product.requiredDate,\r\n                    approvedByProcurement:  'Approved',\r\n                    price:element.price,\r\n                    name:element.name\r\n                }\r\n                return obj;\r\n            } else {\r\n                return product;\r\n            }\r\n        })\r\n        console.log('updatedProducts',updatedProducts)\r\n        this.setState({\r\n            products:updatedProducts\r\n        });\r\n        axios.put('http://localhost:8080/Procurement/procurement', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                let financeData = {\r\n                    projectID: element.projectID,\r\n                    approvedByProcurement: 'Approved',\r\n                    requiredDate: element.requiredDate,\r\n                    quantity: element.quantity,\r\n                    name:element.name,\r\n                    price:element.price\r\n                }\r\n                axios.post('http://localhost:8080/Finance/finance', financeData)\r\n                    .then((updatedRes) => {\r\n                        console.log(updatedRes);\r\n                    }).catch((Err) => {\r\n                        console.log(Err);\r\n                    })\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n\r\n    }\r\n    handleReject = (element) => {\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByProcurement: 'Rejected'\r\n        };\r\n        axios.put('http://localhost:3001/updateProcurement', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                let updatedProducts = this.state.products.map((product) => {\r\n                    if (product.projectID == element.projectID) {\r\n                        let obj = {\r\n                            projectID: product.projectID,\r\n                            quantity: product.quantity,\r\n                            requiredDate: product.requiredDate,\r\n                            approvedByProcurement:  'Rejected',\r\n                            price:product.price,\r\n                            name:product.name\r\n                        }\r\n                        return obj;\r\n                    } else {\r\n                        return product;\r\n                    }\r\n                })\r\n                console.log('updatedProducts',updatedProducts)\r\n                this.setState({\r\n                    products:updatedProducts\r\n                });\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n          \r\n            \r\n                <table>\r\n                    <thead>\r\n                        <th>Product ID</th>\r\n                        <th>Quantity</th>\r\n                        {/* <th>Required Date</th>\r\n                        <th>Price</th>\r\n                        <th>Name</th>\r\n                        <th>Action</th> */}\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n                            return (\r\n                                <tr key={element.productID}>\r\n                                    <td>{element.productID}</td>\r\n                                    <td>{element.quantity}</td>\r\n                                    {/* <td>{element.requiredDate}</td>\r\n                                    <td>{element.price}</td>\r\n                                    <td>{element.name}</td> */}\r\n                                    <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n                                </tr>\r\n                            )\r\n                        }) : null}\r\n                    </tbody>\r\n                </table>\r\n          \r\n          \r\n        )\r\n                    \r\n    }\r\n}\r\n\r\n// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n// import DoneIcon from '@mui/icons-material/Done';\r\n// import Box from '@mui/material/Box';\r\n// // import Tabs from '@mui/material/Tabs';\r\n// // import Tab from '@mui/material/Tab';\r\n// // import Procurementapproval from './Procurementapproval';\r\n// // import Hrreject from './Hrreject';\r\n\r\n \r\n// export default function CenteredTabs() {\r\n//  const [value, setValue] = React.useState(0);\r\n//  const [data, setData] = useState([]);\r\n//  const [ashow, setAShow] = useState(false);\r\n//  const [rshow, setRShow] = useState(false);\r\n//  const [pshow, setPShow] = useState(true);\r\n \r\n//  const handleChange = (event, newValue) => {\r\n//    if(newValue == 0){\r\n//      setPShow(true);\r\n//      setAShow(false);\r\n//      setRShow(false);\r\n//    }else if(newValue == 1){\r\n//     setPShow(false);\r\n//     setAShow(true);\r\n//     setRShow(false);\r\n//   }\r\n//   else if(newValue == 2){\r\n//     setPShow(false);\r\n//     setAShow(false);\r\n//     setRShow(true);\r\n//   }\r\n//    setValue(newValue);\r\n//  };\r\n   \r\n//   useEffect(()=> {\r\n//    console.log(\"trying to load procurement customer on page load\")\r\n//      handleRefresh();\r\n// } ,[])\r\n \r\n// const handleRefresh = () => {\r\n//  axios.get('http://localhost:8080/procurement')\r\n//    .then((response) => {\r\n//      console.log(response)\r\n//      setData(response.data);\r\n//    }).catch((err) => {\r\n//      console.log(err);\r\n//    })\r\n// }\r\n\r\n \r\n// const handleApprove = (row, id) => {\r\n//  console.log(id)\r\n  \r\n//    axios.post('/procurement/approve/'+row.id)\r\n//      .then((response) => {\r\n//        console.log('new item added',response);\r\n//        handleRefresh();\r\n//      }).catch((err) => {\r\n//        console.log(err)\r\n//      })\r\n//  }\r\n//  const handleReject = (row, id) => {\r\n//    console.log(id);\r\n  \r\n//    axios.post('/procurement/reject/' +row.id,)\r\n//      .then((response) => {\r\n//        console.log(response);\r\n//        handleRefresh();\r\n      \r\n//      }).catch((err) => {\r\n//        console.log(err);\r\n//      })\r\n//  }\r\n//   return (\r\n//    <TableContainer component={Paper}>\r\n//     <div key='div'>\r\n       \r\n    \r\n//    </div>\r\n//    { pshow?\r\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \r\n//         <TableHead>\r\n//           <TableRow>\r\n//            <TableCell align=\"center\">Title</TableCell>\r\n         \r\n//            <TableCell align=\"center\">Quantity</TableCell>\r\n//            <TableCell align=\"center\">Price</TableCell>\r\n          \r\n//            <TableCell align=\"center\">Status</TableCell>\r\n     \r\n         \r\n//          </TableRow>\r\n//        </TableHead>\r\n//         <TableBody>\r\n//          {data.map((row, id) => (\r\n//            <TableRow\r\n//              key={row.name}\r\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n//            >\r\n \r\n//              <TableCell align=\"center\">{row.title}</TableCell>\r\n         \r\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\r\n//              <TableCell align=\"center\">{row.price}</TableCell>\r\n           \r\n//              <TableCell align=\"center\">{row.status}</TableCell>\r\n//              <TableCell align=\"center\">\r\n            \r\n            \r\n            \r\n//               </TableCell>\r\n//              <TableCell align=\"center\">\r\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\r\n//                <CloseIcon onClick={() => handleReject(row, id)} />\r\n//              </TableCell>\r\n//            </TableRow>\r\n//          ))}\r\n \r\n \r\n        \r\n//        </TableBody> \r\n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\r\n//      }\r\n//     </TableContainer>\r\n//   );\r\n// }\r\n \r\n"]},"metadata":{},"sourceType":"module"}