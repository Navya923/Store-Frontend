{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getWindow } from './dom/getWindow';\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\n\nvar DelayedRender =\n/** @class */\nfunction (_super) {\n  __extends(DelayedRender, _super);\n\n  function DelayedRender(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      isRendered: getWindow() === undefined\n    };\n    return _this;\n  }\n\n  DelayedRender.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var delay = this.props.delay;\n    this._timeoutId = window.setTimeout(function () {\n      _this.setState({\n        isRendered: true\n      });\n    }, delay);\n  };\n\n  DelayedRender.prototype.componentWillUnmount = function () {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  };\n\n  DelayedRender.prototype.render = function () {\n    return this.state.isRendered ? React.Children.only(this.props.children) : null;\n  };\n\n  DelayedRender.defaultProps = {\n    delay: 0\n  };\n  return DelayedRender;\n}(React.Component);\n\nexport { DelayedRender };","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AA2BA;;;;;;;;;AAQA;AAAA;AAAA;AAAmCC;;AAOjC,yBAAYC,KAAZ,EAAsC;AAAtC,gBACEC,kBAAMD,KAAN,KAAY,IADd;;AAEEE,SAAI,CAACC,KAAL,GAAa;AACXC,gBAAU,EAAEN,SAAS,OAAOO;AADjB,KAAb;;AAGD;;AAEMC,8CAAP;AAAA;;AACQ,aAAK,GAAK,KAAKN,KAAL,CAAUO,KAApB;AACN,SAAKC,UAAL,GAAkBC,MAAM,CAACC,UAAP,CAAkB;AAClCR,WAAI,CAACS,QAAL,CAAc;AACZP,kBAAU,EAAE;AADA,OAAd;AAGD,KAJiB,EAIfG,KAJe,CAAlB;AAKD,GAPM;;AASAD,iDAAP;AACE,QAAI,KAAKE,UAAT,EAAqB;AACnBI,kBAAY,CAAC,KAAKJ,UAAN,CAAZ;AACD;AACF,GAJM;;AAMAF,mCAAP;AACE,WAAO,KAAKH,KAAL,CAAWC,UAAX,GAAyBP,KAAK,CAACgB,QAAN,CAAeC,IAAf,CAAoB,KAAKd,KAAL,CAAWe,QAA/B,CAAzB,GAA+F,IAAtG;AACD,GAFM;;AA5BOT,+BAAe;AAC3BC,SAAK,EAAE;AADoB,GAAf;AA+BhB;AAhCA,EAAmCV,KAAK,CAACmB,SAAzC;;SAAaV","names":["React","getWindow","__extends","props","_super","_this","state","isRendered","undefined","DelayedRender","delay","_timeoutId","window","setTimeout","setState","clearTimeout","Children","only","children","Component"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/utilities/src/DelayedRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// eslint-disable-next-line deprecation/deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: getWindow() === undefined,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}