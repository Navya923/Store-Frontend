{"ast":null,"code":"/**\n * The helper functions here will make the target element as modal to screen readers, by placing aria-hidden on elements\n * that are siblings to the target element and the target element's ancestors (because aria-hidden gets inherited).\n * That way, all other elements on the page are hidden to the screen reader.\n */\nimport { getDocument } from './dom/getDocument';\n/** Tag names to ignore when modalizing */\n\nvar tagsToIgnore = ['TEMPLATE', 'STYLE', 'SCRIPT'];\n/**\n * Call this on a target element to make it modal to screen readers.\n * Returns a function that undoes the changes it made.\n */\n\nexport function modalize(target) {\n  var targetDocument = getDocument(target);\n\n  if (!targetDocument) {\n    // can't do this in SSR\n    return function () {\n      return undefined;\n    };\n  }\n\n  var affectedNodes = []; // start at target, then recurse and do the same for parent, until we reach <body>\n\n  while (target !== targetDocument.body && target.parentElement) {\n    // grab all siblings of current element\n    for (var _i = 0, _a = target.parentElement.children; _i < _a.length; _i++) {\n      var sibling = _a[_i]; // but ignore elements that are already aria-hidden\n\n      var ariaHidden = sibling.getAttribute('aria-hidden');\n\n      if (sibling !== target && (ariaHidden === null || ariaHidden === void 0 ? void 0 : ariaHidden.toLowerCase()) !== 'true' && tagsToIgnore.indexOf(sibling.tagName) === -1) {\n        affectedNodes.push([sibling, ariaHidden]);\n      }\n    }\n\n    target = target.parentElement;\n  } // take all those elements and set aria-hidden=true on them\n\n\n  affectedNodes.forEach(function (_a) {\n    var node = _a[0];\n    node.setAttribute('aria-hidden', 'true');\n  });\n  return function () {\n    unmodalize(affectedNodes);\n    affectedNodes = []; // dispose\n  };\n}\n/**\n * Undoes the changes that modalize() did.\n */\n\nfunction unmodalize(affectedNodes) {\n  affectedNodes.forEach(function (_a) {\n    var node = _a[0],\n        originalValue = _a[1]; // Restore the original value (false or unset)\n\n    if (originalValue) {\n      node.setAttribute('aria-hidden', originalValue);\n    } else {\n      node.removeAttribute('aria-hidden');\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA;;;;;AAMA,SAASA,WAAT,QAA4B,mBAA5B;AAEA;;AACA,IAAMC,YAAY,GAAG,CAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CAArB;AAEA;;;;;AAIA,OAAM,SAAUC,QAAV,CAAmBC,MAAnB,EAAsC;AAC1C,MAAMC,cAAc,GAAGJ,WAAW,CAACG,MAAD,CAAlC;;AACA,MAAI,CAACC,cAAL,EAAqB;AACnB;AACA,WAAO;AAAM;AAAS,KAAtB;AACD;;AAED,MAAIC,aAAa,GAAmC,EAApD,CAP0C,CAS1C;;AACA,SAAOF,MAAM,KAAKC,cAAc,CAACE,IAA1B,IAAkCH,MAAM,CAACI,aAAhD,EAA+D;AAC7D;AACA,SAAsB,iBAACJ,MAAM,CAACI,aAAP,CAAqBC,QAA5C,EAAsBC,cAAtB,EAAsBA,IAAtB,EAAmF;AAA9E,UAAMC,OAAO,SAAb,CAA8E,CACjF;;AACA,UAAMC,UAAU,GAAGD,OAAO,CAACE,YAAR,CAAqB,aAArB,CAAnB;;AACA,UAAIF,OAAO,KAAKP,MAAZ,IAAsB,WAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEU,WAAZ,QAA8B,MAApD,IAA8DZ,YAAY,CAACa,OAAb,CAAqBJ,OAAO,CAACK,OAA7B,MAA0C,CAAC,CAA7G,EAAgH;AAC9GV,qBAAa,CAACW,IAAd,CAAmB,CAACN,OAAD,EAAUC,UAAV,CAAnB;AACD;AACF;;AAEDR,UAAM,GAAGA,MAAM,CAACI,aAAhB;AACD,GArByC,CAuB1C;;;AACAF,eAAa,CAACY,OAAd,CAAsB,UAACC,EAAD,EAAO;QAALC,IAAI;AAC1BA,QAAI,CAACC,YAAL,CAAkB,aAAlB,EAAiC,MAAjC;AACD,GAFD;AAIA,SAAO;AACLC,cAAU,CAAChB,aAAD,CAAV;AACAA,iBAAa,GAAG,EAAhB,CAFK,CAEe;AACrB,GAHD;AAID;AAED;;;;AAGA,SAASgB,UAAT,CAAoBhB,aAApB,EAAiE;AAC/DA,eAAa,CAACY,OAAd,CAAsB,UAACC,EAAD,EAAsB;QAApBC,IAAI;QAAEG,aAAa,SAAC,CAC1C;;AACA,QAAIA,aAAJ,EAAmB;AACjBH,UAAI,CAACC,YAAL,CAAkB,aAAlB,EAAiCE,aAAjC;AACD,KAFD,MAEO;AACLH,UAAI,CAACI,eAAL,CAAqB,aAArB;AACD;AACF,GAPD;AAQD","names":["getDocument","tagsToIgnore","modalize","target","targetDocument","affectedNodes","body","parentElement","children","_i","sibling","ariaHidden","getAttribute","toLowerCase","indexOf","tagName","push","forEach","_a","node","setAttribute","unmodalize","originalValue","removeAttribute"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/utilities/src/modalize.ts"],"sourcesContent":["/**\n * The helper functions here will make the target element as modal to screen readers, by placing aria-hidden on elements\n * that are siblings to the target element and the target element's ancestors (because aria-hidden gets inherited).\n * That way, all other elements on the page are hidden to the screen reader.\n */\n\nimport { getDocument } from './dom/getDocument';\n\n/** Tag names to ignore when modalizing */\nconst tagsToIgnore = ['TEMPLATE', 'STYLE', 'SCRIPT'];\n\n/**\n * Call this on a target element to make it modal to screen readers.\n * Returns a function that undoes the changes it made.\n */\nexport function modalize(target: HTMLElement): () => void {\n  const targetDocument = getDocument(target);\n  if (!targetDocument) {\n    // can't do this in SSR\n    return () => undefined;\n  }\n\n  let affectedNodes: [HTMLElement, string | null][] = [];\n\n  // start at target, then recurse and do the same for parent, until we reach <body>\n  while (target !== targetDocument.body && target.parentElement) {\n    // grab all siblings of current element\n    for (const sibling of (target.parentElement.children as unknown) as HTMLElement[]) {\n      // but ignore elements that are already aria-hidden\n      const ariaHidden = sibling.getAttribute('aria-hidden');\n      if (sibling !== target && ariaHidden?.toLowerCase() !== 'true' && tagsToIgnore.indexOf(sibling.tagName) === -1) {\n        affectedNodes.push([sibling, ariaHidden]);\n      }\n    }\n\n    target = target.parentElement;\n  }\n\n  // take all those elements and set aria-hidden=true on them\n  affectedNodes.forEach(([node]) => {\n    node.setAttribute('aria-hidden', 'true');\n  });\n\n  return () => {\n    unmodalize(affectedNodes);\n    affectedNodes = []; // dispose\n  };\n}\n\n/**\n * Undoes the changes that modalize() did.\n */\nfunction unmodalize(affectedNodes: [HTMLElement, string | null][]) {\n  affectedNodes.forEach(([node, originalValue]) => {\n    // Restore the original value (false or unset)\n    if (originalValue) {\n      node.setAttribute('aria-hidden', originalValue);\n    } else {\n      node.removeAttribute('aria-hidden');\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}