{"ast":null,"code":"var _a;\n\nimport { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { css, divProperties, elementContains, focusFirstChild, getNativeProps, on, shallowCompare, getPropsWithDefaults } from '../../Utilities';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nvar COMPONENT_NAME = 'CalloutContentBase';\nvar ANIMATIONS = (_a = {}, _a[RectangleEdge.top] = AnimationClassNames.slideUpIn10, _a[RectangleEdge.bottom] = AnimationClassNames.slideDownIn10, _a[RectangleEdge.left] = AnimationClassNames.slideLeftIn10, _a[RectangleEdge.right] = AnimationClassNames.slideRightIn10, _a);\nvar BEAK_ORIGIN_POSITION = {\n  top: 0,\n  left: 0\n}; // Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\n\nvar OFF_SCREEN_STYLE = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none'\n}; // role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\n\nvar ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\nvar DEFAULT_PROPS = {\n  preventDismissOnLostFocus: false,\n  preventDismissOnScroll: false,\n  preventDismissOnResize: false,\n  isBeakVisible: true,\n  beakWidth: 16,\n  gapSpace: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge\n};\nvar getClassNames = classNamesFunction({\n  disableCaching: true // disabling caching because stylesProp.position mutates often\n\n});\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\n\nfunction useBounds(_a, targetRef, targetWindow) {\n  var bounds = _a.bounds,\n      _b = _a.minPagePadding,\n      minPagePadding = _b === void 0 ? DEFAULT_PROPS.minPagePadding : _b,\n      target = _a.target;\n\n  var _c = React.useState(false),\n      targetWindowResized = _c[0],\n      setTargetWindowResized = _c[1];\n\n  var cachedBounds = React.useRef();\n  var getBounds = React.useCallback(function () {\n    if (!cachedBounds.current || targetWindowResized) {\n      var currentBounds = typeof bounds === 'function' ? targetWindow ? bounds(target, targetWindow) : undefined : bounds;\n\n      if (!currentBounds && targetWindow) {\n        currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n        currentBounds = {\n          top: currentBounds.top + minPagePadding,\n          left: currentBounds.left + minPagePadding,\n          right: currentBounds.right - minPagePadding,\n          bottom: currentBounds.bottom - minPagePadding,\n          width: currentBounds.width - minPagePadding * 2,\n          height: currentBounds.height - minPagePadding * 2\n        };\n      }\n\n      cachedBounds.current = currentBounds;\n      targetWindowResized && setTargetWindowResized(false);\n    }\n\n    return cachedBounds.current;\n  }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n  var async = useAsync();\n  useOnEvent(targetWindow, 'resize', async.debounce(function () {\n    setTargetWindowResized(true);\n  }, 500, {\n    leading: true\n  }));\n  return getBounds;\n}\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\n\n\nfunction useMaxHeight(_a, getBounds, positions) {\n  var _b;\n\n  var calloutMaxHeight = _a.calloutMaxHeight,\n      finalHeight = _a.finalHeight,\n      directionalHint = _a.directionalHint,\n      directionalHintFixed = _a.directionalHintFixed,\n      hidden = _a.hidden;\n\n  var _c = React.useState(),\n      maxHeight = _c[0],\n      setMaxHeight = _c[1];\n\n  var _d = (_b = positions === null || positions === void 0 ? void 0 : positions.elementPosition) !== null && _b !== void 0 ? _b : {},\n      top = _d.top,\n      bottom = _d.bottom;\n\n  React.useEffect(function () {\n    var _a;\n\n    var _b = (_a = getBounds()) !== null && _a !== void 0 ? _a : {},\n        topBounds = _b.top,\n        bottomBounds = _b.bottom;\n\n    if (!calloutMaxHeight && !hidden) {\n      if (typeof top === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - top);\n      } else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - topBounds - bottom);\n      }\n    } else if (calloutMaxHeight) {\n      setMaxHeight(calloutMaxHeight);\n    } else {\n      setMaxHeight(undefined);\n    }\n  }, [bottom, calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, getBounds, hidden, positions, top]);\n  return maxHeight;\n}\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\n\n\nfunction usePositions(props, hostElement, calloutElement, targetRef, getBounds) {\n  var _a = React.useState(),\n      positions = _a[0],\n      setPositions = _a[1];\n\n  var positionAttempts = React.useRef(0);\n  var previousTarget = React.useRef();\n  var async = useAsync();\n  var hidden = props.hidden,\n      target = props.target,\n      finalHeight = props.finalHeight,\n      calloutMaxHeight = props.calloutMaxHeight,\n      onPositioned = props.onPositioned,\n      directionalHint = props.directionalHint;\n  React.useEffect(function () {\n    if (!hidden) {\n      var timerId_1 = async.requestAnimationFrame(function () {\n        var _a, _b;\n\n        if (hostElement.current && calloutElement) {\n          var currentProps = __assign(__assign({}, props), {\n            target: targetRef.current,\n            bounds: getBounds()\n          }); // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n\n\n          var dupeCalloutElement = calloutElement.cloneNode(true);\n          dupeCalloutElement.style.maxHeight = calloutMaxHeight ? \"\" + calloutMaxHeight : '';\n          dupeCalloutElement.style.visibility = 'hidden';\n          (_a = calloutElement.parentElement) === null || _a === void 0 ? void 0 : _a.appendChild(dupeCalloutElement);\n          var previousPositions = previousTarget.current === target ? positions : undefined; // If there is a finalHeight given then we assume that the user knows and will handle\n          // additional positioning adjustments so we should call positionCard\n\n          var newPositions = finalHeight ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions) : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions); // clean up duplicate calloutElement\n\n          (_b = calloutElement.parentElement) === null || _b === void 0 ? void 0 : _b.removeChild(dupeCalloutElement); // Set the new position only when the positions do not exist or one of the new callout positions\n          // is different. The position should not change if the position is within 2 decimal places.\n\n          if (!positions && newPositions || positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5) {\n            // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n            // and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n          } else if (positionAttempts.current > 0) {\n            // Only call the onPositioned callback if the callout has been re-positioned at least once.\n            positionAttempts.current = 0;\n            onPositioned === null || onPositioned === void 0 ? void 0 : onPositioned(positions);\n          }\n        }\n      }, calloutElement);\n      previousTarget.current = target;\n      return function () {\n        async.cancelAnimationFrame(timerId_1);\n        previousTarget.current = undefined;\n      };\n    } else {\n      // When the callout is hidden, clear position state so that it is not accidentally used next render.\n      setPositions(undefined);\n      positionAttempts.current = 0;\n    }\n  }, [hidden, directionalHint, async, calloutElement, calloutMaxHeight, hostElement, targetRef, finalHeight, getBounds, onPositioned, positions, props, target]);\n  return positions;\n}\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\n\n\nfunction useAutoFocus(_a, positions, calloutElement) {\n  var hidden = _a.hidden,\n      setInitialFocus = _a.setInitialFocus;\n  var async = useAsync();\n  var hasPositions = !!positions;\n  React.useEffect(function () {\n    if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n      var timerId_2 = async.requestAnimationFrame(function () {\n        return focusFirstChild(calloutElement);\n      }, calloutElement);\n      return function () {\n        return async.cancelAnimationFrame(timerId_2);\n      };\n    }\n  }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\n\n\nfunction useDismissHandlers(_a, positions, hostElement, targetRef, targetWindow) {\n  var hidden = _a.hidden,\n      onDismiss = _a.onDismiss,\n      // eslint-disable-next-line deprecation/deprecation\n  preventDismissOnScroll = _a.preventDismissOnScroll,\n      // eslint-disable-next-line deprecation/deprecation\n  preventDismissOnResize = _a.preventDismissOnResize,\n      // eslint-disable-next-line deprecation/deprecation\n  preventDismissOnLostFocus = _a.preventDismissOnLostFocus,\n      dismissOnTargetClick = _a.dismissOnTargetClick,\n      shouldDismissOnWindowFocus = _a.shouldDismissOnWindowFocus,\n      preventDismissOnEvent = _a.preventDismissOnEvent;\n  var isMouseDownOnPopup = React.useRef(false);\n  var async = useAsync();\n  var mouseDownHandlers = useConst([function () {\n    isMouseDownOnPopup.current = true;\n  }, function () {\n    isMouseDownOnPopup.current = false;\n  }]);\n  var positionsExists = !!positions;\n  React.useEffect(function () {\n    var dismissOnScroll = function (ev) {\n      if (positionsExists && !preventDismissOnScroll) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    var dismissOnResize = function (ev) {\n      if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n        onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n      }\n    };\n\n    var dismissOnLostFocus = function (ev) {\n      if (!preventDismissOnLostFocus) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    var dismissOnClickOrScroll = function (ev) {\n      var target = ev.target;\n      var isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target); // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n\n      if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n        isMouseDownOnPopup.current = false;\n        return;\n      }\n\n      if (!targetRef.current && isEventTargetOutsideCallout || ev.target !== targetWindow && isEventTargetOutsideCallout && (!targetRef.current || 'stopPropagation' in targetRef.current || dismissOnTargetClick || target !== targetRef.current && !elementContains(targetRef.current, target))) {\n        if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n          return;\n        }\n\n        onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n      }\n    };\n\n    var dismissOnTargetWindowBlur = function (ev) {\n      // Do nothing\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if ((preventDismissOnEvent && !preventDismissOnEvent(ev) || !preventDismissOnEvent && !preventDismissOnLostFocus) && !(targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.hasFocus()) && ev.relatedTarget === null) {\n        onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n      }\n    }; // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n\n\n    var disposablesPromise = new Promise(function (resolve) {\n      async.setTimeout(function () {\n        if (!hidden && targetWindow) {\n          var disposables_1 = [on(targetWindow, 'scroll', dismissOnScroll, true), on(targetWindow, 'resize', dismissOnResize, true), on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true), on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true), on(targetWindow, 'blur', dismissOnTargetWindowBlur, true)];\n          resolve(function () {\n            disposables_1.forEach(function (dispose) {\n              return dispose();\n            });\n          });\n        }\n      }, 0);\n    });\n    return function () {\n      disposablesPromise.then(function (dispose) {\n        return dispose();\n      });\n    };\n  }, [hidden, async, hostElement, targetRef, targetWindow, onDismiss, shouldDismissOnWindowFocus, dismissOnTargetClick, preventDismissOnLostFocus, preventDismissOnResize, preventDismissOnScroll, positionsExists, preventDismissOnEvent]);\n  return mouseDownHandlers;\n}\n\nexport var CalloutContentBase = React.memo(React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  var styles = props.styles,\n      style = props.style,\n      ariaLabel = props.ariaLabel,\n      ariaDescribedBy = props.ariaDescribedBy,\n      ariaLabelledBy = props.ariaLabelledBy,\n      className = props.className,\n      isBeakVisible = props.isBeakVisible,\n      children = props.children,\n      beakWidth = props.beakWidth,\n      calloutWidth = props.calloutWidth,\n      calloutMaxWidth = props.calloutMaxWidth,\n      calloutMinWidth = props.calloutMinWidth,\n      doNotLayer = props.doNotLayer,\n      finalHeight = props.finalHeight,\n      _a = props.hideOverflow,\n      hideOverflow = _a === void 0 ? !!finalHeight : _a,\n      backgroundColor = props.backgroundColor,\n      calloutMaxHeight = props.calloutMaxHeight,\n      onScroll = props.onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n  _b = props.shouldRestoreFocus,\n      // eslint-disable-next-line deprecation/deprecation\n  shouldRestoreFocus = _b === void 0 ? true : _b,\n      target = props.target,\n      hidden = props.hidden,\n      onLayerMounted = props.onLayerMounted;\n  var hostElement = React.useRef(null);\n\n  var _c = React.useState(null),\n      calloutElement = _c[0],\n      setCalloutElement = _c[1];\n\n  var calloutCallback = React.useCallback(function (calloutEl) {\n    setCalloutElement(calloutEl);\n  }, []);\n  var rootRef = useMergedRefs(hostElement, forwardedRef);\n\n  var _d = useTarget(props.target, {\n    current: calloutElement\n  }),\n      targetRef = _d[0],\n      targetWindow = _d[1];\n\n  var getBounds = useBounds(props, targetRef, targetWindow);\n  var positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds);\n  var maxHeight = useMaxHeight(props, getBounds, positions);\n\n  var _e = useDismissHandlers(props, positions, hostElement, targetRef, targetWindow),\n      mouseDownOnPopup = _e[0],\n      mouseUpOnPopup = _e[1]; // do not set both top and bottom css props from positions\n  // instead, use maxHeight\n\n\n  var isForcedInBounds = (positions === null || positions === void 0 ? void 0 : positions.elementPosition.top) && (positions === null || positions === void 0 ? void 0 : positions.elementPosition.bottom);\n\n  var cssPositions = __assign(__assign({}, positions === null || positions === void 0 ? void 0 : positions.elementPosition), {\n    maxHeight: maxHeight\n  });\n\n  if (isForcedInBounds) {\n    cssPositions.bottom = undefined;\n  }\n\n  useAutoFocus(props, positions, calloutElement);\n  React.useEffect(function () {\n    if (!hidden) {\n      onLayerMounted === null || onLayerMounted === void 0 ? void 0 : onLayerMounted();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n\n  }, [hidden]); // If there is no target window then we are likely in server side rendering and we should not render anything.\n\n  if (!targetWindow) {\n    return null;\n  }\n\n  var overflowYHidden = hideOverflow;\n  var beakVisible = isBeakVisible && !!target;\n  var classNames = getClassNames(styles, {\n    theme: props.theme,\n    className: className,\n    overflowYHidden: overflowYHidden,\n    calloutWidth: calloutWidth,\n    positions: positions,\n    beakWidth: beakWidth,\n    backgroundColor: backgroundColor,\n    calloutMaxWidth: calloutMaxWidth,\n    calloutMinWidth: calloutMinWidth,\n    doNotLayer: doNotLayer\n  });\n\n  var overflowStyle = __assign(__assign({\n    maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%'\n  }, style), overflowYHidden && {\n    overflowY: 'hidden'\n  });\n\n  var visibilityStyle = props.hidden ? {\n    visibility: 'hidden'\n  } : undefined; // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n\n  return React.createElement(\"div\", {\n    ref: rootRef,\n    className: classNames.container,\n    style: visibilityStyle\n  }, React.createElement(\"div\", __assign({}, getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES), {\n    className: css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge]),\n    style: positions ? __assign({}, cssPositions) : OFF_SCREEN_STYLE,\n    // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n    // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n    tabIndex: -1,\n    ref: calloutCallback\n  }), beakVisible && React.createElement(\"div\", {\n    className: classNames.beak,\n    style: getBeakPosition(positions)\n  }), beakVisible && React.createElement(\"div\", {\n    className: classNames.beakCurtain\n  }), React.createElement(Popup, __assign({}, getNativeProps(props, ARIA_ROLE_ATTRIBUTES), {\n    ariaDescribedBy: ariaDescribedBy,\n    ariaLabel: ariaLabel,\n    ariaLabelledBy: ariaLabelledBy,\n    className: classNames.calloutMain,\n    onDismiss: props.onDismiss,\n    onMouseDown: mouseDownOnPopup,\n    onMouseUp: mouseUpOnPopup,\n    onRestoreFocus: props.onRestoreFocus,\n    onScroll: onScroll,\n    shouldRestoreFocus: shouldRestoreFocus,\n    style: overflowStyle\n  }), children)));\n}), function (previousProps, nextProps) {\n  if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n    // Do not update when hidden.\n    return true;\n  }\n\n  return shallowCompare(previousProps, nextProps);\n});\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\n\nfunction getBeakPosition(positions) {\n  var _a, _b;\n\n  var beakPositionStyle = __assign(__assign({}, (_a = positions === null || positions === void 0 ? void 0 : positions.beakPosition) === null || _a === void 0 ? void 0 : _a.elementPosition), {\n    display: ((_b = positions === null || positions === void 0 ? void 0 : positions.beakPosition) === null || _b === void 0 ? void 0 : _b.hideBeak) ? 'none' : undefined\n  });\n\n  if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n    beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n    beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n  }\n\n  return beakPositionStyle;\n}\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\n\n\nfunction arePositionsEqual(prevElementPositions, newElementPosition) {\n  return comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) && comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition);\n}\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\n\n\nfunction comparePositions(prevElementPositions, newElementPositions) {\n  for (var key in newElementPositions) {\n    if (newElementPositions.hasOwnProperty(key)) {\n      var oldPositionEdge = prevElementPositions[key];\n      var newPositionEdge = newElementPositions[key];\n\n      if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nCalloutContentBase.displayName = COMPONENT_NAME;","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/react/lib/components/src/components/Callout/CalloutContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport {\n  css,\n  divProperties,\n  elementContains,\n  focusFirstChild,\n  getNativeProps,\n  on,\n  shallowCompare,\n  getPropsWithDefaults,\n  Async,\n} from '../../Utilities';\nimport { positionCallout, RectangleEdge, positionCard, getBoundsFromTargetWindow } from '../../Positioning';\nimport { Popup } from '../../Popup';\nimport { classNamesFunction } from '../../Utilities';\nimport { AnimationClassNames } from '../../Styling';\nimport { useMergedRefs, useAsync, useConst, useTarget, useOnEvent } from '@fluentui/react-hooks';\nimport type { ICalloutProps, ICalloutContentStyleProps, ICalloutContentStyles } from './Callout.types';\nimport type { Point, IRectangle } from '../../Utilities';\nimport type { ICalloutPositionedInfo, IPositionProps, IPosition } from '../../Positioning';\nimport type { Target } from '@fluentui/react-hooks';\n\nconst COMPONENT_NAME = 'CalloutContentBase';\n\nconst ANIMATIONS: { [key: number]: string | undefined } = {\n  [RectangleEdge.top]: AnimationClassNames.slideUpIn10,\n  [RectangleEdge.bottom]: AnimationClassNames.slideDownIn10,\n  [RectangleEdge.left]: AnimationClassNames.slideLeftIn10,\n  [RectangleEdge.right]: AnimationClassNames.slideRightIn10,\n};\n\nconst BEAK_ORIGIN_POSITION = { top: 0, left: 0 };\n// Microsoft Edge will overwrite inline styles if there is an animation pertaining to that style.\n// To help ensure that edge will respect the offscreen style opacity\n// filter needs to be added as an additional way to set opacity.\n// Also set pointer-events: none so that the callout will not occlude the element it is\n// going to be positioned against\nconst OFF_SCREEN_STYLE: React.CSSProperties = {\n  opacity: 0,\n  filter: 'opacity(0)',\n  pointerEvents: 'none',\n};\n// role and role description go hand-in-hand. Both would be included by spreading getNativeProps for a basic element\n// This constant array can be used to filter these out of native props spread on callout root and apply them together on\n// calloutMain (the Popup component within the callout)\nconst ARIA_ROLE_ATTRIBUTES = ['role', 'aria-roledescription'];\n\nconst DEFAULT_PROPS = {\n  preventDismissOnLostFocus: false,\n  preventDismissOnScroll: false,\n  preventDismissOnResize: false,\n  isBeakVisible: true,\n  beakWidth: 16,\n  gapSpace: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n} as const;\n\nconst getClassNames = classNamesFunction<ICalloutContentStyleProps, ICalloutContentStyles>({\n  disableCaching: true, // disabling caching because stylesProp.position mutates often\n});\n\n/**\n * (Hook) to return a function to lazily fetch the bounds of the target element for the callout.\n */\nfunction useBounds(\n  { bounds, minPagePadding = DEFAULT_PROPS.minPagePadding, target }: ICalloutProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const [targetWindowResized, setTargetWindowResized] = React.useState(false);\n  const cachedBounds = React.useRef<IRectangle | undefined>();\n\n  const getBounds = React.useCallback((): IRectangle | undefined => {\n    if (!cachedBounds.current || targetWindowResized) {\n      let currentBounds =\n        typeof bounds === 'function' ? (targetWindow ? bounds(target, targetWindow) : undefined) : bounds;\n\n      if (!currentBounds && targetWindow) {\n        currentBounds = getBoundsFromTargetWindow(targetRef.current, targetWindow);\n        currentBounds = {\n          top: currentBounds.top + minPagePadding,\n          left: currentBounds.left + minPagePadding,\n          right: currentBounds.right! - minPagePadding,\n          bottom: currentBounds.bottom! - minPagePadding,\n          width: currentBounds.width - minPagePadding * 2,\n          height: currentBounds.height - minPagePadding * 2,\n        };\n      }\n      cachedBounds.current = currentBounds;\n      targetWindowResized && setTargetWindowResized(false);\n    }\n\n    return cachedBounds.current;\n  }, [bounds, minPagePadding, target, targetRef, targetWindow, targetWindowResized]);\n\n  const async: Async = useAsync();\n  useOnEvent(\n    targetWindow,\n    'resize',\n    async.debounce(\n      () => {\n        setTargetWindowResized(true);\n      },\n      500,\n      { leading: true },\n    ),\n  );\n\n  return getBounds;\n}\n\n/**\n * (Hook) to return the maximum available height for the Callout to render into.\n */\nfunction useMaxHeight(\n  { calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, hidden }: ICalloutProps,\n  getBounds: () => IRectangle | undefined,\n  positions?: ICalloutPositionedInfo,\n) {\n  const [maxHeight, setMaxHeight] = React.useState<number | undefined>();\n  const { top, bottom } = positions?.elementPosition ?? {};\n\n  React.useEffect(() => {\n    const { top: topBounds, bottom: bottomBounds } = getBounds() ?? {};\n\n    if (!calloutMaxHeight && !hidden) {\n      if (typeof top === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - top);\n      } else if (typeof bottom === 'number' && typeof topBounds === 'number' && bottomBounds) {\n        setMaxHeight(bottomBounds - topBounds - bottom);\n      }\n    } else if (calloutMaxHeight) {\n      setMaxHeight(calloutMaxHeight);\n    } else {\n      setMaxHeight(undefined);\n    }\n  }, [bottom, calloutMaxHeight, finalHeight, directionalHint, directionalHintFixed, getBounds, hidden, positions, top]);\n\n  return maxHeight;\n}\n\n/**\n * (Hook) to find the current position of Callout. If Callout is resized then a new position is calculated.\n */\nfunction usePositions(\n  props: ICalloutProps,\n  hostElement: React.RefObject<HTMLDivElement>,\n  calloutElement: HTMLDivElement | null,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getBounds: () => IRectangle | undefined,\n) {\n  const [positions, setPositions] = React.useState<ICalloutPositionedInfo>();\n  const positionAttempts = React.useRef(0);\n  const previousTarget = React.useRef<Target>();\n  const async = useAsync();\n  const { hidden, target, finalHeight, calloutMaxHeight, onPositioned, directionalHint } = props;\n\n  React.useEffect(() => {\n    if (!hidden) {\n      const timerId = async.requestAnimationFrame(() => {\n        if (hostElement.current && calloutElement) {\n          const currentProps: IPositionProps = {\n            ...props,\n            target: targetRef.current!,\n            bounds: getBounds(),\n          };\n\n          // duplicate calloutElement & remove useMaxHeight's maxHeight for position calc\n          const dupeCalloutElement = calloutElement.cloneNode(true) as HTMLElement;\n          dupeCalloutElement.style.maxHeight = calloutMaxHeight ? `${calloutMaxHeight}` : '';\n          dupeCalloutElement.style.visibility = 'hidden';\n          calloutElement.parentElement?.appendChild(dupeCalloutElement);\n\n          const previousPositions = previousTarget.current === target ? positions : undefined;\n\n          // If there is a finalHeight given then we assume that the user knows and will handle\n          // additional positioning adjustments so we should call positionCard\n          const newPositions: ICalloutPositionedInfo = finalHeight\n            ? positionCard(currentProps, hostElement.current, dupeCalloutElement, previousPositions)\n            : positionCallout(currentProps, hostElement.current, dupeCalloutElement, previousPositions);\n\n          // clean up duplicate calloutElement\n          calloutElement.parentElement?.removeChild(dupeCalloutElement);\n\n          // Set the new position only when the positions do not exist or one of the new callout positions\n          // is different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the callout more than a few times, if it is then the content is likely resizing\n            // and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n          } else if (positionAttempts.current > 0) {\n            // Only call the onPositioned callback if the callout has been re-positioned at least once.\n            positionAttempts.current = 0;\n            onPositioned?.(positions);\n          }\n        }\n      }, calloutElement);\n\n      previousTarget.current = target;\n\n      return () => {\n        async.cancelAnimationFrame(timerId);\n        previousTarget.current = undefined;\n      };\n    } else {\n      // When the callout is hidden, clear position state so that it is not accidentally used next render.\n      setPositions(undefined);\n      positionAttempts.current = 0;\n    }\n  }, [\n    hidden,\n    directionalHint,\n    async,\n    calloutElement,\n    calloutMaxHeight,\n    hostElement,\n    targetRef,\n    finalHeight,\n    getBounds,\n    onPositioned,\n    positions,\n    props,\n    target,\n  ]);\n\n  return positions;\n}\n\n/**\n * (Hook) to set up behavior to automatically focus the callout when it appears, if indicated by props.\n */\nfunction useAutoFocus(\n  { hidden, setInitialFocus }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  calloutElement: HTMLDivElement | null,\n) {\n  const async = useAsync();\n  const hasPositions = !!positions;\n  React.useEffect(() => {\n    if (!hidden && setInitialFocus && hasPositions && calloutElement) {\n      const timerId = async.requestAnimationFrame(() => focusFirstChild(calloutElement), calloutElement);\n\n      return () => async.cancelAnimationFrame(timerId);\n    }\n  }, [hidden, hasPositions, async, calloutElement, setInitialFocus]);\n}\n\n/**\n * (Hook) to set up various handlers to dismiss the popup when it loses focus or the window scrolls or similar cases.\n */\nfunction useDismissHandlers(\n  {\n    hidden,\n    onDismiss,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnScroll,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnResize,\n    // eslint-disable-next-line deprecation/deprecation\n    preventDismissOnLostFocus,\n    dismissOnTargetClick,\n    shouldDismissOnWindowFocus,\n    preventDismissOnEvent,\n  }: ICalloutProps,\n  positions: ICalloutPositionedInfo | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  targetWindow: Window | undefined,\n) {\n  const isMouseDownOnPopup = React.useRef(false);\n  const async = useAsync();\n\n  const mouseDownHandlers = useConst([\n    () => {\n      isMouseDownOnPopup.current = true;\n    },\n    () => {\n      isMouseDownOnPopup.current = false;\n    },\n  ] as const);\n\n  const positionsExists = !!positions;\n\n  React.useEffect(() => {\n    const dismissOnScroll = (ev: Event) => {\n      if (positionsExists && !preventDismissOnScroll) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnResize = (ev: Event) => {\n      if (!preventDismissOnResize && !(preventDismissOnEvent && preventDismissOnEvent(ev))) {\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnLostFocus = (ev: Event) => {\n      if (!preventDismissOnLostFocus) {\n        dismissOnClickOrScroll(ev);\n      }\n    };\n\n    const dismissOnClickOrScroll = (ev: Event) => {\n      const target = ev.target as HTMLElement;\n      const isEventTargetOutsideCallout = hostElement.current && !elementContains(hostElement.current, target);\n\n      // If mouse is pressed down on callout but moved outside then released, don't dismiss the callout.\n      if (isEventTargetOutsideCallout && isMouseDownOnPopup.current) {\n        isMouseDownOnPopup.current = false;\n        return;\n      }\n\n      if (\n        (!targetRef.current && isEventTargetOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          isEventTargetOutsideCallout &&\n          (!targetRef.current ||\n            'stopPropagation' in targetRef.current ||\n            dismissOnTargetClick ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        if (preventDismissOnEvent && preventDismissOnEvent(ev)) {\n          return;\n        }\n        onDismiss?.(ev);\n      }\n    };\n\n    const dismissOnTargetWindowBlur = (ev: FocusEvent) => {\n      // Do nothing\n      if (!shouldDismissOnWindowFocus) {\n        return;\n      }\n\n      if (\n        ((preventDismissOnEvent && !preventDismissOnEvent(ev)) ||\n          (!preventDismissOnEvent && !preventDismissOnLostFocus)) &&\n        !targetWindow?.document.hasFocus() &&\n        ev.relatedTarget === null\n      ) {\n        onDismiss?.(ev);\n      }\n    };\n\n    // This is added so the callout will dismiss when the window is scrolled\n    // but not when something inside the callout is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the callout.\n    const disposablesPromise = new Promise<() => void>(resolve => {\n      async.setTimeout(() => {\n        if (!hidden && targetWindow) {\n          const disposables = [\n            on(targetWindow, 'scroll', dismissOnScroll, true),\n            on(targetWindow, 'resize', dismissOnResize, true),\n            on(targetWindow.document.documentElement, 'focus', dismissOnLostFocus, true),\n            on(targetWindow.document.documentElement, 'click', dismissOnLostFocus, true),\n            on(targetWindow, 'blur', dismissOnTargetWindowBlur, true),\n          ];\n\n          resolve(() => {\n            disposables.forEach(dispose => dispose());\n          });\n        }\n      }, 0);\n    });\n\n    return () => {\n      disposablesPromise.then(dispose => dispose());\n    };\n  }, [\n    hidden,\n    async,\n    hostElement,\n    targetRef,\n    targetWindow,\n    onDismiss,\n    shouldDismissOnWindowFocus,\n    dismissOnTargetClick,\n    preventDismissOnLostFocus,\n    preventDismissOnResize,\n    preventDismissOnScroll,\n    positionsExists,\n    preventDismissOnEvent,\n  ]);\n\n  return mouseDownHandlers;\n}\n\nexport const CalloutContentBase: React.FunctionComponent<ICalloutProps> = React.memo(\n  React.forwardRef<HTMLDivElement, ICalloutProps>((propsWithoutDefaults, forwardedRef) => {\n    const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n    const {\n      styles,\n      style,\n      ariaLabel,\n      ariaDescribedBy,\n      ariaLabelledBy,\n      className,\n      isBeakVisible,\n      children,\n      beakWidth,\n      calloutWidth,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n      finalHeight,\n      hideOverflow = !!finalHeight,\n      backgroundColor,\n      calloutMaxHeight,\n      onScroll,\n      // eslint-disable-next-line deprecation/deprecation\n      shouldRestoreFocus = true,\n      target,\n      hidden,\n      onLayerMounted,\n    } = props;\n\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const [calloutElement, setCalloutElement] = React.useState<HTMLDivElement | null>(null);\n    const calloutCallback = React.useCallback(calloutEl => {\n      setCalloutElement(calloutEl);\n    }, []);\n    const rootRef = useMergedRefs(hostElement, forwardedRef);\n\n    const [targetRef, targetWindow] = useTarget(props.target, {\n      current: calloutElement,\n    });\n    const getBounds = useBounds(props, targetRef, targetWindow);\n    const positions = usePositions(props, hostElement, calloutElement, targetRef, getBounds);\n    const maxHeight = useMaxHeight(props, getBounds, positions);\n    const [mouseDownOnPopup, mouseUpOnPopup] = useDismissHandlers(\n      props,\n      positions,\n      hostElement,\n      targetRef,\n      targetWindow,\n    );\n\n    // do not set both top and bottom css props from positions\n    // instead, use maxHeight\n    const isForcedInBounds = positions?.elementPosition.top && positions?.elementPosition.bottom;\n    const cssPositions = {\n      ...positions?.elementPosition,\n      maxHeight,\n    };\n    if (isForcedInBounds) {\n      cssPositions.bottom = undefined;\n    }\n\n    useAutoFocus(props, positions, calloutElement);\n\n    React.useEffect(() => {\n      if (!hidden) {\n        onLayerMounted?.();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if hidden changes\n    }, [hidden]);\n\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!targetWindow) {\n      return null;\n    }\n\n    const overflowYHidden = hideOverflow;\n\n    const beakVisible = isBeakVisible && !!target;\n    const classNames = getClassNames(styles!, {\n      theme: props.theme!,\n      className,\n      overflowYHidden: overflowYHidden,\n      calloutWidth,\n      positions,\n      beakWidth,\n      backgroundColor,\n      calloutMaxWidth,\n      calloutMinWidth,\n      doNotLayer,\n    });\n\n    const overflowStyle: React.CSSProperties = {\n      maxHeight: calloutMaxHeight ? calloutMaxHeight : '100%',\n      ...style,\n      ...(overflowYHidden && { overflowY: 'hidden' }),\n    };\n\n    const visibilityStyle: React.CSSProperties | undefined = props.hidden ? { visibility: 'hidden' } : undefined;\n    // React.CSSProperties does not understand IRawStyle, so the inline animations will need to be cast as any for now.\n    return (\n      <div ref={rootRef} className={classNames.container} style={visibilityStyle}>\n        <div\n          {...getNativeProps(props, divProperties, ARIA_ROLE_ATTRIBUTES)}\n          className={css(classNames.root, positions && positions.targetEdge && ANIMATIONS[positions.targetEdge!])}\n          style={positions ? { ...cssPositions } : OFF_SCREEN_STYLE}\n          // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          tabIndex={-1}\n          ref={calloutCallback}\n        >\n          {beakVisible && <div className={classNames.beak} style={getBeakPosition(positions)} />}\n          {beakVisible && <div className={classNames.beakCurtain} />}\n          <Popup\n            {...getNativeProps(props, ARIA_ROLE_ATTRIBUTES)}\n            ariaDescribedBy={ariaDescribedBy}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            className={classNames.calloutMain}\n            onDismiss={props.onDismiss}\n            onMouseDown={mouseDownOnPopup}\n            onMouseUp={mouseUpOnPopup}\n            onRestoreFocus={props.onRestoreFocus}\n            onScroll={onScroll}\n            shouldRestoreFocus={shouldRestoreFocus}\n            style={overflowStyle}\n          >\n            {children}\n          </Popup>\n        </div>\n      </div>\n    );\n  }),\n  (previousProps: ICalloutProps, nextProps: ICalloutProps) => {\n    if (!nextProps.shouldUpdateWhenHidden && previousProps.hidden && nextProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n    return shallowCompare(previousProps, nextProps);\n  },\n);\n\n/**\n * (Utility) to find and return the current `Callout` Beak position.\n *\n * @param positions\n */\nfunction getBeakPosition(positions?: ICalloutPositionedInfo): React.CSSProperties {\n  const beakPositionStyle: React.CSSProperties = {\n    ...positions?.beakPosition?.elementPosition,\n    display: positions?.beakPosition?.hideBeak ? 'none' : undefined,\n  };\n\n  if (!beakPositionStyle.top && !beakPositionStyle.bottom && !beakPositionStyle.left && !beakPositionStyle.right) {\n    beakPositionStyle.left = BEAK_ORIGIN_POSITION.left;\n    beakPositionStyle.top = BEAK_ORIGIN_POSITION.top;\n  }\n\n  return beakPositionStyle;\n}\n\n/**\n * (Utility) used to compare two different elementPositions to determine whether they are equal.\n *\n * @param prevElementPositions\n * @param newElementPosition\n */\nfunction arePositionsEqual(\n  prevElementPositions: ICalloutPositionedInfo,\n  newElementPosition: ICalloutPositionedInfo,\n): boolean {\n  return (\n    comparePositions(prevElementPositions.elementPosition, newElementPosition.elementPosition) &&\n    comparePositions(prevElementPositions.beakPosition.elementPosition, newElementPosition.beakPosition.elementPosition)\n  );\n}\n\n/**\n * (Utility) used in **arePositionsEqual** to compare two different elementPositions.\n *\n * @param prevElementPositions\n * @param newElementPositions\n */\nfunction comparePositions(prevElementPositions: IPosition, newElementPositions: IPosition): boolean {\n  for (const key in newElementPositions) {\n    if (newElementPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = prevElementPositions[key];\n      const newPositionEdge = newElementPositions[key];\n      if (oldPositionEdge !== undefined && newPositionEdge !== undefined) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nCalloutContentBase.displayName = COMPONENT_NAME;\n"]},"metadata":{},"sourceType":"module"}