{"ast":null,"code":"import { AnimationClassNames } from '../../Styling';\nexport var getStyles = function (props) {\n  var className = props.className,\n      _a = props.beakWidth,\n      beakWidth = _a === void 0 ? 16 : _a,\n      _b = props.gapSpace,\n      gapSpace = _b === void 0 ? 0 : _b,\n      maxWidth = props.maxWidth,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      effects = theme.effects; // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n\n  var tooltipGapSpace = -(Math.sqrt(beakWidth * beakWidth / 2) + gapSpace) + 1 / window.devicePixelRatio;\n  return {\n    root: ['ms-Tooltip', theme.fonts.medium, AnimationClassNames.fadeIn200, {\n      background: semanticColors.menuBackground,\n      boxShadow: effects.elevation8,\n      padding: '8px',\n      maxWidth: maxWidth,\n      selectors: {\n        ':after': {\n          content: \"''\",\n          position: 'absolute',\n          bottom: tooltipGapSpace,\n          left: tooltipGapSpace,\n          right: tooltipGapSpace,\n          top: tooltipGapSpace,\n          zIndex: 0\n        }\n      }\n    }, className],\n    content: ['ms-Tooltip-content', fonts.small, {\n      position: 'relative',\n      zIndex: 1,\n      color: semanticColors.menuItemText,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      overflow: 'hidden'\n    }],\n    subText: ['ms-Tooltip-subtext', {\n      // Using inherit here to avoid unintentional global overrides of the <p> tag.\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      color: 'inherit',\n      margin: 0\n    }]\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAoC,eAApC;AAGA,OAAO,IAAMC,SAAS,GAAG,UAACC,KAAD,EAA0B;AACzC,eAAS,GAAoDA,KAAK,UAAlE;AAAA,MAAWC,KAAkDD,KAAK,UAAlE;AAAA,MAAWE,SAAS,mBAAG,EAAH,GAAKD,EAAzB;AAAA,MAA2BE,KAAkCH,KAAK,SAAlE;AAAA,MAA2BI,QAAQ,mBAAG,CAAH,GAAID,EAAvC;AAAA,MAAyCE,QAAQ,GAAYL,KAAK,SAAlE;AAAA,MAAmDM,KAAK,GAAKN,KAAK,MAAlE;AACA,oBAAc,GAAqBM,KAAK,eAAxC;AAAA,MAAgBC,KAAK,GAAcD,KAAK,MAAxC;AAAA,MAAuBE,OAAO,GAAKF,KAAK,QAAxC,CAFyC,CAIjD;AACA;AACA;;AACA,MAAMG,eAAe,GAAG,EAAEC,IAAI,CAACC,IAAL,CAAWT,SAAS,GAAGA,SAAb,GAA0B,CAApC,IAAyCE,QAA3C,IAAuD,IAAIQ,MAAM,CAACC,gBAA1F;AAEA,SAAO;AACLC,QAAI,EAAE,CACJ,YADI,EAEJR,KAAK,CAACC,KAAN,CAAYQ,MAFR,EAGJjB,mBAAmB,CAACkB,SAHhB,EAIJ;AACEC,gBAAU,EAAEC,cAAc,CAACC,cAD7B;AAEEC,eAAS,EAAEZ,OAAO,CAACa,UAFrB;AAGEC,aAAO,EAAE,KAHX;AAIEjB,cAAQ,EAAEA,QAJZ;AAKEkB,eAAS,EAAE;AACT,kBAAU;AACRC,iBAAO,EAAE,IADD;AAERC,kBAAQ,EAAE,UAFF;AAGRC,gBAAM,EAAEjB,eAHA;AAIRkB,cAAI,EAAElB,eAJE;AAKRmB,eAAK,EAAEnB,eALC;AAMRoB,aAAG,EAAEpB,eANG;AAORqB,gBAAM,EAAE;AAPA;AADD;AALb,KAJI,EAqBJC,SArBI,CADD;AAwBLP,WAAO,EAAE,CACP,oBADO,EAEPjB,KAAK,CAACyB,KAFC,EAGP;AACEP,cAAQ,EAAE,UADZ;AAEEK,YAAM,EAAE,CAFV;AAGEG,WAAK,EAAEf,cAAc,CAACgB,YAHxB;AAIEC,cAAQ,EAAE,YAJZ;AAKEC,kBAAY,EAAE,YALhB;AAMEC,cAAQ,EAAE;AANZ,KAHO,CAxBJ;AAoCLC,WAAO,EAAE,CACP,oBADO,EAEP;AACE;AACAC,cAAQ,EAAE,SAFZ;AAGEC,gBAAU,EAAE,SAHd;AAIEP,WAAK,EAAE,SAJT;AAKEQ,YAAM,EAAE;AALV,KAFO;AApCJ,GAAP;AA+CD,CAxDM","names":["AnimationClassNames","getStyles","props","_a","beakWidth","_b","gapSpace","maxWidth","theme","fonts","effects","tooltipGapSpace","Math","sqrt","window","devicePixelRatio","root","medium","fadeIn200","background","semanticColors","menuBackground","boxShadow","elevation8","padding","selectors","content","position","bottom","left","right","top","zIndex","className","small","color","menuItemText","wordWrap","overflowWrap","overflow","subText","fontSize","fontWeight","margin"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.styles.ts"],"sourcesContent":["import { AnimationClassNames } from '../../Styling';\nimport type { ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const getStyles = (props: ITooltipStyleProps): ITooltipStyles => {\n  const { className, beakWidth = 16, gapSpace = 0, maxWidth, theme } = props;\n  const { semanticColors, fonts, effects } = theme;\n\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  const tooltipGapSpace = -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) + 1 / window.devicePixelRatio;\n\n  return {\n    root: [\n      'ms-Tooltip',\n      theme.fonts.medium,\n      AnimationClassNames.fadeIn200,\n      {\n        background: semanticColors.menuBackground,\n        boxShadow: effects.elevation8,\n        padding: '8px',\n        maxWidth: maxWidth,\n        selectors: {\n          ':after': {\n            content: `''`,\n            position: 'absolute',\n            bottom: tooltipGapSpace,\n            left: tooltipGapSpace,\n            right: tooltipGapSpace,\n            top: tooltipGapSpace,\n            zIndex: 0,\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      'ms-Tooltip-content',\n      fonts.small,\n      {\n        position: 'relative',\n        zIndex: 1,\n        color: semanticColors.menuItemText,\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        overflow: 'hidden',\n      },\n    ],\n    subText: [\n      'ms-Tooltip-subtext',\n      {\n        // Using inherit here to avoid unintentional global overrides of the <p> tag.\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        color: 'inherit',\n        margin: 0,\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}