{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nvar splitButtonDividerBaseStyles = function () {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\n\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextDisabled = s.buttonTextDisabled;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["HighContrastSelector","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","splitButtonDividerBaseStyles","position","width","right","top","bottom","standardStyles","theme","s","p","buttonBackground","buttonBackgroundPressed","buttonBackgroundHovered","buttonBackgroundDisabled","buttonText","buttonTextHovered","buttonTextDisabled","buttonTextChecked","buttonTextCheckedHovered","root","backgroundColor","color","rootHovered","selectors","_a","borderColor","rootPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","_b","splitButtonContainer","_c","border","splitButtonMenuButton","white","neutralLight","_d","splitButtonMenuButtonDisabled","splitButtonDivider","neutralTertiaryAlt","_e","splitButtonDividerDisabled","palette","splitButtonMenuButtonChecked","neutralQuaternaryAlt","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","primaryStyles","primaryButtonBackground","primaryButtonText","__assign","outlineColor","primaryButtonBackgroundHovered","primaryButtonTextHovered","primaryButtonBackgroundPressed","primaryButtonTextPressed","primaryButtonTextDisabled","primaryButtonBackgroundDisabled","_f","_g","_h","neutralTertiary","_j"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/react/lib/components/src/components/Button/ButtonThemes.ts"],"sourcesContent":["import { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}