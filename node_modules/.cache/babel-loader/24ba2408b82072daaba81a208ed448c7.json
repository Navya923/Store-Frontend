{"ast":null,"code":"var _jsxFileName = \"/home/npr/Downloads/Final FrontEnd (2)/src/components/Logistics.js\";\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Logistics extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:true\n//             })\n//         }\n//         axios.get('http://localhost:3001/getLogistics')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.data.map((element) => {\n//                     let obj = {\n//                         projectID: element.projectID,\n//                         quantity: element.quantity,\n//                         requiredDate: element.requiredDate,\n//                         approvedByProcurement: element.approvedByProcurement,\n//                         approvedByLogistics: element.approvedByLogistics,\n//                         approvedByFinance: element.approvedByFinance,\n//                         name:element.name,\n//                         price:element.price\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByLogistics: 'Approved',\n//             approvedByFinance:'Approved',\n//             approvedByProcurement:'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByLogistics: 'Approved'\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts', updatedProducts)\n//         this.setState({\n//             products: updatedProducts\n//         });\n//         axios.put('http://localhost:3001/updateLogistics', data)\n//             .then((response) => {\n//                 console.log(response);\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByLogistics: 'Rejected'\n//         };\n//         axios.put('http://localhost:3001/updateLogistics', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByLogistics: 'Rejected',\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts', updatedProducts)\n//                 this.setState({\n//                     products: updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n//                     <div style={{color:'black'}}>\n//                 <h3> Logistics</h3>\n//                 </div>\n//                 <table>\n//                     <thead>\n//                         <th>Project ID</th>\n//                         <th>Quantity</th>\n//                         <th>Required Date</th>\n//                         <th>Price</th>\n//                         <th>Name</th>\n//                         <th>Action</th>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.projectID}>\n//                                     <td>{element.projectID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td>\n//                                     <td>{element.approvedByLogistics == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByLogistics == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByLogistics !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         )\n//     }\n// }\nimport React from 'react';\nimport './table.css';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Logistics extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [],\n      loggedIn: true,\n      isAdmin: true\n    };\n\n    this.handleApprove = element => {\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByLogistics: 'Approved',\n        approvedByFinance: 'Approved',\n        approvedByProcurement: 'Approved'\n      };\n      let updatedProducts = this.state.products.map(product => {\n        if (product.projectID == element.projectID) {\n          let obj = {\n            projectID: product.projectID,\n            quantity: product.quantity,\n            requiredDate: product.requiredDate,\n            approvedByLogistics: 'Approved'\n          };\n          return obj;\n        } else {\n          return product;\n        }\n      });\n      console.log('updatedProducts', updatedProducts);\n      this.setState({\n        products: updatedProducts\n      });\n      axios.put('http://localhost:3001/updateLogistics', data).then(response => {\n        console.log(response);\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n\n    this.handleReject = element => {\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByLogistics: 'Rejected'\n      };\n      axios.put('http://localhost:3001/updateLogistics', data).then(response => {\n        console.log(response);\n        let updatedProducts = this.state.products.map(product => {\n          if (product.projectID == element.projectID) {\n            let obj = {\n              projectID: product.projectID,\n              quantity: product.quantity,\n              requiredDate: product.requiredDate,\n              approvedByLogistics: 'Rejected'\n            };\n            return obj;\n          } else {\n            return product;\n          }\n        });\n        console.log('updatedProducts', updatedProducts);\n        this.setState({\n          products: updatedProducts\n        });\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    let loggedIn = localStorage.getItem('LoggedIn');\n    let isAdmin = localStorage.getItem('isAdmin');\n    console.log('loggedIn', loggedIn, 'isAdmin', isAdmin);\n\n    if (loggedIn == 'true') {\n      this.setState({\n        loggedIn: true\n      });\n    }\n\n    if (isAdmin == 'true') {\n      this.setState({\n        isAdmin: true\n      });\n    }\n\n    axios.get('http://localhost:3001/getLogistics').then(res => {\n      console.log(res);\n      let products = res.data.data.map(element => {\n        let obj = {\n          projectID: element.projectID,\n          quantity: element.quantity,\n          requiredDate: element.requiredDate,\n          approvedByProcurement: element.approvedByProcurement,\n          approvedByLogistics: element.approvedByLogistics,\n          approvedByFinance: element.approvedByFinance,\n          name: element.name,\n          price: element.price\n        };\n        return obj;\n      });\n      console.log(products);\n      this.setState({\n        products\n      });\n    }).catch(Err => {\n      console.log(Err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: !(this.state.isAdmin && this.state.loggedIn),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'black'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Logistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.products.length > 0 ? this.state.products.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.projectID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [element.approvedByLogistics == 'Approved' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Approved\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 97\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 86\n                }, this) : element.approvedByLogistics == 'Rejected' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Rejected\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 188\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 177\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                  hidden: element.approvedByLogistics !== 'Pending',\n                  children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => this.handleApprove(element),\n                    children: [\"Approve\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 340\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 283\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => this.handleReject(element),\n                    children: [\"Reject\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 433\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 378\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 225\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this)]\n            }, element.projectID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Logistics.js"],"names":["React","Button","axios","CheckBoxIcon","CancelIcon","Logistics","Component","state","products","loggedIn","isAdmin","handleApprove","element","console","log","data","projectID","approvedByLogistics","approvedByFinance","approvedByProcurement","updatedProducts","map","product","obj","quantity","requiredDate","setState","put","then","response","catch","Err","handleReject","componentDidMount","localStorage","getItem","get","res","name","price","render","color","length"],"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","sourcesContent":["// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Logistics extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:true\r\n//             })\r\n//         }\r\n//         axios.get('http://localhost:3001/getLogistics')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.data.map((element) => {\r\n//                     let obj = {\r\n//                         projectID: element.projectID,\r\n//                         quantity: element.quantity,\r\n//                         requiredDate: element.requiredDate,\r\n//                         approvedByProcurement: element.approvedByProcurement,\r\n//                         approvedByLogistics: element.approvedByLogistics,\r\n//                         approvedByFinance: element.approvedByFinance,\r\n//                         name:element.name,\r\n//                         price:element.price\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByLogistics: 'Approved',\r\n//             approvedByFinance:'Approved',\r\n//             approvedByProcurement:'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByLogistics: 'Approved'\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts', updatedProducts)\r\n//         this.setState({\r\n//             products: updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:3001/updateLogistics', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n\r\n\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByLogistics: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:3001/updateLogistics', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByLogistics: 'Rejected',\r\n\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts', updatedProducts)\r\n//                 this.setState({\r\n//                     products: updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n//                     <div style={{color:'black'}}>\r\n//                 <h3> Logistics</h3>\r\n//                 </div>\r\n//                 <table>\r\n//                     <thead>\r\n//                         <th>Project ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Required Date</th>\r\n//                         <th>Price</th>\r\n//                         <th>Name</th>\r\n//                         <th>Action</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.projectID}>\r\n//                                     <td>{element.projectID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td>\r\n//                                     <td>{element.approvedByLogistics == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByLogistics == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByLogistics !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nimport React from 'react';\r\nimport './table.css';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nexport default class Logistics extends React.Component {\r\n    state = {\r\n        products: [],\r\n        loggedIn:true,\r\n        isAdmin:true\r\n    }\r\n    componentDidMount() {\r\n        let loggedIn = localStorage.getItem('LoggedIn');\r\n        let isAdmin = localStorage.getItem('isAdmin')\r\n        console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n        if(loggedIn=='true'){\r\n            this.setState({\r\n                loggedIn:true\r\n            })\r\n        }\r\n        if(isAdmin=='true'){\r\n            this.setState({\r\n                isAdmin:true\r\n            })\r\n        }\r\n        axios.get('http://localhost:3001/getLogistics')\r\n            .then((res) => {\r\n                console.log(res);\r\n                let products = res.data.data.map((element) => {\r\n                    let obj = {\r\n                        projectID: element.projectID,\r\n                        quantity: element.quantity,\r\n                        requiredDate: element.requiredDate,\r\n                        approvedByProcurement: element.approvedByProcurement,\r\n                        approvedByLogistics: element.approvedByLogistics,\r\n                        approvedByFinance: element.approvedByFinance,\r\n                        name:element.name,\r\n                        price:element.price\r\n                    }\r\n                    return obj;\r\n                })\r\n                console.log(products)\r\n                this.setState({\r\n                    products\r\n                });\r\n            })\r\n            .catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    handleApprove = (element) => {\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByLogistics: 'Approved',\r\n            approvedByFinance:'Approved',\r\n            approvedByProcurement:'Approved'\r\n        };\r\n        let updatedProducts = this.state.products.map((product) => {\r\n            if (product.projectID == element.projectID) {\r\n                let obj = {\r\n                    projectID: product.projectID,\r\n                    quantity: product.quantity,\r\n                    requiredDate: product.requiredDate,\r\n                    approvedByLogistics: 'Approved'\r\n                }\r\n                return obj;\r\n            } else {\r\n                return product;\r\n            }\r\n        })\r\n        console.log('updatedProducts', updatedProducts)\r\n        this.setState({\r\n            products: updatedProducts\r\n        });\r\n        axios.put('http://localhost:3001/updateLogistics', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    handleReject = (element) => {\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByLogistics: 'Rejected'\r\n        };\r\n        axios.put('http://localhost:3001/updateLogistics', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                let updatedProducts = this.state.products.map((product) => {\r\n                    if (product.projectID == element.projectID) {\r\n                        let obj = {\r\n                            projectID: product.projectID,\r\n                            quantity: product.quantity,\r\n                            requiredDate: product.requiredDate,\r\n                            approvedByLogistics: 'Rejected',\r\n\r\n                        }\r\n                        return obj;\r\n                    } else {\r\n                        return product;\r\n                    }\r\n                })\r\n                console.log('updatedProducts', updatedProducts)\r\n                this.setState({\r\n                    products: updatedProducts\r\n                });\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n          \r\n            <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n                    <div style={{color:'black'}}>\r\n                <h3> Logistics</h3>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <th>Product ID</th>\r\n                        <th>Quantity</th>\r\n                        {/* <th>Required Date</th> */}\r\n                        <th>Price</th>\r\n                        <th>Title</th>\r\n                        <th>Status</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n                            return (\r\n                                <tr key={element.projectID}>\r\n                                    <td>{element.projectID}</td>\r\n                                    <td>{element.quantity}</td>\r\n                                    {/* <td>{element.requiredDate}</td> */}\r\n                                    <td>{element.price}</td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.approvedByLogistics == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByLogistics == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByLogistics !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n                                </tr>\r\n                            )\r\n                        }) : null}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}