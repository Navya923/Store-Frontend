{"ast":null,"code":"var _jsxFileName = \"/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js\";\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:true\n//             })\n//         }\n//         axios.post('http://localhost:8080/Procurement/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.data.map((element) => {\n//                     let obj = {\n//                         projectID: element.projectID,\n//                         quantity: element.quantity,\n//                         requiredDate: element.requiredDate,\n//                         approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         name:element.name\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:3001/Finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n//                     <div style={{color:'black'}}>\n//                 <h3>Procurement</h3>\n//                 </div>\n//                 <table>\n//                     <thead>\n//                         <th>Project ID</th>\n//                         <th>Quantity</th>\n//                         <th>Required Date</th>\n//                         <th>Price</th>\n//                         <th>Name</th>\n//                         <th>Action</th>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.projectID}>\n//                                     <td>{element.projectID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td>\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         )\n//     }\n// }\nimport React from 'react';\nimport './table.css';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Procurement extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      products: [],\n      loggedIn: true,\n      isAdmin: true\n    };\n\n    this.handleApprove = element => {\n      axios.post('http://localhost:8080/Procurement/procurement', data);\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByProcurement: 'Approved'\n      };\n      let updatedProducts = this.state.products.map(product => {\n        if (product.projectID == element.projectID) {\n          let obj = {\n            projectID: product.projectID,\n            quantity: product.quantity,\n            requiredDate: product.requiredDate,\n            approvedByProcurement: 'Approved',\n            price: element.price,\n            name: element.name\n          };\n          return obj;\n        } else {\n          return product;\n        }\n      });\n      console.log('updatedProducts', updatedProducts);\n      this.setState({\n        products: updatedProducts\n      });\n      axios.put('http://localhost:3001/updateProcurement', data).then(response => {\n        console.log(response);\n        let financeData = {\n          projectID: element.projectID,\n          approvedByProcurement: 'Approved',\n          requiredDate: element.requiredDate,\n          quantity: element.quantity,\n          name: element.name,\n          price: element.price\n        };\n        axios.post('http://localhost:3001/Finance', financeData).then(updatedRes => {\n          console.log(updatedRes);\n        }).catch(Err => {\n          console.log(Err);\n        });\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n\n    this.handleReject = element => {\n      console.log(element);\n      let data = {\n        projectID: element.projectID,\n        approvedByProcurement: 'Rejected'\n      };\n      axios.put('http://localhost:3001/updateProcurement', data).then(response => {\n        console.log(response);\n        let updatedProducts = this.state.products.map(product => {\n          if (product.projectID == element.projectID) {\n            let obj = {\n              projectID: product.projectID,\n              quantity: product.quantity,\n              requiredDate: product.requiredDate,\n              approvedByProcurement: 'Rejected',\n              price: product.price,\n              name: product.name\n            };\n            return obj;\n          } else {\n            return product;\n          }\n        });\n        console.log('updatedProducts', updatedProducts);\n        this.setState({\n          products: updatedProducts\n        });\n      }).catch(Err => {\n        console.log(Err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    let loggedIn = localStorage.getItem('LoggedIn');\n    let isAdmin = localStorage.getItem('isAdmin');\n    console.log('loggedIn', loggedIn, 'isAdmin', isAdmin);\n\n    if (loggedIn == 'true') {\n      this.setState({\n        loggedIn: true\n      });\n    }\n\n    if (isAdmin == 'true') {\n      this.setState({\n        isAdmin: true\n      });\n    }\n\n    axios.post('http://localhost:8080/Procurement/procurement').then(res => {\n      console.log(res);\n      let products = res.data.map(element => {\n        let obj = {\n          productID: element.productID,\n          quantity: element.quantity,\n          requiredDate: element.requiredDate,\n          approvedByProcurement: element.approvedByProcurement,\n          price: element.price,\n          name: element.name\n        };\n        return obj;\n      });\n      console.log(products);\n      this.setState({\n        products\n      });\n    }).catch(Err => {\n      console.log(Err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Project ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Required Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.state.products.length > 0 ? this.state.products.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.projectID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.requiredDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: element.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [element.approvedByProcurement == 'Approved' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Approved\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 99\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 88\n              }, this) : element.approvedByFinance == 'Rejected' ? /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\"Rejected\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 188\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 177\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                hidden: element.approvedByProcurement !== 'Pending',\n                children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"inherit\",\n                  onClick: () => this.handleApprove(element),\n                  children: [\"Approve\", /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 359\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 285\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"inherit\",\n                  onClick: () => this.handleReject(element),\n                  children: [\"Reject\", /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 468\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 397\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 225\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 37\n            }, this)]\n          }, element.projectID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 33\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js"],"names":["React","Button","axios","CheckBoxIcon","CancelIcon","Procurement","Component","state","products","loggedIn","isAdmin","handleApprove","element","post","data","console","log","projectID","approvedByProcurement","updatedProducts","map","product","obj","quantity","requiredDate","price","name","setState","put","then","response","financeData","updatedRes","catch","Err","handleReject","componentDidMount","localStorage","getItem","res","productID","render","length","approvedByFinance"],"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","sourcesContent":["// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:true\r\n//             })\r\n//         }\r\n//         axios.post('http://localhost:8080/Procurement/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.data.map((element) => {\r\n//                     let obj = {\r\n//                         projectID: element.projectID,\r\n//                         quantity: element.quantity,\r\n//                         requiredDate: element.requiredDate,\r\n//                         approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         name:element.name\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:3001/Finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n//                     <div style={{color:'black'}}>\r\n//                 <h3>Procurement</h3>\r\n//                 </div>\r\n//                 <table>\r\n//                     <thead>\r\n//                         <th>Project ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Required Date</th>\r\n//                         <th>Price</th>\r\n//                         <th>Name</th>\r\n//                         <th>Action</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.projectID}>\r\n//                                     <td>{element.projectID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td>\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nimport React from 'react';\r\nimport './table.css';\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nexport default class Procurement extends React.Component {\r\n    state = {\r\n        products: [],\r\n        loggedIn:true,\r\n        isAdmin:true\r\n    }\r\n    componentDidMount() {\r\n        let loggedIn = localStorage.getItem('LoggedIn');\r\n        let isAdmin = localStorage.getItem('isAdmin')\r\n        console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n        if(loggedIn=='true'){\r\n            this.setState({\r\n                loggedIn:true\r\n            })\r\n        }\r\n        if(isAdmin=='true'){\r\n            this.setState({\r\n                isAdmin:true\r\n            })\r\n        }\r\n        axios.post('http://localhost:8080/Procurement/procurement')\r\n            .then((res) => {\r\n                console.log(res);\r\n                let products = res.data.map((element) => {\r\n                    let obj = {\r\n                        productID: element.productID,\r\n                        quantity: element.quantity,\r\n                        requiredDate: element.requiredDate,\r\n                        approvedByProcurement: element.approvedByProcurement,\r\n                        price:element.price,\r\n                        name:element.name\r\n                    }\r\n                    return obj;\r\n                })\r\n                console.log(products)\r\n                this.setState({\r\n                    products\r\n                });\r\n            })\r\n            .catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    handleApprove = (element) => {\r\n        axios.post('http://localhost:8080/Procurement/procurement', data)\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByProcurement: 'Approved'\r\n        };\r\n        let updatedProducts = this.state.products.map((product) => {\r\n            if (product.projectID == element.projectID) {\r\n                let obj = {\r\n                    projectID: product.projectID,\r\n                    quantity: product.quantity,\r\n                    requiredDate: product.requiredDate,\r\n                    approvedByProcurement:  'Approved',\r\n                    price:element.price,\r\n                    name:element.name\r\n                }\r\n                return obj;\r\n            } else {\r\n                return product;\r\n            }\r\n        })\r\n        console.log('updatedProducts',updatedProducts)\r\n        this.setState({\r\n            products:updatedProducts\r\n        });\r\n        axios.put('http://localhost:3001/updateProcurement', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                let financeData = {\r\n                    projectID: element.projectID,\r\n                    approvedByProcurement: 'Approved',\r\n                    requiredDate: element.requiredDate,\r\n                    quantity: element.quantity,\r\n                    name:element.name,\r\n                    price:element.price\r\n                }\r\n                axios.post('http://localhost:3001/Finance', financeData)\r\n                    .then((updatedRes) => {\r\n                        console.log(updatedRes);\r\n                    }).catch((Err) => {\r\n                        console.log(Err);\r\n                    })\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n\r\n    }\r\n    handleReject = (element) => {\r\n        console.log(element);\r\n        let data = {\r\n            projectID: element.projectID,\r\n            approvedByProcurement: 'Rejected'\r\n        };\r\n        axios.put('http://localhost:3001/updateProcurement', data)\r\n            .then((response) => {\r\n                console.log(response);\r\n                let updatedProducts = this.state.products.map((product) => {\r\n                    if (product.projectID == element.projectID) {\r\n                        let obj = {\r\n                            projectID: product.projectID,\r\n                            quantity: product.quantity,\r\n                            requiredDate: product.requiredDate,\r\n                            approvedByProcurement:  'Rejected',\r\n                            price:product.price,\r\n                            name:product.name\r\n                        }\r\n                        return obj;\r\n                    } else {\r\n                        return product;\r\n                    }\r\n                })\r\n                console.log('updatedProducts',updatedProducts)\r\n                this.setState({\r\n                    products:updatedProducts\r\n                });\r\n            }).catch((Err) => {\r\n                console.log(Err);\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n          \r\n            \r\n                <table>\r\n                    <thead>\r\n                        <th>Project ID</th>\r\n                        <th>Quantity</th>\r\n                        <th>Required Date</th>\r\n                        <th>Price</th>\r\n                        <th>Name</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n                            return (\r\n                                <tr key={element.projectID}>\r\n                                    <td>{element.projectID}</td>\r\n                                    <td>{element.quantity}</td>\r\n                                    <td>{element.requiredDate}</td>\r\n                                    <td>{element.price}</td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n                                </tr>\r\n                            )\r\n                        }) : null}\r\n                    </tbody>\r\n                </table>\r\n          \r\n          \r\n        )\r\n                    \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}