{"ast":null,"code":"// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:true\n//             })\n//         }\n//         axios.post('http://localhost:8080/Procurement/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.data.map((element) => {\n//                     let obj = {\n//                         projectID: element.projectID,\n//                         quantity: element.quantity,\n//                         requiredDate: element.requiredDate,\n//                         approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         name:element.name\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:3001/Finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n//                     <div style={{color:'black'}}>\n//                 <h3>Procurement</h3>\n//                 </div>\n//                 <table>\n//                     <thead>\n//                         <th>Project ID</th>\n//                         <th>Quantity</th>\n//                         <th>Required Date</th>\n//                         <th>Price</th>\n//                         <th>Name</th>\n//                         <th>Action</th>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.projectID}>\n//                                     <td>{element.projectID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td>\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         )\n//     }\n// }\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:false\n//             })\n//         }\n//         useEffect(()=> {\n//             console.log(\"trying to load hr candidate on page load\")\n//               handleRefresh();\n//          } ,[])\n//          const handleRefresh = () => {\n//           axios.get('/hr')\n//             .then((response) => {\n//               console.log(response)\n//               setData(response.data);\n//             }).catch((err) => {\n//               console.log(err);\n//             })\n//          }\n//         axios.get('http://localhost:8080/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.map((element) => {\n//                     let obj = {\n//                         productID: element.productID,\n//                         quantity: element.quantity,\n//                         // requiredDate: element.requiredDate,\n//                         // approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         title:element.title\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:8080/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//            <table>\n//                     <thead>\n//                         <th>Product ID</th>\n//                         <th>Quantity</th>\n//                         <th>Price</th>\n//                         <th>Title</th>\n//                         <th>Status</th>\n//                         {/* <th>Action</th>  */}\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.productID}>\n//                                     <td>{element.productID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     {/* <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td> */}\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//         )\n//     }\n// }\n// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\n// import CloseIcon from '@mui/icons-material/Close';\n// import DoneIcon from '@mui/icons-material/Done';\n// import RefreshIcon from '@mui/icons-material/Refresh';\n// import Box from '@mui/material/Box';\n// import Tabs from '@mui/material/Tabs';\n// import Tab from '@mui/material/Tab';\n// // import Procurementapproval from './Procurementapproval';\n// // import Procurementreject from './Procurementreject';\n// export default function CenteredTabs() {\n//  const [value, setValue] = React.useState(0);\n//  const [data, setData] = useState([]);\n//  const [ashow, setAShow] = useState(false);\n//  const [rshow, setRShow] = useState(false);\n//  const [pshow, setPShow] = useState(true);\n//  const handleChange = (event, newValue) => {\n//    if(newValue == 0){\n//      setPShow(true);\n//      setAShow(false);\n//      setRShow(false);\n//    }else if(newValue == 1){\n//     setPShow(false);\n//     setAShow(true);\n//     setRShow(false);\n//   }\n//   else if(newValue == 2){\n//     setPShow(false);\n//     setAShow(false);\n//     setRShow(true);\n//   }\n//    setValue(newValue);\n//  };\n//   useEffect(()=> {\n//    console.log(\"trying to load hr candidate on page load\")\n//      handleRefresh();\n// } ,[])\n// const handleRefresh = () => {\n//  axios.get('http://localhost:8080/cart/procurement')\n//    .then((response) => {\n//      console.log(response)\n//      setData(response.data);\n//    }).catch((err) => {\n//      console.log(err);\n//    })\n// }\n// const handleApprove = (row, id) => {\n//  console.log(id)\n//    axios.post('http:localhost:8080/procurement/approve/'+row.id)\n//      .then((response) => {\n//        console.log('new item added',response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err)\n//      })\n//  }\n//  const handleReject = (row, id) => {\n//    console.log(id);\n//    axios.post('http://localhost:8080/procurement/reject/' +row.id)\n//      .then((response) => {\n//        console.log(response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err);\n//      })\n//  }\n//   return (\n//    <TableContainer component={Paper}>\n//     <div key='div'>\n//        {/* <AppBar position=\"static\" key='abar'>\n//      <Tabs value={value} onChange={handleChange} centered>\n//        <Tab label=\"PROCUREMENT Page\" key='ptab' />\n//        <Tab label=\"PROCUREMENT Approval Table\" key='atab' />\n//        <Tab label=\"PROCUREMENT Reject Table\" key='rtab' />\n//      </Tabs>\n//    </AppBar> */}\n//    </div>\n//    { pshow?\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \n//         <TableHead>\n//           <TableRow>\n//            <TableCell align=\"center\">Title</TableCell>\n//            <TableCell align=\"center\">Quantity</TableCell>\n//            <TableCell align=\"center\">Price</TableCell>\n//            <TableCell align=\"center\">Status</TableCell>\n//            <TableCell align=\"center\">Action</TableCell>\n//          </TableRow>\n//        </TableHead>\n//         <TableBody>\n//          {data.map((row, id) => (\n//            <TableRow\n//              key={row.name}\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//            >\n//              <TableCell align=\"center\">{row.title}</TableCell>\n//              <TableCell align=\"center\">{row.price}</TableCell>\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\n//              <TableCell align=\"center\">{row.status}</TableCell>\n//              <TableCell align=\"center\">\n//               </TableCell>\n//              <TableCell align=\"center\">\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\n//                <CloseIcon onClick={() => handleReject(row, id)} />\n//              </TableCell>\n//            </TableRow>\n//          ))}\n//        </TableBody> \n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\n//      }\n//     </TableContainer>\n//   );\n// }\n// import React from 'react';","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:true\r\n//             })\r\n//         }\r\n//         axios.post('http://localhost:8080/Procurement/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.data.map((element) => {\r\n//                     let obj = {\r\n//                         projectID: element.projectID,\r\n//                         quantity: element.quantity,\r\n//                         requiredDate: element.requiredDate,\r\n//                         approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         name:element.name\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:3001/Finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n//                     <div style={{color:'black'}}>\r\n//                 <h3>Procurement</h3>\r\n//                 </div>\r\n//                 <table>\r\n//                     <thead>\r\n//                         <th>Project ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Required Date</th>\r\n//                         <th>Price</th>\r\n//                         <th>Name</th>\r\n//                         <th>Action</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.projectID}>\r\n//                                     <td>{element.projectID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td>\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \r\n       \r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:false\r\n//             })\r\n//         }\r\n\r\n//         useEffect(()=> {\r\n//             console.log(\"trying to load hr candidate on page load\")\r\n//               handleRefresh();\r\n//          } ,[])\r\n          \r\n//          const handleRefresh = () => {\r\n//           axios.get('/hr')\r\n//             .then((response) => {\r\n//               console.log(response)\r\n//               setData(response.data);\r\n//             }).catch((err) => {\r\n//               console.log(err);\r\n//             })\r\n//          }\r\n         \r\n//         axios.get('http://localhost:8080/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.map((element) => {\r\n//                     let obj = {\r\n//                         productID: element.productID,\r\n//                         quantity: element.quantity,\r\n//                         // requiredDate: element.requiredDate,\r\n//                         // approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         title:element.title\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:8080/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//            <table>\r\n//                     <thead>\r\n//                         <th>Product ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Price</th>\r\n//                         <th>Title</th>\r\n//                         <th>Status</th>\r\n//                         {/* <th>Action</th>  */}\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.productID}>\r\n//                                     <td>{element.productID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     {/* <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td> */}\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n          \r\n          \r\n//         )\r\n                    \r\n//     }\r\n// }\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n// import DoneIcon from '@mui/icons-material/Done';\r\n// import RefreshIcon from '@mui/icons-material/Refresh';\r\n// import Box from '@mui/material/Box';\r\n// import Tabs from '@mui/material/Tabs';\r\n// import Tab from '@mui/material/Tab';\r\n// // import Procurementapproval from './Procurementapproval';\r\n// // import Procurementreject from './Procurementreject';\r\n\r\n \r\n// export default function CenteredTabs() {\r\n//  const [value, setValue] = React.useState(0);\r\n//  const [data, setData] = useState([]);\r\n//  const [ashow, setAShow] = useState(false);\r\n//  const [rshow, setRShow] = useState(false);\r\n//  const [pshow, setPShow] = useState(true);\r\n \r\n//  const handleChange = (event, newValue) => {\r\n//    if(newValue == 0){\r\n//      setPShow(true);\r\n//      setAShow(false);\r\n//      setRShow(false);\r\n//    }else if(newValue == 1){\r\n//     setPShow(false);\r\n//     setAShow(true);\r\n//     setRShow(false);\r\n//   }\r\n//   else if(newValue == 2){\r\n//     setPShow(false);\r\n//     setAShow(false);\r\n//     setRShow(true);\r\n//   }\r\n//    setValue(newValue);\r\n//  };\r\n   \r\n//   useEffect(()=> {\r\n//    console.log(\"trying to load hr candidate on page load\")\r\n//      handleRefresh();\r\n// } ,[])\r\n \r\n// const handleRefresh = () => {\r\n//  axios.get('http://localhost:8080/cart/procurement')\r\n//    .then((response) => {\r\n//      console.log(response)\r\n//      setData(response.data);\r\n//    }).catch((err) => {\r\n//      console.log(err);\r\n//    })\r\n// }\r\n\r\n \r\n// const handleApprove = (row, id) => {\r\n//  console.log(id)\r\n  \r\n//    axios.post('http:localhost:8080/procurement/approve/'+row.id)\r\n//      .then((response) => {\r\n//        console.log('new item added',response);\r\n//        handleRefresh();\r\n//      }).catch((err) => {\r\n//        console.log(err)\r\n//      })\r\n//  }\r\n//  const handleReject = (row, id) => {\r\n//    console.log(id);\r\n  \r\n//    axios.post('http://localhost:8080/procurement/reject/' +row.id)\r\n//      .then((response) => {\r\n//        console.log(response);\r\n//        handleRefresh();\r\n      \r\n//      }).catch((err) => {\r\n//        console.log(err);\r\n//      })\r\n//  }\r\n//   return (\r\n//    <TableContainer component={Paper}>\r\n//     <div key='div'>\r\n//        {/* <AppBar position=\"static\" key='abar'>\r\n//      <Tabs value={value} onChange={handleChange} centered>\r\n//        <Tab label=\"PROCUREMENT Page\" key='ptab' />\r\n//        <Tab label=\"PROCUREMENT Approval Table\" key='atab' />\r\n//        <Tab label=\"PROCUREMENT Reject Table\" key='rtab' />\r\n//      </Tabs>\r\n//    </AppBar> */}\r\n//    </div>\r\n//    { pshow?\r\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \r\n//         <TableHead>\r\n//           <TableRow>\r\n//            <TableCell align=\"center\">Title</TableCell>\r\n          \r\n          \r\n//            <TableCell align=\"center\">Quantity</TableCell>\r\n//            <TableCell align=\"center\">Price</TableCell>\r\n           \r\n//            <TableCell align=\"center\">Status</TableCell>\r\n          \r\n//            <TableCell align=\"center\">Action</TableCell>\r\n          \r\n//          </TableRow>\r\n//        </TableHead>\r\n//         <TableBody>\r\n//          {data.map((row, id) => (\r\n//            <TableRow\r\n//              key={row.name}\r\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n//            >\r\n \r\n//              <TableCell align=\"center\">{row.title}</TableCell>\r\n          \r\n           \r\n//              <TableCell align=\"center\">{row.price}</TableCell>\r\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\r\n//              <TableCell align=\"center\">{row.status}</TableCell>\r\n//              <TableCell align=\"center\">\r\n           \r\n            \r\n            \r\n//               </TableCell>\r\n//              <TableCell align=\"center\">\r\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\r\n//                <CloseIcon onClick={() => handleReject(row, id)} />\r\n//              </TableCell>\r\n//            </TableRow>\r\n//          ))}\r\n \r\n \r\n        \r\n//        </TableBody> \r\n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\r\n//      }\r\n//     </TableContainer>\r\n//   );\r\n// }\r\n \r\n\r\n\r\n// import React from 'react';\r\n\r\n"]},"metadata":{},"sourceType":"module"}