{"ast":null,"code":"var _jsxFileName = \"/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:true\n//             })\n//         }\n//         axios.post('http://localhost:8080/Procurement/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.data.map((element) => {\n//                     let obj = {\n//                         projectID: element.projectID,\n//                         quantity: element.quantity,\n//                         requiredDate: element.requiredDate,\n//                         approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         name:element.name\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:3001/Finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n//                     <div style={{color:'black'}}>\n//                 <h3>Procurement</h3>\n//                 </div>\n//                 <table>\n//                     <thead>\n//                         <th>Project ID</th>\n//                         <th>Quantity</th>\n//                         <th>Required Date</th>\n//                         <th>Price</th>\n//                         <th>Name</th>\n//                         <th>Action</th>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.projectID}>\n//                                     <td>{element.projectID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td>\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         )\n//     }\n// }\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:false\n//             })\n//         }\n//         useEffect(()=> {\n//             console.log(\"trying to load hr candidate on page load\")\n//               handleRefresh();\n//          } ,[])\n//          const handleRefresh = () => {\n//           axios.get('/hr')\n//             .then((response) => {\n//               console.log(response)\n//               setData(response.data);\n//             }).catch((err) => {\n//               console.log(err);\n//             })\n//          }\n//         axios.get('http://localhost:8080/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.map((element) => {\n//                     let obj = {\n//                         productID: element.productID,\n//                         quantity: element.quantity,\n//                         // requiredDate: element.requiredDate,\n//                         // approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         title:element.title\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:8080/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//            <table>\n//                     <thead>\n//                         <th>Product ID</th>\n//                         <th>Quantity</th>\n//                         <th>Price</th>\n//                         <th>Title</th>\n//                         <th>Status</th>\n//                         {/* <th>Action</th>  */}\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.productID}>\n//                                     <td>{element.productID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     {/* <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td> */}\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//         )\n//     }\n// }\n// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\n// import CloseIcon from '@mui/icons-material/Close';\n// import DoneIcon from '@mui/icons-material/Done';\n// import RefreshIcon from '@mui/icons-material/Refresh';\n// import Box from '@mui/material/Box';\n// import Tabs from '@mui/material/Tabs';\n// import Tab from '@mui/material/Tab';\n// // import Procurementapproval from './Procurementapproval';\n// // import Procurementreject from './Procurementreject';\n// export default function CenteredTabs() {\n//  const [value, setValue] = React.useState(0);\n//  const [data, setData] = useState([]);\n//  const [ashow, setAShow] = useState(false);\n//  const [rshow, setRShow] = useState(false);\n//  const [pshow, setPShow] = useState(true);\n//  const handleChange = (event, newValue) => {\n//    if(newValue == 0){\n//      setPShow(true);\n//      setAShow(false);\n//      setRShow(false);\n//    }else if(newValue == 1){\n//     setPShow(false);\n//     setAShow(true);\n//     setRShow(false);\n//   }\n//   else if(newValue == 2){\n//     setPShow(false);\n//     setAShow(false);\n//     setRShow(true);\n//   }\n//    setValue(newValue);\n//  };\n//   useEffect(()=> {\n//    console.log(\"trying to load hr candidate on page load\")\n//      handleRefresh();\n// } ,[])\n// const handleRefresh = () => {\n//  axios.get('http://localhost:8080/cart/procurement')\n//    .then((response) => {\n//      console.log(response)\n//      setData(response.data);\n//    }).catch((err) => {\n//      console.log(err);\n//    })\n// }\n// const handleApprove = (row, id) => {\n//  console.log(id)\n//    axios.post('http:localhost:8080/procurement/approve/'+row.id)\n//      .then((response) => {\n//        console.log('new item added',response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err)\n//      })\n//  }\n//  const handleReject = (row, id) => {\n//    console.log(id);\n//    axios.post('http://localhost:8080/procurement/reject/' +row.id)\n//      .then((response) => {\n//        console.log(response);\n//        handleRefresh();\n//      }).catch((err) => {\n//        console.log(err);\n//      })\n//  }\n//   return (\n//    <TableContainer component={Paper}>\n//     <div key='div'>\n//        {/* <AppBar position=\"static\" key='abar'>\n//      <Tabs value={value} onChange={handleChange} centered>\n//        <Tab label=\"PROCUREMENT Page\" key='ptab' />\n//        <Tab label=\"PROCUREMENT Approval Table\" key='atab' />\n//        <Tab label=\"PROCUREMENT Reject Table\" key='rtab' />\n//      </Tabs>\n//    </AppBar> */}\n//    </div>\n//    { pshow?\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \n//         <TableHead>\n//           <TableRow>\n//            <TableCell align=\"center\">Title</TableCell>\n//            <TableCell align=\"center\">Quantity</TableCell>\n//            <TableCell align=\"center\">Price</TableCell>\n//            <TableCell align=\"center\">Status</TableCell>\n//            <TableCell align=\"center\">Action</TableCell>\n//          </TableRow>\n//        </TableHead>\n//         <TableBody>\n//          {data.map((row, id) => (\n//            <TableRow\n//              key={row.name}\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//            >\n//              <TableCell align=\"center\">{row.title}</TableCell>\n//              <TableCell align=\"center\">{row.price}</TableCell>\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\n//              <TableCell align=\"center\">{row.status}</TableCell>\n//              <TableCell align=\"center\">\n//               </TableCell>\n//              <TableCell align=\"center\">\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\n//                <CloseIcon onClick={() => handleReject(row, id)} />\n//              </TableCell>\n//            </TableRow>\n//          ))}\n//        </TableBody> \n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\n//      }\n//     </TableContainer>\n//   );\n// }\n// import React from 'react';\nimport axios from 'axios';\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { TableRow, TableHead, TableContainer, TableCell, TableBody, Table, Paper } from '@material-ui/core';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Procurement(props) {\n  _s();\n\n  function createData(Title, Quantity, Price, Status) {\n    return {\n      Title,\n      Quantity,\n      Price,\n      Status\n    };\n  }\n\n  const [title, setTitle] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const [status, setStatus] = useState('');\n  const [data, setData] = useState([]);\n  axios.post(\"http://localhost:8080/cart/procurement\", {\n    \"title\": title.itle,\n    \"quantity\": quantity.quantity,\n    \"price\": price.price,\n    \"status\": status.status\n  }).then(response => {\n    console.log(response);\n  }).catch(error => {\n    console.log(error);\n  });\n\n  const handleRefresh = () => {\n    axios.get('http://localhost:8080/cart/procurement').then(response => {\n      console.log(response);\n      setData(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleApprove = (row, id) => {\n    console.log(row, id);\n    let newArray = data;\n    newArray[id].status = 'Approved';\n    console.log(newArray);\n    setData(newArray); // axios.put('http://localhost:8080/candidate/HR/'+id,{\n    //   status:'Approve'\n    // })\n    // .then((response)=>{\n    //   console.log(response);\n    //   handleRefresh();\n    // }).catch((err)=>{\n    //   console.log(err);\n    // })\n\n    axios.post('http://localhost:8080/cart/1/PROCUREMENT_APPROVAL', {\n      \"title\": row.Title,\n      \"quantity\": row.quantity,\n      \"price\": row.price\n    }).then(response => {\n      console.log('new item added', response);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleReject = (row, id) => {\n    console.log(row, id);\n    let newArray = data;\n    newArray[id].status = 'Reject';\n    console.log(newArray);\n    setData(newArray);\n    axios.put('http://localhost:8080/cart/PROCUREMENT/' + id, {\n      status: 'Reject'\n    }).then(response => {\n      console.log(response);\n      handleRefresh();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n      onClick: handleRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 450\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map((row, id) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            hidden: row.status !== 'New',\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n              onClick: () => handleApprove(row, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), ' ', ' ', /*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: () => handleReject(row, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 572,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Procurement, \"PHf+g0OMXpDN4qx06He/wRaXfCs=\");\n\n_c = Procurement;\n\nvar _c;\n\n$RefreshReg$(_c, \"Procurement\");","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js"],"names":["axios","React","useState","Fragment","useEffect","TableRow","TableHead","TableContainer","TableCell","TableBody","Table","Paper","RefreshIcon","CloseIcon","DoneIcon","Procurement","props","createData","Title","Quantity","Price","Status","title","setTitle","quantity","setQuantity","price","setPrice","status","setStatus","data","setData","post","itle","then","response","console","log","catch","error","handleRefresh","get","err","handleApprove","row","id","newArray","handleReject","put","minWidth","map","border","name"],"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","sourcesContent":["// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:true\r\n//             })\r\n//         }\r\n//         axios.post('http://localhost:8080/Procurement/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.data.map((element) => {\r\n//                     let obj = {\r\n//                         projectID: element.projectID,\r\n//                         quantity: element.quantity,\r\n//                         requiredDate: element.requiredDate,\r\n//                         approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         name:element.name\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:3001/Finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n//                     <div style={{color:'black'}}>\r\n//                 <h3>Procurement</h3>\r\n//                 </div>\r\n//                 <table>\r\n//                     <thead>\r\n//                         <th>Project ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Required Date</th>\r\n//                         <th>Price</th>\r\n//                         <th>Name</th>\r\n//                         <th>Action</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.projectID}>\r\n//                                     <td>{element.projectID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td>\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \r\n       \r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:false\r\n//             })\r\n//         }\r\n\r\n//         useEffect(()=> {\r\n//             console.log(\"trying to load hr candidate on page load\")\r\n//               handleRefresh();\r\n//          } ,[])\r\n          \r\n//          const handleRefresh = () => {\r\n//           axios.get('/hr')\r\n//             .then((response) => {\r\n//               console.log(response)\r\n//               setData(response.data);\r\n//             }).catch((err) => {\r\n//               console.log(err);\r\n//             })\r\n//          }\r\n         \r\n//         axios.get('http://localhost:8080/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.map((element) => {\r\n//                     let obj = {\r\n//                         productID: element.productID,\r\n//                         quantity: element.quantity,\r\n//                         // requiredDate: element.requiredDate,\r\n//                         // approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         title:element.title\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:8080/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//            <table>\r\n//                     <thead>\r\n//                         <th>Product ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Price</th>\r\n//                         <th>Title</th>\r\n//                         <th>Status</th>\r\n//                         {/* <th>Action</th>  */}\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.productID}>\r\n//                                     <td>{element.productID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     {/* <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td> */}\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n          \r\n          \r\n//         )\r\n                    \r\n//     }\r\n// }\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n// import {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n// import DoneIcon from '@mui/icons-material/Done';\r\n// import RefreshIcon from '@mui/icons-material/Refresh';\r\n// import Box from '@mui/material/Box';\r\n// import Tabs from '@mui/material/Tabs';\r\n// import Tab from '@mui/material/Tab';\r\n// // import Procurementapproval from './Procurementapproval';\r\n// // import Procurementreject from './Procurementreject';\r\n\r\n \r\n// export default function CenteredTabs() {\r\n//  const [value, setValue] = React.useState(0);\r\n//  const [data, setData] = useState([]);\r\n//  const [ashow, setAShow] = useState(false);\r\n//  const [rshow, setRShow] = useState(false);\r\n//  const [pshow, setPShow] = useState(true);\r\n \r\n//  const handleChange = (event, newValue) => {\r\n//    if(newValue == 0){\r\n//      setPShow(true);\r\n//      setAShow(false);\r\n//      setRShow(false);\r\n//    }else if(newValue == 1){\r\n//     setPShow(false);\r\n//     setAShow(true);\r\n//     setRShow(false);\r\n//   }\r\n//   else if(newValue == 2){\r\n//     setPShow(false);\r\n//     setAShow(false);\r\n//     setRShow(true);\r\n//   }\r\n//    setValue(newValue);\r\n//  };\r\n   \r\n//   useEffect(()=> {\r\n//    console.log(\"trying to load hr candidate on page load\")\r\n//      handleRefresh();\r\n// } ,[])\r\n \r\n// const handleRefresh = () => {\r\n//  axios.get('http://localhost:8080/cart/procurement')\r\n//    .then((response) => {\r\n//      console.log(response)\r\n//      setData(response.data);\r\n//    }).catch((err) => {\r\n//      console.log(err);\r\n//    })\r\n// }\r\n\r\n \r\n// const handleApprove = (row, id) => {\r\n//  console.log(id)\r\n  \r\n//    axios.post('http:localhost:8080/procurement/approve/'+row.id)\r\n//      .then((response) => {\r\n//        console.log('new item added',response);\r\n//        handleRefresh();\r\n//      }).catch((err) => {\r\n//        console.log(err)\r\n//      })\r\n//  }\r\n//  const handleReject = (row, id) => {\r\n//    console.log(id);\r\n  \r\n//    axios.post('http://localhost:8080/procurement/reject/' +row.id)\r\n//      .then((response) => {\r\n//        console.log(response);\r\n//        handleRefresh();\r\n      \r\n//      }).catch((err) => {\r\n//        console.log(err);\r\n//      })\r\n//  }\r\n//   return (\r\n//    <TableContainer component={Paper}>\r\n//     <div key='div'>\r\n//        {/* <AppBar position=\"static\" key='abar'>\r\n//      <Tabs value={value} onChange={handleChange} centered>\r\n//        <Tab label=\"PROCUREMENT Page\" key='ptab' />\r\n//        <Tab label=\"PROCUREMENT Approval Table\" key='atab' />\r\n//        <Tab label=\"PROCUREMENT Reject Table\" key='rtab' />\r\n//      </Tabs>\r\n//    </AppBar> */}\r\n//    </div>\r\n//    { pshow?\r\n//   <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \r\n//         <TableHead>\r\n//           <TableRow>\r\n//            <TableCell align=\"center\">Title</TableCell>\r\n          \r\n          \r\n//            <TableCell align=\"center\">Quantity</TableCell>\r\n//            <TableCell align=\"center\">Price</TableCell>\r\n           \r\n//            <TableCell align=\"center\">Status</TableCell>\r\n          \r\n//            <TableCell align=\"center\">Action</TableCell>\r\n          \r\n//          </TableRow>\r\n//        </TableHead>\r\n//         <TableBody>\r\n//          {data.map((row, id) => (\r\n//            <TableRow\r\n//              key={row.name}\r\n//              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n//            >\r\n \r\n//              <TableCell align=\"center\">{row.title}</TableCell>\r\n          \r\n           \r\n//              <TableCell align=\"center\">{row.price}</TableCell>\r\n//              <TableCell align=\"center\">{row.quantity}</TableCell>\r\n//              <TableCell align=\"center\">{row.status}</TableCell>\r\n//              <TableCell align=\"center\">\r\n           \r\n            \r\n            \r\n//               </TableCell>\r\n//              <TableCell align=\"center\">\r\n//                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\r\n//                <CloseIcon onClick={() => handleReject(row, id)} />\r\n//              </TableCell>\r\n//            </TableRow>\r\n//          ))}\r\n \r\n \r\n        \r\n//        </TableBody> \r\n//      </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\r\n//      }\r\n//     </TableContainer>\r\n//   );\r\n// }\r\n \r\n\r\n\r\n// import React from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\nimport React, { useState, Fragment, useEffect } from 'react';\r\nimport { TableRow, TableHead, TableContainer, TableCell, TableBody, Table, Paper } from '@material-ui/core';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nexport default function Procurement(props) {\r\n\r\n  function createData(Title, Quantity, Price, Status) {\r\n    return { Title, Quantity, Price, Status };\r\n  }\r\n\r\n  const [title, setTitle] = useState('');\r\n\r\n  const [quantity, setQuantity] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [data, setData] = useState([]);\r\n  axios.post(\"http://localhost:8080/cart/procurement\", {\r\n    \"title\": title.itle,\r\n    \"quantity\": quantity.quantity,\r\n    \"price\": price.price,\r\n    \"status\": status.status\r\n\r\n  }).then((response) => {\r\n    console.log(response);\r\n\r\n  })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n  const handleRefresh = () => {\r\n    axios.get('http://localhost:8080/cart/procurement')\r\n      .then((response) => {\r\n        console.log(response)\r\n        setData(response.data);\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  const handleApprove = (row, id) => {\r\n    console.log(row, id)\r\n    let newArray = data;\r\n    newArray[id].status = 'Approved'\r\n    console.log(newArray)\r\n    setData(newArray);\r\n    // axios.put('http://localhost:8080/candidate/HR/'+id,{\r\n    //   status:'Approve'\r\n    // })\r\n    // .then((response)=>{\r\n    //   console.log(response);\r\n    //   handleRefresh();\r\n    // }).catch((err)=>{\r\n    //   console.log(err);\r\n    // })\r\n    axios.post('http://localhost:8080/cart/1/PROCUREMENT_APPROVAL', {\r\n      \"title\": row.Title,\r\n      \"quantity\": row.quantity,\r\n      \"price\": row.price\r\n    })\r\n      .then((response) => {\r\n        console.log('new item added',response);\r\n      }).catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const handleReject = (row, id) => {\r\n    console.log(row, id)\r\n    let newArray = data;\r\n    newArray[id].status = 'Reject'\r\n    console.log(newArray)\r\n    setData(newArray);\r\n    axios.put('http://localhost:8080/cart/PROCUREMENT/' + id, {\r\n      status: 'Reject'\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        handleRefresh();\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <RefreshIcon onClick={handleRefresh} />\r\n      <Table sx={{ minWidth: 450 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Title</TableCell>\r\n          \r\n            <TableCell align=\"center\">Quantity</TableCell>\r\n            <TableCell align=\"center\">Price</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row, id) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n\r\n              <TableCell align=\"center\">{row.title}</TableCell>\r\n            \r\n              <TableCell align=\"center\">{row.quantity}</TableCell>\r\n              <TableCell align=\"center\">{row.price}</TableCell>\r\n              <TableCell align=\"center\">{row.status}</TableCell>\r\n              <TableCell hidden={row.status !== 'New'} align=\"center\">\r\n                <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\r\n                <CloseIcon onClick={() => handleReject(row, id)} />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n\r\n          {/* <td>\r\n      <div class=\"dropout\">\r\n        <button class=\"more\">\r\n         <span></span>\r\n         <span></span>\r\n         <span></span>\r\n        </button>\r\n        <ul>\r\n          <li>\r\n            option 1\r\n          </li>\r\n          <li>\r\n            option 2\r\n          </li>\r\n          <li>\r\n            option 3\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </td> */}\r\n        </TableBody>\r\n      </Table>\r\n\r\n\r\n\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}