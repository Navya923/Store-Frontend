{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport { divProperties, getNativeProps, shallowCompare, assign, classNamesFunction, css, getFirstFocusable, getLastFocusable, getRTL, KeyCodes, shouldWrapFocus, isIOS, isMac, memoizeFunction, getPropsWithDefaults, getDocument } from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport { ContextualMenuSplitButton, ContextualMenuButton, ContextualMenuAnchor } from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport { useTarget, usePrevious, useAsync, useWarnings, useId, useIsomorphicLayoutEffect } from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nvar getClassNames = classNamesFunction();\nvar getContextualMenuItemClassNames = classNamesFunction(); // The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\n\nvar DEFAULT_PROPS = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16\n};\nexport function getSubmenuItems(item, options) {\n  var target = options === null || options === void 0 ? void 0 : options.target; // eslint-disable-next-line deprecation/deprecation\n\n  var items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    var overrideItems = [];\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var subItem = items_1[_i];\n\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        var onClick = subItem.onClick,\n            contextItem = __rest(subItem, [\"onClick\"]);\n\n        overrideItems.push(__assign(__assign({}, contextItem), {\n          onClick: getOnClickWithOverrideTarget(onClick, target)\n        }));\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\n\nexport function canAnyMenuItemsCheck(items) {\n  return items.some(function (item) {\n    if (item.canCheck) {\n      return true;\n    } // If the item is a section, check if any of the items in the section can check.\n\n\n    if (item.sectionProps && item.sectionProps.items.some(function (submenuItem) {\n      return submenuItem.canCheck === true;\n    })) {\n      return true;\n    }\n\n    return false;\n  });\n}\nvar NavigationIdleDelay = 250;\n/* ms */\n\nvar COMPONENT_NAME = 'ContextualMenu';\n\nvar _getMenuItemStylesFunction = memoizeFunction(function () {\n  var styles = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    styles[_i] = arguments[_i];\n  }\n\n  return function (styleProps) {\n    return concatStyleSetsWithProps.apply(void 0, __spreadArray([styleProps, getItemStyles], styles));\n  };\n}); //#region Custom hooks\n\n\nfunction useVisibility(props, targetWindow) {\n  var _a = props.hidden,\n      hidden = _a === void 0 ? false : _a,\n      onMenuDismissed = props.onMenuDismissed,\n      onMenuOpened = props.onMenuOpened;\n  var previousHidden = usePrevious(hidden);\n  var onMenuOpenedRef = React.useRef(onMenuOpened);\n  var onMenuClosedRef = React.useRef(onMenuDismissed);\n  var propsRef = React.useRef(props);\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n  React.useEffect(function () {\n    var _a, _b; // Don't issue dismissed callbacks on initial mount\n\n\n    if (hidden && previousHidden === false) {\n      (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      (_b = onMenuOpenedRef.current) === null || _b === void 0 ? void 0 : _b.call(onMenuOpenedRef, propsRef.current);\n    }\n  }, [hidden, previousHidden]); // Issue onDismissedCallback on unmount\n\n  React.useEffect(function () {\n    return function () {\n      var _a;\n\n      return (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current);\n    };\n  }, []);\n}\n\nfunction useSubMenuState(_a, dismiss) {\n  var hidden = _a.hidden,\n      items = _a.items,\n      theme = _a.theme,\n      className = _a.className,\n      id = _a.id,\n      menuTarget = _a.target;\n\n  var _b = React.useState(),\n      expandedMenuItemKey = _b[0],\n      setExpandedMenuItemKey = _b[1];\n\n  var _c = React.useState(),\n      submenuTarget = _c[0],\n      setSubmenuTarget = _c[1];\n\n  var subMenuId = useId(COMPONENT_NAME, id);\n  var closeSubMenu = React.useCallback(function () {\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n  var openSubMenu = React.useCallback(function (_a, target) {\n    var submenuItemKey = _a.key;\n\n    if (expandedMenuItemKey === submenuItemKey) {\n      return;\n    }\n\n    target.focus();\n    setExpandedMenuItemKey(submenuItemKey);\n    setSubmenuTarget(target);\n  }, [expandedMenuItemKey]);\n  React.useEffect(function () {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n  var onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  var getSubmenuProps = function () {\n    var item = findItemByKeyFromItems(expandedMenuItemKey, items);\n    var submenuProps = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, {\n          target: menuTarget\n        }),\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className: className,\n        gapSpace: 0,\n        isBeakVisible: false\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        var onItemClick = item.onItemClick;\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss];\n}\n\nfunction useShouldUpdateFocusOnMouseMove(_a) {\n  var delayUpdateFocusOnHover = _a.delayUpdateFocusOnHover,\n      hidden = _a.hidden;\n  var shouldUpdateFocusOnMouseEvent = React.useRef(!delayUpdateFocusOnHover);\n  var gotMouseMove = React.useRef(false);\n  React.useEffect(function () {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n  var onMenuFocusCapture = React.useCallback(function () {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = false;\n    }\n  }, [delayUpdateFocusOnHover]);\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture];\n}\n\nfunction usePreviousActiveElement(_a, targetWindow) {\n  var hidden = _a.hidden,\n      onRestoreFocus = _a.onRestoreFocus;\n  var previousActiveElement = React.useRef();\n  var tryFocusPreviousActiveElement = React.useCallback(function (options) {\n    var _a, _b;\n\n    if (onRestoreFocus) {\n      onRestoreFocus(options);\n    } else if (options === null || options === void 0 ? void 0 : options.documentContainsFocus) {\n      // Make sure that the focus method actually exists\n      // In some cases the object might exist but not be a real element.\n      // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n      (_b = (_a = previousActiveElement.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, [onRestoreFocus]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (!hidden) {\n      previousActiveElement.current = targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement;\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: ((_a = getDocument()) === null || _a === void 0 ? void 0 : _a.hasFocus()) || false\n      });\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement, tryFocusPreviousActiveElement]);\n  return [tryFocusPreviousActiveElement];\n}\n\nfunction useKeyHandlers(_a, dismiss, hostElement, openSubMenu) {\n  var theme = _a.theme,\n      isSubMenu = _a.isSubMenu,\n      _b = _a.focusZoneProps,\n      _c = _b === void 0 ? {} : _b,\n      checkForNoWrap = _c.checkForNoWrap,\n      _d = _c.direction,\n      focusZoneDirection = _d === void 0 ? FocusZoneDirection.vertical : _d;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n\n\n  var lastKeyDownWasAltOrMeta = React.useRef();\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n\n  var keyHandler = function (ev, shouldHandleKey, dismissAllMenus) {\n    var handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n  /**\n   * Checks if the submenu should be closed\n   */\n\n\n  var shouldCloseSubMenu = function (ev) {\n    var submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left; // eslint-disable-next-line deprecation/deprecation\n\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(focusZoneDirection === FocusZoneDirection.vertical || checkForNoWrap && !shouldWrapFocus(ev.target, 'data-no-horizontal-wrap'));\n  };\n\n  var shouldHandleKeyDown = function (ev) {\n    return (// eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape || shouldCloseSubMenu(ev) || // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.up && (ev.altKey || ev.metaKey)\n    );\n  };\n\n  var onKeyDown = function (ev) {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev); // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n\n    var dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n\n\n  var shouldHandleKeyUp = function (ev) {\n    var keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  var onKeyUp = function (ev) {\n    return keyHandler(ev, shouldHandleKeyUp, true\n    /* dismissAllMenus */\n    );\n  };\n\n  var onMenuKeyDown = function (ev) {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    var handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    } // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n\n\n    var hasModifier = !!(ev.altKey || ev.metaKey); // eslint-disable-next-line deprecation/deprecation\n\n    var isUp = ev.which === KeyCodes.up; // eslint-disable-next-line deprecation/deprecation\n\n    var isDown = ev.which === KeyCodes.down;\n\n    if (!hasModifier && (isUp || isDown)) {\n      var elementToFocus = isUp ? getLastFocusable(hostElement.current, hostElement.current.lastChild, true) : getFirstFocusable(hostElement.current, hostElement.current.firstChild, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  var onItemKeyDown = function (item, ev) {\n    var openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (!item.disabled && ( // eslint-disable-next-line deprecation/deprecation\n    ev.which === openKey || ev.which === KeyCodes.enter || ev.which === KeyCodes.down && (ev.altKey || ev.metaKey))) {\n      openSubMenu(item, ev.currentTarget);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown];\n}\n\nfunction useScrollHandler(asyncTracker) {\n  var isScrollIdle = React.useRef(true);\n  var scrollIdleTimeoutId = React.useRef();\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n\n  var onScroll = function () {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(function () {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle];\n}\n\nfunction useOnSubmenuDismiss(dismiss, closeSubMenu) {\n  var isMountedRef = React.useRef(false);\n  React.useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n\n  var onSubMenuDismiss = function (ev, dismissAll) {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer(_a, asyncTracker) {\n  var _b = _a.subMenuHoverDelay,\n      subMenuHoverDelay = _b === void 0 ? NavigationIdleDelay : _b;\n  var enterTimerRef = React.useRef(undefined);\n\n  var cancelSubMenuTimer = function () {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  var startSubmenuTimer = function (onTimerExpired) {\n    enterTimerRef.current = asyncTracker.setTimeout(function () {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef];\n}\n\nfunction useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss) {\n  var menuTarget = props.target;\n\n  var onItemMouseEnterBase = function (item, ev, target) {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  var onItemMouseMoveBase = function (item, ev, target) {\n    var targetElement = ev.currentTarget; // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (!isScrollIdle.current || subMenuEntryTimer.current !== undefined || targetElement === (targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement)) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  var shouldIgnoreMouseEvent = function () {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  var onMouseItemLeave = function (item, ev) {\n    var _a;\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n\n\n    if (hostElement.current.setActive) {\n      try {\n        hostElement.current.setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      (_a = hostElement.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n\n\n  var updateFocusOnMouseEvent = function (item, ev, target) {\n    var targetElement = target ? target : ev.currentTarget;\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer(); // If the menu is not expanded we can update focus without any delay\n\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    } // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n\n\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(function () {\n        targetElement.focus();\n        openSubMenu(item, targetElement);\n      });\n    } else {\n      startSubmenuTimer(function () {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  var onItemClick = function (item, ev) {\n    onItemClickBase(item, ev, ev.currentTarget);\n  };\n\n  var onItemClickBase = function (item, ev, target) {\n    var items = getSubmenuItems(item, {\n      target: menuTarget\n    }); // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        openSubMenu(item, target);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  var onAnchorClick = function (item, ev) {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  var executeItemClick = function (item, ev) {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    var shouldDismiss = false;\n\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [onItemMouseEnterBase, onItemMouseMoveBase, onMouseItemLeave, onItemClick, onAnchorClick, executeItemClick, onItemClickBase];\n} //#endregion\n\n\nexport var ContextualMenuBase = React.memo(React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var _a;\n\n  var _b = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults),\n      ref = _b.ref,\n      props = __rest(_b, [\"ref\"]);\n\n  var hostElement = React.useRef(null);\n  var asyncTracker = useAsync();\n  var menuId = useId(COMPONENT_NAME, props.id);\n  useWarnings({\n    name: COMPONENT_NAME,\n    props: props,\n    deprecations: {\n      getMenuClassNames: 'styles'\n    }\n  });\n\n  var dismiss = function (ev, dismissAll) {\n    var _a;\n\n    return (_a = props.onDismiss) === null || _a === void 0 ? void 0 : _a.call(props, ev, dismissAll);\n  };\n\n  var _c = useTarget(props.target, hostElement),\n      targetRef = _c[0],\n      targetWindow = _c[1];\n\n  var tryFocusPreviousActiveElement = usePreviousActiveElement(props, targetWindow)[0];\n\n  var _d = useSubMenuState(props, dismiss),\n      expandedMenuItemKey = _d[0],\n      openSubMenu = _d[1],\n      getSubmenuProps = _d[2],\n      onSubMenuDismiss = _d[3];\n\n  var _e = useShouldUpdateFocusOnMouseMove(props),\n      shouldUpdateFocusOnMouseEvent = _e[0],\n      gotMouseMove = _e[1],\n      onMenuFocusCapture = _e[2];\n\n  var _f = useScrollHandler(asyncTracker),\n      onScroll = _f[0],\n      isScrollIdle = _f[1];\n\n  var _g = useSubmenuEnterTimer(props, asyncTracker),\n      cancelSubMenuTimer = _g[0],\n      startSubmenuTimer = _g[1],\n      subMenuEntryTimer = _g[2];\n\n  var responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n  useVisibility(props, targetWindow);\n\n  var _h = useKeyHandlers(props, dismiss, hostElement, openSubMenu),\n      onKeyDown = _h[0],\n      onKeyUp = _h[1],\n      onMenuKeyDown = _h[2],\n      onItemKeyDown = _h[3];\n\n  var _j = useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss),\n      onItemMouseEnterBase = _j[0],\n      onItemMouseMoveBase = _j[1],\n      onMouseItemLeave = _j[2],\n      onItemClick = _j[3],\n      onAnchorClick = _j[4],\n      executeItemClick = _j[5],\n      onItemClickBase = _j[6]; //#region Render helpers\n\n\n  var onDefaultRenderMenuList = function (menuListProps, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, defaultRender) {\n    var indexCorrection = 0;\n    var items = menuListProps.items,\n        totalItemCount = menuListProps.totalItemCount,\n        hasCheckmarks = menuListProps.hasCheckmarks,\n        hasIcons = menuListProps.hasIcons;\n    return React.createElement(\"ul\", {\n      className: menuClassNames.list,\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      role: 'presentation'\n    }, items.map(function (item, index) {\n      var menuItem = renderMenuItem(item, index, indexCorrection, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n\n      if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n        var indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n        indexCorrection += indexIncrease;\n      }\n\n      return menuItem;\n    }));\n  };\n\n  var renderFocusZone = function (children, adjustedFocusZoneProps) {\n    var _a = props.focusZoneAs,\n        ChildrenRenderer = _a === void 0 ? FocusZone : _a;\n    return React.createElement(ChildrenRenderer, __assign({}, adjustedFocusZoneProps), children);\n  };\n  /**\n   * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n   * cause the menu items to always re-render because the component update is based on shallow comparison.\n   */\n\n\n  var renderMenuItem = function (item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames) {\n    var _a;\n\n    var renderedItems = [];\n    var iconProps = item.iconProps || {\n      iconName: 'None'\n    };\n    var getItemClassNames = item.getItemClassNames,\n        // eslint-disable-line deprecation/deprecation\n    itemProps = item.itemProps;\n    var styles = itemProps ? itemProps.styles : undefined; // We only send a dividerClassName when the item to be rendered is a divider.\n    // For all other cases, the default divider style is used.\n\n    var dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n    var subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : ''; // eslint-disable-next-line deprecation/deprecation\n\n    var itemClassNames; // IContextualMenuItem#getItemClassNames for backwards compatibility\n    // otherwise uses mergeStyles for class names.\n\n    if (getItemClassNames) {\n      itemClassNames = getItemClassNames(props.theme, isItemDisabled(item), expandedMenuItemKey === item.key, !!getIsChecked(item), !!item.href, iconProps.iconName !== 'None', item.className, dividerClassName, iconProps.className, subMenuIconClassName, item.primaryDisabled);\n    } else {\n      var itemStyleProps = {\n        theme: props.theme,\n        disabled: isItemDisabled(item),\n        expanded: expandedMenuItemKey === item.key,\n        checked: !!getIsChecked(item),\n        isAnchorLink: !!item.href,\n        knownIcon: iconProps.iconName !== 'None',\n        itemClassName: item.className,\n        dividerClassName: dividerClassName,\n        iconClassName: iconProps.className,\n        subMenuClassName: subMenuIconClassName,\n        primaryDisabled: item.primaryDisabled\n      }; // We need to generate default styles then override if styles are provided\n      // since the ContextualMenu currently handles item classNames.\n\n      itemClassNames = getContextualMenuItemClassNames(_getMenuItemStylesFunction((_a = menuClassNames.subComponentStyles) === null || _a === void 0 ? void 0 : _a.menuItem, styles), itemStyleProps);\n    } // eslint-disable-next-line deprecation/deprecation\n\n\n    if (item.text === '-' || item.name === '-') {\n      item.itemType = ContextualMenuItemType.Divider;\n    }\n\n    switch (item.itemType) {\n      case ContextualMenuItemType.Divider:\n        renderedItems.push(renderSeparator(index, itemClassNames));\n        break;\n\n      case ContextualMenuItemType.Header:\n        renderedItems.push(renderSeparator(index, itemClassNames));\n        var headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n        renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n        break;\n\n      case ContextualMenuItemType.Section:\n        renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n        break;\n\n      default:\n        var defaultRenderNormalItem = function () {\n          return renderNormalItem(item, itemClassNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n        };\n\n        var menuItem = props.onRenderContextualMenuItem ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem) : defaultRenderNormalItem();\n        renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n        break;\n    } // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n    // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n\n\n    return React.createElement(React.Fragment, {\n      key: item.key\n    }, renderedItems);\n  };\n\n  var defaultMenuItemRenderer = function (item, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames) {\n    var index = item.index,\n        focusableElementIndex = item.focusableElementIndex,\n        totalItemCount = item.totalItemCount,\n        hasCheckmarks = item.hasCheckmarks,\n        hasIcons = item.hasIcons;\n    return renderMenuItem(item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n  };\n\n  var renderSectionItem = function (sectionItem, // eslint-disable-next-line deprecation/deprecation\n  itemClassNames, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, index, hasCheckmarks, hasIcons) {\n    var sectionProps = sectionItem.sectionProps;\n\n    if (!sectionProps) {\n      return;\n    }\n\n    var headerItem;\n    var groupProps;\n\n    if (sectionProps.title) {\n      var headerContextualMenuItem = undefined;\n      var ariaLabelledby = '';\n\n      if (typeof sectionProps.title === 'string') {\n        // Since title is a user-facing string, it needs to be stripped\n        // of whitespace in order to build a valid element ID\n        var id_1 = menuId + sectionProps.title.replace(/\\s/g, '');\n        headerContextualMenuItem = {\n          key: \"section-\" + sectionProps.title + \"-title\",\n          itemType: ContextualMenuItemType.Header,\n          text: sectionProps.title,\n          id: id_1\n        };\n        ariaLabelledby = id_1;\n      } else {\n        var id_2 = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n        headerContextualMenuItem = __assign(__assign({}, sectionProps.title), {\n          id: id_2\n        });\n        ariaLabelledby = id_2;\n      }\n\n      if (headerContextualMenuItem) {\n        groupProps = {\n          role: 'group',\n          'aria-labelledby': ariaLabelledby\n        };\n        headerItem = renderHeaderMenuItem(headerContextualMenuItem, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n      }\n    }\n\n    if (sectionProps.items && sectionProps.items.length > 0) {\n      return React.createElement(\"li\", {\n        role: \"presentation\",\n        key: sectionProps.key || sectionItem.key || \"section-\" + index\n      }, React.createElement(\"div\", __assign({}, groupProps), React.createElement(\"ul\", {\n        className: menuClassNames.list,\n        role: \"presentation\"\n      }, sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true), headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title), sectionProps.items.map(function (contextualMenuItem, itemsIndex) {\n        return renderMenuItem(contextualMenuItem, itemsIndex, itemsIndex, sectionProps.items.length, hasCheckmarks, hasIcons, menuClassNames);\n      }), sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true))));\n    }\n  };\n\n  var renderListItem = function (content, key, classNames, // eslint-disable-line deprecation/deprecation\n  title) {\n    return React.createElement(\"li\", {\n      role: \"presentation\",\n      title: title,\n      key: key,\n      className: classNames.item\n    }, content);\n  };\n\n  var renderSeparator = function (index, classNames, // eslint-disable-line deprecation/deprecation\n  top, fromSection) {\n    if (fromSection || index > 0) {\n      return React.createElement(\"li\", {\n        role: \"separator\",\n        key: 'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom'),\n        className: classNames.divider,\n        \"aria-hidden\": \"true\"\n      });\n    }\n\n    return null;\n  };\n\n  var renderNormalItem = function (item, classNames, // eslint-disable-line deprecation/deprecation\n  index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons) {\n    if (item.onRender) {\n      return item.onRender(__assign({\n        'aria-posinset': focusableElementIndex + 1,\n        'aria-setsize': totalItemCount\n      }, item), dismiss);\n    }\n\n    var contextualMenuItemAs = props.contextualMenuItemAs;\n    var commonProps = {\n      item: item,\n      classNames: classNames,\n      index: index,\n      focusableElementIndex: focusableElementIndex,\n      totalItemCount: totalItemCount,\n      hasCheckmarks: hasCheckmarks,\n      hasIcons: hasIcons,\n      contextualMenuItemAs: contextualMenuItemAs,\n      onItemMouseEnter: onItemMouseEnterBase,\n      onItemMouseLeave: onMouseItemLeave,\n      onItemMouseMove: onItemMouseMoveBase,\n      onItemMouseDown: onItemMouseDown,\n      executeItemClick: executeItemClick,\n      onItemKeyDown: onItemKeyDown,\n      expandedMenuItemKey: expandedMenuItemKey,\n      openSubMenu: openSubMenu,\n      dismissSubMenu: onSubMenuDismiss,\n      dismissMenu: dismiss\n    };\n\n    if (item.href) {\n      return React.createElement(ContextualMenuAnchor, __assign({}, commonProps, {\n        onItemClick: onAnchorClick\n      }));\n    }\n\n    if (item.split && hasSubmenu(item)) {\n      return React.createElement(ContextualMenuSplitButton, __assign({}, commonProps, {\n        onItemClick: onItemClick,\n        onItemClickBase: onItemClickBase,\n        onTap: cancelSubMenuTimer\n      }));\n    }\n\n    return React.createElement(ContextualMenuButton, __assign({}, commonProps, {\n      onItemClick: onItemClick,\n      onItemClickBase: onItemClickBase\n    }));\n  };\n\n  var renderHeaderMenuItem = function (item, // eslint-disable-next-line deprecation/deprecation\n  itemClassNames, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, index, hasCheckmarks, hasIcons) {\n    var _a = props.contextualMenuItemAs,\n        ChildrenRenderer = _a === void 0 ? ContextualMenuItem : _a;\n    var itemProps = item.itemProps,\n        id = item.id;\n    var divHtmlProperties = itemProps && getNativeProps(itemProps, divProperties);\n    return (// eslint-disable-next-line deprecation/deprecation\n      React.createElement(\"div\", __assign({\n        id: id,\n        className: menuClassNames.header\n      }, divHtmlProperties, {\n        style: item.style\n      }), React.createElement(ChildrenRenderer, __assign({\n        item: item,\n        classNames: itemClassNames,\n        index: index,\n        onCheckmarkClick: hasCheckmarks ? onItemClick : undefined,\n        hasIcons: hasIcons\n      }, itemProps)))\n    );\n  }; //#endregion\n  //#region Main render\n\n\n  var isBeakVisible = props.isBeakVisible;\n  var items = props.items,\n      labelElementId = props.labelElementId,\n      id = props.id,\n      className = props.className,\n      beakWidth = props.beakWidth,\n      directionalHint = props.directionalHint,\n      directionalHintForRTL = props.directionalHintForRTL,\n      alignTargetEdge = props.alignTargetEdge,\n      gapSpace = props.gapSpace,\n      coverTarget = props.coverTarget,\n      ariaLabel = props.ariaLabel,\n      doNotLayer = props.doNotLayer,\n      target = props.target,\n      bounds = props.bounds,\n      useTargetWidth = props.useTargetWidth,\n      useTargetAsMinWidth = props.useTargetAsMinWidth,\n      directionalHintFixed = props.directionalHintFixed,\n      shouldFocusOnMount = props.shouldFocusOnMount,\n      shouldFocusOnContainer = props.shouldFocusOnContainer,\n      title = props.title,\n      styles = props.styles,\n      theme = props.theme,\n      calloutProps = props.calloutProps,\n      _k = props.onRenderSubMenu,\n      onRenderSubMenu = _k === void 0 ? onDefaultRenderSubMenu : _k,\n      _l = props.onRenderMenuList,\n      onRenderMenuList = _l === void 0 ? function (menuListProps, defaultRender) {\n    return onDefaultRenderMenuList(menuListProps, classNames, defaultRender);\n  } : _l,\n      focusZoneProps = props.focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n  getMenuClassNames = props.getMenuClassNames;\n  var classNames = getMenuClassNames ? getMenuClassNames(theme, className) : getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  var hasIcons = itemsHaveIcons(items);\n\n  function itemsHaveIcons(contextualMenuItems) {\n    for (var _i = 0, contextualMenuItems_1 = contextualMenuItems; _i < contextualMenuItems_1.length; _i++) {\n      var item = contextualMenuItems_1[_i];\n\n      if (item.iconProps) {\n        return true;\n      }\n\n      if (item.itemType === ContextualMenuItemType.Section && item.sectionProps && itemsHaveIcons(item.sectionProps.items)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var adjustedFocusZoneProps = __assign(__assign({\n    direction: FocusZoneDirection.vertical,\n    handleTabKey: FocusZoneTabbableElements.all,\n    isCircularNavigation: true\n  }, focusZoneProps), {\n    className: css(classNames.root, (_a = props.focusZoneProps) === null || _a === void 0 ? void 0 : _a.className)\n  });\n\n  var hasCheckmarks = canAnyMenuItemsCheck(items);\n  var submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n  isBeakVisible = isBeakVisible === undefined ? responsiveMode <= ResponsiveMode.medium : isBeakVisible;\n  /**\n   * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n   */\n\n  var contextMenuStyle;\n  var targetAsHtmlElement = targetRef.current;\n\n  if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n    var targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n    var targetWidth = targetBoundingRect.width - 2;\n    /* Accounts for 1px border */\n\n    if (useTargetWidth) {\n      contextMenuStyle = {\n        width: targetWidth\n      };\n    } else if (useTargetAsMinWidth) {\n      contextMenuStyle = {\n        minWidth: targetWidth\n      };\n    }\n  } // The menu should only return if items were provided, if no items were provided then it should not appear.\n\n\n  if (items && items.length > 0) {\n    var totalItemCount_1 = 0;\n\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n      var item = items_2[_i];\n\n      if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n        var itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n        totalItemCount_1 += itemCount;\n      }\n    }\n\n    var calloutStyles_1 = classNames.subComponentStyles ? classNames.subComponentStyles.callout : undefined;\n    return React.createElement(MenuContext.Consumer, null, function (menuContext) {\n      return React.createElement(Callout, __assign({\n        styles: calloutStyles_1,\n        onRestoreFocus: tryFocusPreviousActiveElement\n      }, calloutProps, {\n        target: target || menuContext.target,\n        isBeakVisible: isBeakVisible,\n        beakWidth: beakWidth,\n        directionalHint: directionalHint,\n        directionalHintForRTL: directionalHintForRTL,\n        gapSpace: gapSpace,\n        coverTarget: coverTarget,\n        doNotLayer: doNotLayer,\n        className: css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className),\n        setInitialFocus: shouldFocusOnMount,\n        onDismiss: props.onDismiss || menuContext.onDismiss,\n        onScroll: onScroll,\n        bounds: bounds,\n        directionalHintFixed: directionalHintFixed,\n        alignTargetEdge: alignTargetEdge,\n        hidden: props.hidden || menuContext.hidden,\n        ref: forwardedRef\n      }), React.createElement(\"div\", {\n        style: contextMenuStyle,\n        ref: hostElement,\n        id: id,\n        className: classNames.container,\n        tabIndex: shouldFocusOnContainer ? 0 : -1,\n        onKeyDown: onMenuKeyDown,\n        onKeyUp: onKeyUp,\n        onFocusCapture: onMenuFocusCapture,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": labelElementId,\n        role: 'menu'\n      }, title && React.createElement(\"div\", {\n        className: classNames.title\n      }, \" \", title, \" \"), items && items.length ? renderFocusZone(onRenderMenuList({\n        ariaLabel: ariaLabel,\n        items: items,\n        totalItemCount: totalItemCount_1,\n        hasCheckmarks: hasCheckmarks,\n        hasIcons: hasIcons,\n        defaultMenuItemRenderer: function (item) {\n          return defaultMenuItemRenderer(item, classNames);\n        },\n        labelElementId: labelElementId\n      }, function (menuListProps, defaultRender) {\n        return onDefaultRenderMenuList(menuListProps, classNames, defaultRender);\n      }), adjustedFocusZoneProps) : null, submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)));\n    });\n  } else {\n    return null;\n  } //#endregion\n\n}), function (prevProps, newProps) {\n  if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n    // Do not update when hidden.\n    return true;\n  }\n\n  return shallowCompare(prevProps, newProps);\n});\nContextualMenuBase.displayName = 'ContextualMenuBase';\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\n\nfunction isAltOrMeta(ev) {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item, ev) {\n  var _a;\n\n  (_a = item.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(item, item, ev);\n}\n\nfunction onDefaultRenderSubMenu(subMenuProps, defaultRender) {\n  throw Error('ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' + 'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.');\n}\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\n\n\nfunction findItemByKeyFromItems(key, items) {\n  for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {\n    var item = items_3[_i];\n\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      var match = findItemByKeyFromItems(key, item.sectionProps.items);\n\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(onClick, target) {\n  return onClick ? function (ev, item) {\n    overrideTarget(ev, target);\n    return onClick(ev, item);\n  } : onClick;\n}\n\nfunction overrideTarget(ev, target) {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["React","ContextualMenuItemType","DirectionalHint","FocusZone","FocusZoneDirection","FocusZoneTabbableElements","divProperties","getNativeProps","shallowCompare","assign","classNamesFunction","css","getFirstFocusable","getLastFocusable","getRTL","KeyCodes","shouldWrapFocus","isIOS","isMac","memoizeFunction","getPropsWithDefaults","getDocument","hasSubmenu","getIsChecked","isItemDisabled","Callout","ContextualMenuItem","ContextualMenuSplitButton","ContextualMenuButton","ContextualMenuAnchor","concatStyleSetsWithProps","getItemStyles","useTarget","usePrevious","useAsync","useWarnings","useId","useIsomorphicLayoutEffect","useResponsiveMode","ResponsiveMode","MenuContext","getClassNames","getContextualMenuItemClassNames","DEFAULT_PROPS","items","shouldFocusOnMount","gapSpace","directionalHint","bottomAutoEdge","beakWidth","getSubmenuItems","item","options","target","subMenuProps","overrideItems","_i","subItem","preferMenuTargetAsEventTarget","contextItem","push","__assign","onClick","getOnClickWithOverrideTarget","canAnyMenuItemsCheck","some","canCheck","sectionProps","NavigationIdleDelay","COMPONENT_NAME","_getMenuItemStylesFunction","styles","styleProps","__spreadArray","useVisibility","props","targetWindow","_a","onMenuDismissed","onMenuOpened","previousHidden","hidden","onMenuOpenedRef","useRef","onMenuClosedRef","propsRef","current","useEffect","_b","useSubMenuState","dismiss","theme","className","id","menuTarget","useState","expandedMenuItemKey","setExpandedMenuItemKey","submenuTarget","setSubmenuTarget","subMenuId","closeSubMenu","useCallback","undefined","openSubMenu","submenuItemKey","focus","onSubMenuDismiss","useOnSubmenuDismiss","getSubmenuProps","findItemByKeyFromItems","submenuProps","onDismiss","isSubMenu","leftTopEdge","rightTopEdge","isBeakVisible","onItemClick","useShouldUpdateFocusOnMouseMove","delayUpdateFocusOnHover","shouldUpdateFocusOnMouseEvent","gotMouseMove","onMenuFocusCapture","usePreviousActiveElement","onRestoreFocus","previousActiveElement","tryFocusPreviousActiveElement","documentContainsFocus","document","activeElement","originalElement","containsFocus","hasFocus","useKeyHandlers","hostElement","_c","checkForNoWrap","_d","focusZoneDirection","vertical","lastKeyDownWasAltOrMeta","keyHandler","ev","shouldHandleKey","dismissAllMenus","handled","preventDefault","stopPropagation","shouldCloseSubMenu","submenuCloseKey","right","left","which","shouldHandleKeyDown","escape","up","altKey","metaKey","onKeyDown","isAltOrMeta","shouldHandleKeyUp","keyPressIsAltOrMetaAlone","onKeyUp","onMenuKeyDown","hasModifier","isUp","isDown","down","elementToFocus","lastChild","firstChild","onItemKeyDown","openKey","disabled","enter","currentTarget","useScrollHandler","asyncTracker","isScrollIdle","scrollIdleTimeoutId","onScroll","clearTimeout","setTimeout","isMountedRef","dismissAll","useSubmenuEnterTimer","subMenuHoverDelay","enterTimerRef","cancelSubMenuTimer","startSubmenuTimer","onTimerExpired","useMouseHandlers","subMenuEntryTimer","onItemMouseEnterBase","shouldIgnoreMouseEvent","updateFocusOnMouseEvent","onItemMouseMoveBase","targetElement","onMouseItemLeave","setActive","e","key","onItemClickBase","length","executeItemClick","onAnchorClick","isDisabled","overrideTarget","shouldDismiss","defaultPrevented","ContextualMenuBase","memo","forwardRef","propsWithoutDefaults","forwardedRef","ref","menuId","name","deprecations","getMenuClassNames","targetRef","responsiveMode","onDefaultRenderMenuList","menuListProps","menuClassNames","defaultRender","indexCorrection","totalItemCount","hasCheckmarks","hasIcons","list","role","map","index","menuItem","renderMenuItem","itemType","Divider","Header","indexIncrease","customOnRenderListLength","renderFocusZone","children","adjustedFocusZoneProps","ChildrenRenderer","focusableElementIndex","renderedItems","iconProps","iconName","itemProps","dividerClassName","subMenuIconClassName","submenuIconProps","itemClassNames","getItemClassNames","href","primaryDisabled","itemStyleProps","expanded","checked","isAnchorLink","knownIcon","itemClassName","iconClassName","subMenuClassName","subComponentStyles","text","renderSeparator","headerItem","renderHeaderMenuItem","renderListItem","title","Section","renderSectionItem","defaultRenderNormalItem","onRenderContextualMenuItem","Fragment","defaultMenuItemRenderer","sectionItem","groupProps","headerContextualMenuItem","ariaLabelledby","id_1","replace","id_2","topDivider","contextualMenuItem","itemsIndex","bottomDivider","content","classNames","top","fromSection","divider","renderNormalItem","onRender","commonProps","contextualMenuItemAs","onItemMouseEnter","onItemMouseLeave","onItemMouseMove","onItemMouseDown","dismissSubMenu","dismissMenu","split","onTap","divHtmlProperties","header","style","onCheckmarkClick","labelElementId","directionalHintForRTL","alignTargetEdge","coverTarget","ariaLabel","doNotLayer","bounds","useTargetWidth","useTargetAsMinWidth","directionalHintFixed","shouldFocusOnContainer","calloutProps","_k","onRenderSubMenu","onDefaultRenderSubMenu","_l","onRenderMenuList","focusZoneProps","itemsHaveIcons","contextualMenuItems","direction","handleTabKey","all","isCircularNavigation","root","medium","contextMenuStyle","targetAsHtmlElement","offsetWidth","targetBoundingRect","getBoundingClientRect","targetWidth","width","minWidth","totalItemCount_1","itemCount","calloutStyles_1","callout","Consumer","menuContext","setInitialFocus","container","tabIndex","onFocusCapture","prevProps","newProps","shouldUpdateWhenHidden","displayName","alt","onMouseDown","Error","match","persist","Event","Element"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/react/lib/components/src/components/ContextualMenu/ContextualMenu.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport {\n  divProperties,\n  getNativeProps,\n  shallowCompare,\n  Async,\n  assign,\n  classNamesFunction,\n  css,\n  getFirstFocusable,\n  getLastFocusable,\n  getRTL,\n  KeyCodes,\n  shouldWrapFocus,\n  isIOS,\n  isMac,\n  memoizeFunction,\n  getPropsWithDefaults,\n  getDocument,\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport {\n  ContextualMenuSplitButton,\n  ContextualMenuButton,\n  ContextualMenuAnchor,\n} from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport {\n  useTarget,\n  usePrevious,\n  useAsync,\n  useWarnings,\n  useId,\n  Target,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nimport type {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemRenderProps,\n} from './ContextualMenu.types';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport type { IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>();\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>();\n\n// The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\nconst DEFAULT_PROPS: Partial<IContextualMenuProps> = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16,\n};\n\nexport function getSubmenuItems(\n  item: IContextualMenuItem,\n  options?: {\n    target?: Target;\n  },\n): IContextualMenuItem[] | undefined {\n  const target = options?.target;\n\n  // eslint-disable-next-line deprecation/deprecation\n  const items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    const overrideItems: typeof items = [];\n\n    for (const subItem of items) {\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        const { onClick, ...contextItem } = subItem;\n\n        overrideItems.push({\n          ...contextItem,\n          onClick: getOnClickWithOverrideTarget(onClick, target),\n        });\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250; /* ms */\n\nconst COMPONENT_NAME = 'ContextualMenu';\n\nconst _getMenuItemStylesFunction = memoizeFunction(\n  (\n    ...styles: (IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> | undefined)[]\n  ): IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> => {\n    return (styleProps: IContextualMenuItemStyleProps) =>\n      concatStyleSetsWithProps(styleProps, getItemStyles, ...styles);\n  },\n);\n\n//#region Custom hooks\nfunction useVisibility(props: IContextualMenuProps, targetWindow: Window | undefined) {\n  const { hidden = false, onMenuDismissed, onMenuOpened } = props;\n  const previousHidden = usePrevious(hidden);\n\n  const onMenuOpenedRef = React.useRef(onMenuOpened);\n  const onMenuClosedRef = React.useRef(onMenuDismissed);\n  const propsRef = React.useRef(props);\n\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    // Don't issue dismissed callbacks on initial mount\n    if (hidden && previousHidden === false) {\n      onMenuClosedRef.current?.(propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      onMenuOpenedRef.current?.(propsRef.current);\n    }\n  }, [hidden, previousHidden]);\n\n  // Issue onDismissedCallback on unmount\n  React.useEffect(() => () => onMenuClosedRef.current?.(propsRef.current), []);\n}\n\nfunction useSubMenuState(\n  { hidden, items, theme, className, id, target: menuTarget }: IContextualMenuProps,\n  dismiss: () => void,\n) {\n  const [expandedMenuItemKey, setExpandedMenuItemKey] = React.useState<string>();\n  const [submenuTarget, setSubmenuTarget] = React.useState<HTMLElement>();\n  const subMenuId = useId(COMPONENT_NAME, id);\n\n  const closeSubMenu = React.useCallback(() => {\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n\n  const openSubMenu = React.useCallback(\n    ({ key: submenuItemKey }: IContextualMenuItem, target: HTMLElement) => {\n      if (expandedMenuItemKey === submenuItemKey) {\n        return;\n      }\n\n      target.focus();\n\n      setExpandedMenuItemKey(submenuItemKey);\n      setSubmenuTarget(target);\n    },\n    [expandedMenuItemKey],\n  );\n\n  React.useEffect(() => {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n\n  const onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  const getSubmenuProps = (): IContextualMenuProps | null => {\n    const item = findItemByKeyFromItems(expandedMenuItemKey!, items);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, { target: menuTarget })!,\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className,\n        gapSpace: 0,\n        isBeakVisible: false,\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        const { onItemClick } = item;\n\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] as const;\n}\n\nfunction useShouldUpdateFocusOnMouseMove({ delayUpdateFocusOnHover, hidden }: IContextualMenuProps) {\n  const shouldUpdateFocusOnMouseEvent = React.useRef<boolean>(!delayUpdateFocusOnHover);\n  const gotMouseMove = React.useRef<boolean>(false);\n\n  React.useEffect(() => {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n\n  const onMenuFocusCapture = React.useCallback(() => {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = false;\n    }\n  }, [delayUpdateFocusOnHover]);\n\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] as const;\n}\n\nfunction usePreviousActiveElement({ hidden, onRestoreFocus }: IContextualMenuProps, targetWindow: Window | undefined) {\n  const previousActiveElement = React.useRef<undefined | HTMLElement>();\n\n  const tryFocusPreviousActiveElement = React.useCallback(\n    (options: IPopupRestoreFocusParams) => {\n      if (onRestoreFocus) {\n        onRestoreFocus(options);\n      } else if (options?.documentContainsFocus) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        previousActiveElement.current?.focus?.();\n      }\n    },\n    [onRestoreFocus],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!hidden) {\n      previousActiveElement.current = targetWindow?.document.activeElement as HTMLElement;\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow?.document.activeElement, tryFocusPreviousActiveElement]);\n\n  return [tryFocusPreviousActiveElement] as const;\n}\n\nfunction useKeyHandlers(\n  {\n    theme,\n    isSubMenu,\n    focusZoneProps: { checkForNoWrap, direction: focusZoneDirection = FocusZoneDirection.vertical } = {},\n  }: IContextualMenuProps,\n  dismiss: (ev?: any, dismissAll?: boolean | undefined) => void | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement) => void,\n) {\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  const lastKeyDownWasAltOrMeta = React.useRef<boolean | undefined>();\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  const keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean,\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  const shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(\n      focusZoneDirection === FocusZoneDirection.vertical ||\n      (checkForNoWrap && !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  const shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape ||\n      shouldCloseSubMenu(ev) ||\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey))\n    );\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  const shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  const onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return keyHandler(ev, shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  const onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(hostElement.current, hostElement.current.lastChild as HTMLElement, true)\n        : getFirstFocusable(hostElement.current, hostElement.current.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  const onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      openSubMenu(item, ev.currentTarget as HTMLElement);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] as const;\n}\n\nfunction useScrollHandler(asyncTracker: Async) {\n  const isScrollIdle = React.useRef<boolean>(true);\n  const scrollIdleTimeoutId = React.useRef<number | undefined>();\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  const onScroll = (): void => {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(() => {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle] as const;\n}\n\nfunction useOnSubmenuDismiss(dismiss: (ev?: any, dismissAll?: boolean) => void, closeSubMenu: () => void) {\n  const isMountedRef = React.useRef(false);\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  const onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer({ subMenuHoverDelay = NavigationIdleDelay }: IContextualMenuProps, asyncTracker: Async) {\n  const enterTimerRef = React.useRef<number | undefined>(undefined);\n\n  const cancelSubMenuTimer = () => {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  const startSubmenuTimer = (onTimerExpired: () => void) => {\n    enterTimerRef.current = asyncTracker.setTimeout(() => {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef as React.RefObject<number | undefined>] as const;\n}\n\nfunction useMouseHandlers(\n  props: IContextualMenuProps,\n  isScrollIdle: React.MutableRefObject<boolean>,\n  subMenuEntryTimer: React.RefObject<number | undefined>,\n  targetWindow: Window | undefined,\n  shouldUpdateFocusOnMouseEvent: React.MutableRefObject<boolean>,\n  gotMouseMove: React.MutableRefObject<boolean>,\n  expandedMenuItemKey: string | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  startSubmenuTimer: (onTimerExpired: () => void) => void,\n  cancelSubMenuTimer: () => void,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement) => void,\n  onSubMenuDismiss: (ev?: any, dismissAll?: boolean) => void,\n  dismiss: (ev?: any, dismissAll?: boolean) => void,\n) {\n  const { target: menuTarget } = props;\n\n  const onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (\n      !isScrollIdle.current ||\n      subMenuEntryTimer.current !== undefined ||\n      targetElement === (targetWindow?.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const shouldIgnoreMouseEvent = (): boolean => {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  const onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((hostElement.current as any).setActive) {\n      try {\n        (hostElement.current as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      hostElement.current?.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  const updateFocusOnMouseEvent = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement>,\n    target?: HTMLElement,\n  ) => {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    // If the menu is not expanded we can update focus without any delay\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(() => {\n        targetElement.focus();\n        openSubMenu(item, targetElement);\n      });\n    } else {\n      startSubmenuTimer(() => {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  const onItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  const onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement,\n  ): void => {\n    const items = getSubmenuItems(item, { target: menuTarget });\n\n    // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        openSubMenu(item, target);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  const onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  const executeItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    let shouldDismiss = false;\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [\n    onItemMouseEnterBase,\n    onItemMouseMoveBase,\n    onMouseItemLeave,\n    onItemClick,\n    onAnchorClick,\n    executeItemClick,\n    onItemClickBase,\n  ] as const;\n}\n//#endregion\n\nexport const ContextualMenuBase: React.FunctionComponent<IContextualMenuProps> = React.memo(\n  React.forwardRef<HTMLDivElement, IContextualMenuProps>((propsWithoutDefaults, forwardedRef) => {\n    const { ref, ...props } = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const asyncTracker = useAsync();\n    const menuId = useId(COMPONENT_NAME, props.id);\n\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: {\n        getMenuClassNames: 'styles',\n      },\n    });\n\n    const dismiss = (ev?: any, dismissAll?: boolean) => props.onDismiss?.(ev, dismissAll);\n    const [targetRef, targetWindow] = useTarget(props.target, hostElement);\n    const [tryFocusPreviousActiveElement] = usePreviousActiveElement(props, targetWindow);\n    const [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] = useSubMenuState(props, dismiss);\n    const [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] = useShouldUpdateFocusOnMouseMove(props);\n    const [onScroll, isScrollIdle] = useScrollHandler(asyncTracker);\n    const [cancelSubMenuTimer, startSubmenuTimer, subMenuEntryTimer] = useSubmenuEnterTimer(props, asyncTracker);\n\n    const responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n\n    useVisibility(props, targetWindow);\n\n    const [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] = useKeyHandlers(props, dismiss, hostElement, openSubMenu);\n    const [\n      onItemMouseEnterBase,\n      onItemMouseMoveBase,\n      onMouseItemLeave,\n      onItemClick,\n      onAnchorClick,\n      executeItemClick,\n      onItemClickBase,\n    ] = useMouseHandlers(\n      props,\n      isScrollIdle,\n      subMenuEntryTimer,\n      targetWindow,\n      shouldUpdateFocusOnMouseEvent,\n      gotMouseMove,\n      expandedMenuItemKey,\n      hostElement,\n      startSubmenuTimer,\n      cancelSubMenuTimer,\n      openSubMenu,\n      onSubMenuDismiss,\n      dismiss,\n    );\n\n    //#region Render helpers\n\n    const onDefaultRenderMenuList = (\n      menuListProps: IContextualMenuListProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      defaultRender?: IRenderFunction<IContextualMenuListProps>,\n    ): JSX.Element => {\n      let indexCorrection = 0;\n      const { items, totalItemCount, hasCheckmarks, hasIcons } = menuListProps;\n\n      return (\n        <ul className={menuClassNames.list} onKeyDown={onKeyDown} onKeyUp={onKeyUp} role={'presentation'}>\n          {items.map((item, index) => {\n            const menuItem = renderMenuItem(\n              item,\n              index,\n              indexCorrection,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n              menuClassNames,\n            );\n            if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n              const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n              indexCorrection += indexIncrease;\n            }\n            return menuItem;\n          })}\n        </ul>\n      );\n    };\n\n    const renderFocusZone = (children: JSX.Element | null, adjustedFocusZoneProps: IFocusZoneProps): JSX.Element => {\n      const { focusZoneAs: ChildrenRenderer = FocusZone } = props;\n      return <ChildrenRenderer {...adjustedFocusZoneProps}>{children}</ChildrenRenderer>;\n    };\n\n    /**\n     * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n     * cause the menu items to always re-render because the component update is based on shallow comparison.\n     */\n    const renderMenuItem = (\n      item: IContextualMenuItem,\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): JSX.Element => {\n      const renderedItems: React.ReactNode[] = [];\n      const iconProps = item.iconProps || { iconName: 'None' };\n      const {\n        getItemClassNames, // eslint-disable-line deprecation/deprecation\n        itemProps,\n      } = item;\n      const styles = itemProps ? itemProps.styles : undefined;\n\n      // We only send a dividerClassName when the item to be rendered is a divider.\n      // For all other cases, the default divider style is used.\n      const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n      const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n      // eslint-disable-next-line deprecation/deprecation\n      let itemClassNames: IMenuItemClassNames;\n\n      // IContextualMenuItem#getItemClassNames for backwards compatibility\n      // otherwise uses mergeStyles for class names.\n      if (getItemClassNames) {\n        itemClassNames = getItemClassNames(\n          props.theme!,\n          isItemDisabled(item),\n          expandedMenuItemKey === item.key,\n          !!getIsChecked(item),\n          !!item.href,\n          iconProps.iconName !== 'None',\n          item.className,\n          dividerClassName,\n          iconProps.className,\n          subMenuIconClassName,\n          item.primaryDisabled,\n        );\n      } else {\n        const itemStyleProps: IContextualMenuItemStyleProps = {\n          theme: props.theme!,\n          disabled: isItemDisabled(item),\n          expanded: expandedMenuItemKey === item.key,\n          checked: !!getIsChecked(item),\n          isAnchorLink: !!item.href,\n          knownIcon: iconProps.iconName !== 'None',\n          itemClassName: item.className,\n          dividerClassName,\n          iconClassName: iconProps.className,\n          subMenuClassName: subMenuIconClassName,\n          primaryDisabled: item.primaryDisabled,\n        };\n\n        // We need to generate default styles then override if styles are provided\n        // since the ContextualMenu currently handles item classNames.\n        itemClassNames = getContextualMenuItemClassNames(\n          _getMenuItemStylesFunction(menuClassNames.subComponentStyles?.menuItem, styles),\n          itemStyleProps,\n        );\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.text === '-' || item.name === '-') {\n        item.itemType = ContextualMenuItemType.Divider;\n      }\n      switch (item.itemType) {\n        case ContextualMenuItemType.Divider:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          break;\n        case ContextualMenuItemType.Header:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          const headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n          renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n          break;\n        case ContextualMenuItemType.Section:\n          renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n          break;\n        default:\n          const defaultRenderNormalItem = () =>\n            renderNormalItem(\n              item,\n              itemClassNames,\n              index,\n              focusableElementIndex,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n            ) as JSX.Element;\n\n          const menuItem = props.onRenderContextualMenuItem\n            ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem)\n            : defaultRenderNormalItem();\n          renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n          break;\n      }\n\n      // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n      // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n      return <React.Fragment key={item.key}>{renderedItems}</React.Fragment>;\n    };\n\n    const defaultMenuItemRenderer = (\n      item: IContextualMenuItemRenderProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): React.ReactNode => {\n      const { index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons } = item;\n      return renderMenuItem(\n        item,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        menuClassNames,\n      );\n    };\n\n    const renderSectionItem = (\n      sectionItem: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ) => {\n      const sectionProps = sectionItem.sectionProps;\n      if (!sectionProps) {\n        return;\n      }\n\n      let headerItem;\n      let groupProps;\n      if (sectionProps.title) {\n        let headerContextualMenuItem: IContextualMenuItem | undefined = undefined;\n        let ariaLabelledby = '';\n        if (typeof sectionProps.title === 'string') {\n          // Since title is a user-facing string, it needs to be stripped\n          // of whitespace in order to build a valid element ID\n          const id = menuId + sectionProps.title.replace(/\\s/g, '');\n          headerContextualMenuItem = {\n            key: `section-${sectionProps.title}-title`,\n            itemType: ContextualMenuItemType.Header,\n            text: sectionProps.title,\n            id: id,\n          };\n          ariaLabelledby = id;\n        } else {\n          const id = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n          headerContextualMenuItem = { ...sectionProps.title, id };\n          ariaLabelledby = id;\n        }\n\n        if (headerContextualMenuItem) {\n          groupProps = {\n            role: 'group',\n            'aria-labelledby': ariaLabelledby,\n          };\n          headerItem = renderHeaderMenuItem(\n            headerContextualMenuItem,\n            itemClassNames,\n            menuClassNames,\n            index,\n            hasCheckmarks,\n            hasIcons,\n          );\n        }\n      }\n\n      if (sectionProps.items && sectionProps.items.length > 0) {\n        return (\n          <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n            <div {...groupProps}>\n              <ul className={menuClassNames.list} role=\"presentation\">\n                {sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true)}\n                {headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title)}\n                {sectionProps.items.map((contextualMenuItem, itemsIndex) =>\n                  renderMenuItem(\n                    contextualMenuItem,\n                    itemsIndex,\n                    itemsIndex,\n                    sectionProps.items.length,\n                    hasCheckmarks,\n                    hasIcons,\n                    menuClassNames,\n                  ),\n                )}\n                {sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true)}\n              </ul>\n            </div>\n          </li>\n        );\n      }\n    };\n\n    const renderListItem = (\n      content: React.ReactNode,\n      key: string | number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      title?: string,\n    ) => {\n      return (\n        <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n          {content}\n        </li>\n      );\n    };\n\n    const renderSeparator = (\n      index: number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      top?: boolean,\n      fromSection?: boolean,\n    ): React.ReactNode => {\n      if (fromSection || index > 0) {\n        return (\n          <li\n            role=\"separator\"\n            key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n            className={classNames.divider}\n            aria-hidden=\"true\"\n          />\n        );\n      }\n      return null;\n    };\n\n    const renderNormalItem = (\n      item: IContextualMenuItem,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      if (item.onRender) {\n        return item.onRender(\n          { 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item },\n          dismiss,\n        );\n      }\n\n      const { contextualMenuItemAs } = props;\n\n      const commonProps = {\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        contextualMenuItemAs,\n        onItemMouseEnter: onItemMouseEnterBase,\n        onItemMouseLeave: onMouseItemLeave,\n        onItemMouseMove: onItemMouseMoveBase,\n        onItemMouseDown: onItemMouseDown,\n        executeItemClick: executeItemClick,\n        onItemKeyDown: onItemKeyDown,\n        expandedMenuItemKey,\n        openSubMenu,\n        dismissSubMenu: onSubMenuDismiss,\n        dismissMenu: dismiss,\n      } as const;\n\n      if (item.href) {\n        return <ContextualMenuAnchor {...commonProps} onItemClick={onAnchorClick} />;\n      }\n\n      if (item.split && hasSubmenu(item)) {\n        return (\n          <ContextualMenuSplitButton\n            {...commonProps}\n            onItemClick={onItemClick}\n            onItemClickBase={onItemClickBase}\n            onTap={cancelSubMenuTimer}\n          />\n        );\n      }\n\n      return <ContextualMenuButton {...commonProps} onItemClick={onItemClick} onItemClickBase={onItemClickBase} />;\n    };\n\n    const renderHeaderMenuItem = (\n      item: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = props;\n      const { itemProps, id } = item;\n      const divHtmlProperties =\n        itemProps && getNativeProps<React.HTMLAttributes<HTMLDivElement>>(itemProps, divProperties);\n      return (\n        // eslint-disable-next-line deprecation/deprecation\n        <div id={id} className={menuClassNames.header} {...divHtmlProperties} style={item.style}>\n          <ChildrenRenderer\n            item={item}\n            classNames={itemClassNames}\n            index={index}\n            onCheckmarkClick={hasCheckmarks ? onItemClick : undefined}\n            hasIcons={hasIcons}\n            {...itemProps}\n          />\n        </div>\n      );\n    };\n    //#endregion\n\n    //#region Main render\n    let { isBeakVisible } = props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = onDefaultRenderSubMenu,\n      onRenderMenuList = (\n        menuListProps: IContextualMenuListProps,\n        defaultRender?: IRenderFunction<IContextualMenuListProps>,\n      ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n      focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n      getMenuClassNames,\n    } = props;\n\n    const classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className: className,\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (item.iconProps) {\n          return true;\n        }\n\n        if (\n          item.itemType === ContextualMenuItemType.Section &&\n          item.sectionProps &&\n          itemsHaveIcons(item.sectionProps.items)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    const adjustedFocusZoneProps = {\n      direction: FocusZoneDirection.vertical,\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      ...focusZoneProps,\n      className: css(classNames.root, props.focusZoneProps?.className),\n    };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle: React.CSSProperties;\n    const targetAsHtmlElement = targetRef.current as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2; /* Accounts for 1px border */\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth,\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth,\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      let totalItemCount = 0;\n      for (const item of items) {\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n          const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n          totalItemCount += itemCount;\n        }\n      }\n\n      const calloutStyles = classNames.subComponentStyles\n        ? (classNames.subComponentStyles.callout as IStyleFunctionOrObject<\n            ICalloutContentStyleProps,\n            ICalloutContentStyles\n          >)\n        : undefined;\n\n      return (\n        <MenuContext.Consumer>\n          {menuContext => (\n            <Callout\n              styles={calloutStyles}\n              onRestoreFocus={tryFocusPreviousActiveElement}\n              {...calloutProps}\n              target={target || (menuContext.target as IContextualMenuProps['target'])}\n              isBeakVisible={isBeakVisible}\n              beakWidth={beakWidth}\n              directionalHint={directionalHint}\n              directionalHintForRTL={directionalHintForRTL}\n              gapSpace={gapSpace}\n              coverTarget={coverTarget}\n              doNotLayer={doNotLayer}\n              className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n              setInitialFocus={shouldFocusOnMount}\n              onDismiss={props.onDismiss || menuContext.onDismiss}\n              onScroll={onScroll}\n              bounds={bounds}\n              directionalHintFixed={directionalHintFixed}\n              alignTargetEdge={alignTargetEdge}\n              hidden={props.hidden || menuContext.hidden}\n              ref={forwardedRef}\n            >\n              <div\n                style={contextMenuStyle}\n                ref={hostElement}\n                id={id}\n                className={classNames.container}\n                tabIndex={shouldFocusOnContainer ? 0 : -1}\n                onKeyDown={onMenuKeyDown}\n                onKeyUp={onKeyUp}\n                onFocusCapture={onMenuFocusCapture}\n                aria-label={ariaLabel}\n                aria-labelledby={labelElementId}\n                role={'menu'}\n              >\n                {title && <div className={classNames.title}> {title} </div>}\n                {items && items.length\n                  ? renderFocusZone(\n                      onRenderMenuList(\n                        {\n                          ariaLabel,\n                          items,\n                          totalItemCount,\n                          hasCheckmarks,\n                          hasIcons,\n                          defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) =>\n                            defaultMenuItemRenderer(item, classNames),\n                          labelElementId,\n                        },\n                        (\n                          menuListProps: IContextualMenuListProps,\n                          defaultRender?: IRenderFunction<IContextualMenuListProps>,\n                        ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n                      ),\n                      adjustedFocusZoneProps,\n                    )\n                  : null}\n                {submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)}\n              </div>\n            </Callout>\n          )}\n        </MenuContext.Consumer>\n      );\n    } else {\n      return null;\n    }\n    //#endregion\n  }),\n  (prevProps, newProps) => {\n    if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n\n    return shallowCompare(prevProps, newProps);\n  },\n);\nContextualMenuBase.displayName = 'ContextualMenuBase';\n\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\nfunction isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void {\n  item.onMouseDown?.(item, ev);\n}\n\nfunction onDefaultRenderSubMenu(\n  subMenuProps: IContextualMenuProps,\n  defaultRender?: IRenderFunction<IContextualMenuProps>,\n): JSX.Element {\n  throw Error(\n    'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n      'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.',\n  );\n}\n\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\nfunction findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n  for (const item of items) {\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      const match = findItemByKeyFromItems(key, item.sectionProps.items);\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(\n  onClick:\n    | ((\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => boolean | void)\n    | undefined,\n  target: Target | undefined,\n) {\n  return onClick\n    ? (\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => {\n        overrideTarget(ev, target);\n\n        return onClick(ev, item);\n      }\n    : onClick;\n}\n\nfunction overrideTarget(\n  ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n  target?: Target,\n): void {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target as HTMLElement;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}