{"ast":null,"code":"var _jsxFileName = \"/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:true\n//             })\n//         }\n//         axios.post('http://localhost:8080/Procurement/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.data.map((element) => {\n//                     let obj = {\n//                         projectID: element.projectID,\n//                         quantity: element.quantity,\n//                         requiredDate: element.requiredDate,\n//                         approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         name:element.name\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:3001/Finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:3001/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\n//                     <div style={{color:'black'}}>\n//                 <h3>Procurement</h3>\n//                 </div>\n//                 <table>\n//                     <thead>\n//                         <th>Project ID</th>\n//                         <th>Quantity</th>\n//                         <th>Required Date</th>\n//                         <th>Price</th>\n//                         <th>Name</th>\n//                         <th>Action</th>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.projectID}>\n//                                     <td>{element.projectID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td>\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         )\n//     }\n// }\n// import React from 'react';\n// import './table.css';\n// import Button from '@mui/material/Button';\n// import axios from 'axios';\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// export default class Procurement extends React.Component {\n//     state = {\n//         products: [],\n//         loggedIn:false,\n//         isAdmin:false\n//     }\n//     componentDidMount() {\n//         let loggedIn = localStorage.getItem('LoggedIn');\n//         let isAdmin = localStorage.getItem('isAdmin')\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \n//         if(loggedIn=='true'){\n//             this.setState({\n//                 loggedIn:true\n//             })\n//         }\n//         if(isAdmin=='true'){\n//             this.setState({\n//                 isAdmin:false\n//             })\n//         }\n//         useEffect(()=> {\n//             console.log(\"trying to load hr candidate on page load\")\n//               handleRefresh();\n//          } ,[])\n//          const handleRefresh = () => {\n//           axios.get('/hr')\n//             .then((response) => {\n//               console.log(response)\n//               setData(response.data);\n//             }).catch((err) => {\n//               console.log(err);\n//             })\n//          }\n//         axios.get('http://localhost:8080/procurement')\n//             .then((res) => {\n//                 console.log(res);\n//                 let products = res.data.map((element) => {\n//                     let obj = {\n//                         productID: element.productID,\n//                         quantity: element.quantity,\n//                         // requiredDate: element.requiredDate,\n//                         // approvedByProcurement: element.approvedByProcurement,\n//                         price:element.price,\n//                         title:element.title\n//                     }\n//                     return obj;\n//                 })\n//                 console.log(products)\n//                 this.setState({\n//                     products\n//                 });\n//             })\n//             .catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleApprove = (element) => {\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Approved'\n//         };\n//         let updatedProducts = this.state.products.map((product) => {\n//             if (product.projectID == element.projectID) {\n//                 let obj = {\n//                     projectID: product.projectID,\n//                     quantity: product.quantity,\n//                     requiredDate: product.requiredDate,\n//                     approvedByProcurement:  'Approved',\n//                     price:element.price,\n//                     name:element.name\n//                 }\n//                 return obj;\n//             } else {\n//                 return product;\n//             }\n//         })\n//         console.log('updatedProducts',updatedProducts)\n//         this.setState({\n//             products:updatedProducts\n//         });\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let financeData = {\n//                     projectID: element.projectID,\n//                     approvedByProcurement: 'Approved',\n//                     requiredDate: element.requiredDate,\n//                     quantity: element.quantity,\n//                     name:element.name,\n//                     price:element.price\n//                 }\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\n//                     .then((updatedRes) => {\n//                         console.log(updatedRes);\n//                     }).catch((Err) => {\n//                         console.log(Err);\n//                     })\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     handleReject = (element) => {\n//         console.log(element);\n//         let data = {\n//             projectID: element.projectID,\n//             approvedByProcurement: 'Rejected'\n//         };\n//         axios.put('http://localhost:8080/updateProcurement', data)\n//             .then((response) => {\n//                 console.log(response);\n//                 let updatedProducts = this.state.products.map((product) => {\n//                     if (product.projectID == element.projectID) {\n//                         let obj = {\n//                             projectID: product.projectID,\n//                             quantity: product.quantity,\n//                             requiredDate: product.requiredDate,\n//                             approvedByProcurement:  'Rejected',\n//                             price:product.price,\n//                             name:product.name\n//                         }\n//                         return obj;\n//                     } else {\n//                         return product;\n//                     }\n//                 })\n//                 console.log('updatedProducts',updatedProducts)\n//                 this.setState({\n//                     products:updatedProducts\n//                 });\n//             }).catch((Err) => {\n//                 console.log(Err);\n//             })\n//     }\n//     render() {\n//         return (\n//            <table>\n//                     <thead>\n//                         <th>Product ID</th>\n//                         <th>Quantity</th>\n//                         <th>Price</th>\n//                         <th>Title</th>\n//                         <th>Status</th>\n//                         {/* <th>Action</th>  */}\n//                     </thead>\n//                     <tbody>\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\n//                             return (\n//                                 <tr key={element.productID}>\n//                                     <td>{element.productID}</td>\n//                                     <td>{element.quantity}</td>\n//                                     {/* <td>{element.requiredDate}</td>\n//                                     <td>{element.price}</td>\n//                                     <td>{element.name}</td> */}\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\n//                                 </tr>\n//                             )\n//                         }) : null}\n//                     </tbody>\n//                 </table>\n//         )\n//     }\n// }\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { TableRow, TableHead, TableContainer, AppBar, TableCell, TableBody, Table, Paper, TextField } from '@material-ui/core';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DoneIcon from '@mui/icons-material/Done';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab'; // import Procurementapproval from './Procurementapproval';\n// import Procurementreject from './Procurementreject';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CenteredTabs() {\n  _s();\n\n  const [value, setValue] = React.useState(0);\n  const [data, setData] = useState([]);\n  const [ashow, setAShow] = useState(false);\n  const [rshow, setRShow] = useState(false);\n  const [pshow, setPShow] = useState(true);\n\n  const handleChange = (event, newValue) => {\n    if (newValue == 0) {\n      setPShow(true);\n      setAShow(false);\n      setRShow(false);\n    } else if (newValue == 1) {\n      setPShow(false);\n      setAShow(true);\n      setRShow(false);\n    } else if (newValue == 2) {\n      setPShow(false);\n      setAShow(false);\n      setRShow(true);\n    }\n\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    console.log(\"trying to load hr candidate on page load\");\n    handleRefresh();\n  }, []);\n\n  const handleRefresh = () => {\n    axios.get('http://localhost:8080/cart/procurement').then(response => {\n      console.log(response);\n      setData(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleApprove = (row, id) => {\n    console.log(id);\n    axios.post('http:localhost:8080/procurement/approve/' + row.id).then(response => {\n      console.log('new item added', response);\n      handleRefresh();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleReject = (row, id) => {\n    console.log(id);\n    axios.post('http://localhost:8080/procurement/reject/' + row.id).then(response => {\n      console.log(response);\n      handleRefresh();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, 'div', false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 5\n    }, this), pshow ? /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 450\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: data.map((row, id) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: row.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(DoneIcon, {\n              onClick: () => handleApprove(row, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 16\n            }, this), ' ', ' ', /*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: () => handleReject(row, id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 14\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 12\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, 'hpending', true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 3\n    }, this) : ashow ? /*#__PURE__*/_jsxDEV(Procurementapproval, {}, 'happr', false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Procurementreject, {}, 'hrej', false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 80\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 4\n  }, this);\n}\n\n_s(CenteredTabs, \"htNQVDb/ler5UgmF6rDTmBb166E=\");\n\n_c = CenteredTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenteredTabs\");","map":{"version":3,"sources":["/home/npr/Downloads/Final FrontEnd (2)/src/components/Procurement.js"],"names":["axios","React","useState","useEffect","TableRow","TableHead","TableContainer","AppBar","TableCell","TableBody","Table","Paper","TextField","CloseIcon","DoneIcon","RefreshIcon","Box","Tabs","Tab","CenteredTabs","value","setValue","data","setData","ashow","setAShow","rshow","setRShow","pshow","setPShow","handleChange","event","newValue","console","log","handleRefresh","get","then","response","catch","err","handleApprove","row","id","post","handleReject","minWidth","map","border","title","price","quantity","status","name"],"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","sourcesContent":["// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,'isAdmin',isAdmin);\r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:true\r\n//             })\r\n//         }\r\n//         axios.post('http://localhost:8080/Procurement/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.data.map((element) => {\r\n//                     let obj = {\r\n//                         projectID: element.projectID,\r\n//                         quantity: element.quantity,\r\n//                         requiredDate: element.requiredDate,\r\n//                         approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         name:element.name\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:3001/Finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:3001/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div hidden={!(this.state.isAdmin&&this.state.loggedIn)}>\r\n//                     <div style={{color:'black'}}>\r\n//                 <h3>Procurement</h3>\r\n//                 </div>\r\n//                 <table>\r\n//                     <thead>\r\n//                         <th>Project ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Required Date</th>\r\n//                         <th>Price</th>\r\n//                         <th>Name</th>\r\n//                         <th>Action</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.projectID}>\r\n//                                     <td>{element.projectID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td>\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// import React from 'react';\r\n// import './table.css';\r\n// import Button from '@mui/material/Button';\r\n// import axios from 'axios';\r\n// import CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// export default class Procurement extends React.Component {\r\n//     state = {\r\n//         products: [],\r\n//         loggedIn:false,\r\n//         isAdmin:false\r\n//     }\r\n//     componentDidMount() {\r\n//         let loggedIn = localStorage.getItem('LoggedIn');\r\n//         let isAdmin = localStorage.getItem('isAdmin')\r\n//         console.log('loggedIn',loggedIn,  'isAdmin', isAdmin); \r\n       \r\n//         if(loggedIn=='true'){\r\n//             this.setState({\r\n//                 loggedIn:true\r\n//             })\r\n//         }\r\n//         if(isAdmin=='true'){\r\n//             this.setState({\r\n//                 isAdmin:false\r\n//             })\r\n//         }\r\n\r\n//         useEffect(()=> {\r\n//             console.log(\"trying to load hr candidate on page load\")\r\n//               handleRefresh();\r\n//          } ,[])\r\n          \r\n//          const handleRefresh = () => {\r\n//           axios.get('/hr')\r\n//             .then((response) => {\r\n//               console.log(response)\r\n//               setData(response.data);\r\n//             }).catch((err) => {\r\n//               console.log(err);\r\n//             })\r\n//          }\r\n         \r\n//         axios.get('http://localhost:8080/procurement')\r\n//             .then((res) => {\r\n//                 console.log(res);\r\n//                 let products = res.data.map((element) => {\r\n//                     let obj = {\r\n//                         productID: element.productID,\r\n//                         quantity: element.quantity,\r\n//                         // requiredDate: element.requiredDate,\r\n//                         // approvedByProcurement: element.approvedByProcurement,\r\n//                         price:element.price,\r\n//                         title:element.title\r\n//                     }\r\n//                     return obj;\r\n//                 })\r\n//                 console.log(products)\r\n//                 this.setState({\r\n//                     products\r\n//                 });\r\n//             })\r\n//             .catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     handleApprove = (element) => {\r\n//         axios.post('http://localhost:8080/Procurement/procurement', data)\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Approved'\r\n//         };\r\n//         let updatedProducts = this.state.products.map((product) => {\r\n//             if (product.projectID == element.projectID) {\r\n//                 let obj = {\r\n//                     projectID: product.projectID,\r\n//                     quantity: product.quantity,\r\n//                     requiredDate: product.requiredDate,\r\n//                     approvedByProcurement:  'Approved',\r\n//                     price:element.price,\r\n//                     name:element.name\r\n//                 }\r\n//                 return obj;\r\n//             } else {\r\n//                 return product;\r\n//             }\r\n//         })\r\n//         console.log('updatedProducts',updatedProducts)\r\n//         this.setState({\r\n//             products:updatedProducts\r\n//         });\r\n//         axios.put('http://localhost:8080/Procurement/procurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let financeData = {\r\n//                     projectID: element.projectID,\r\n//                     approvedByProcurement: 'Approved',\r\n//                     requiredDate: element.requiredDate,\r\n//                     quantity: element.quantity,\r\n//                     name:element.name,\r\n//                     price:element.price\r\n//                 }\r\n//                 axios.post('http://localhost:8080/Finance/finance', financeData)\r\n//                     .then((updatedRes) => {\r\n//                         console.log(updatedRes);\r\n//                     }).catch((Err) => {\r\n//                         console.log(Err);\r\n//                     })\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n\r\n//     }\r\n//     handleReject = (element) => {\r\n//         console.log(element);\r\n//         let data = {\r\n//             projectID: element.projectID,\r\n//             approvedByProcurement: 'Rejected'\r\n//         };\r\n//         axios.put('http://localhost:8080/updateProcurement', data)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 let updatedProducts = this.state.products.map((product) => {\r\n//                     if (product.projectID == element.projectID) {\r\n//                         let obj = {\r\n//                             projectID: product.projectID,\r\n//                             quantity: product.quantity,\r\n//                             requiredDate: product.requiredDate,\r\n//                             approvedByProcurement:  'Rejected',\r\n//                             price:product.price,\r\n//                             name:product.name\r\n//                         }\r\n//                         return obj;\r\n//                     } else {\r\n//                         return product;\r\n//                     }\r\n//                 })\r\n//                 console.log('updatedProducts',updatedProducts)\r\n//                 this.setState({\r\n//                     products:updatedProducts\r\n//                 });\r\n//             }).catch((Err) => {\r\n//                 console.log(Err);\r\n//             })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//            <table>\r\n//                     <thead>\r\n//                         <th>Product ID</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Price</th>\r\n//                         <th>Title</th>\r\n//                         <th>Status</th>\r\n//                         {/* <th>Action</th>  */}\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.products.length > 0 ? this.state.products.map((element) => {\r\n//                             return (\r\n//                                 <tr key={element.productID}>\r\n//                                     <td>{element.productID}</td>\r\n//                                     <td>{element.quantity}</td>\r\n//                                     {/* <td>{element.requiredDate}</td>\r\n//                                     <td>{element.price}</td>\r\n//                                     <td>{element.name}</td> */}\r\n//                                     <td>{element.approvedByProcurement == 'Approved' ? <b>Approved<CheckBoxIcon></CheckBoxIcon></b> : element.approvedByFinance == 'Rejected' ? <b>Rejected<CancelIcon></CancelIcon></b> : null}<span hidden={element.approvedByProcurement !== 'Pending'}> <Button color=\"inherit\"  onClick={()=>this.handleApprove(element)}>Approve<CheckBoxIcon></CheckBoxIcon></Button><Button color=\"inherit\" onClick={()=>this.handleReject(element)}>Reject<CancelIcon></CancelIcon></Button></span></td>\r\n//                                 </tr>\r\n//                             )\r\n//                         }) : null}\r\n//                     </tbody>\r\n//                 </table>\r\n          \r\n          \r\n//         )\r\n                    \r\n//     }\r\n// }\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {TableRow, TableHead,TableContainer,AppBar, TableCell, TableBody, Table, Paper, TextField} from '@material-ui/core';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport Box from '@mui/material/Box';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n// import Procurementapproval from './Procurementapproval';\r\n// import Procurementreject from './Procurementreject';\r\n\r\n \r\nexport default function CenteredTabs() {\r\n const [value, setValue] = React.useState(0);\r\n const [data, setData] = useState([]);\r\n const [ashow, setAShow] = useState(false);\r\n const [rshow, setRShow] = useState(false);\r\n const [pshow, setPShow] = useState(true);\r\n \r\n const handleChange = (event, newValue) => {\r\n   if(newValue == 0){\r\n     setPShow(true);\r\n     setAShow(false);\r\n     setRShow(false);\r\n   }else if(newValue == 1){\r\n    setPShow(false);\r\n    setAShow(true);\r\n    setRShow(false);\r\n  }\r\n  else if(newValue == 2){\r\n    setPShow(false);\r\n    setAShow(false);\r\n    setRShow(true);\r\n  }\r\n   setValue(newValue);\r\n };\r\n   \r\n  useEffect(()=> {\r\n   console.log(\"trying to load hr candidate on page load\")\r\n     handleRefresh();\r\n} ,[])\r\n \r\nconst handleRefresh = () => {\r\n axios.get('http://localhost:8080/cart/procurement')\r\n   .then((response) => {\r\n     console.log(response)\r\n     setData(response.data);\r\n   }).catch((err) => {\r\n     console.log(err);\r\n   })\r\n}\r\n\r\n \r\nconst handleApprove = (row, id) => {\r\n console.log(id)\r\n  \r\n   axios.post('http:localhost:8080/procurement/approve/'+row.id)\r\n     .then((response) => {\r\n       console.log('new item added',response);\r\n       handleRefresh();\r\n     }).catch((err) => {\r\n       console.log(err)\r\n     })\r\n }\r\n const handleReject = (row, id) => {\r\n   console.log(id);\r\n  \r\n   axios.post('http://localhost:8080/procurement/reject/' +row.id)\r\n     .then((response) => {\r\n       console.log(response);\r\n       handleRefresh();\r\n      \r\n     }).catch((err) => {\r\n       console.log(err);\r\n     })\r\n }\r\n  return (\r\n   <TableContainer component={Paper}>\r\n    <div key='div'>\r\n       {/* <AppBar position=\"static\" key='abar'>\r\n     <Tabs value={value} onChange={handleChange} centered>\r\n       <Tab label=\"PROCUREMENT Page\" key='ptab' />\r\n       <Tab label=\"PROCUREMENT Approval Table\" key='atab' />\r\n       <Tab label=\"PROCUREMENT Reject Table\" key='rtab' />\r\n     </Tabs>\r\n   </AppBar> */}\r\n\r\n   </div>\r\n   { pshow?\r\n  \r\n  <Table sx={{ minWidth: 450 }} aria-label=\"simple table\" key='hpending'> \r\n\r\n        <TableHead>\r\n          <TableRow>\r\n           <TableCell align=\"center\">Title</TableCell>\r\n          \r\n          \r\n           <TableCell align=\"center\">Quantity</TableCell>\r\n           <TableCell align=\"center\">Price</TableCell>\r\n           \r\n           <TableCell align=\"center\">Status</TableCell>\r\n          \r\n           <TableCell align=\"center\">Action</TableCell>\r\n       \r\n         </TableRow>\r\n    \r\n       </TableHead>\r\n      \r\n        <TableBody>\r\n         {data.map((row, id) => (\r\n           <TableRow\r\n             key={row.name}\r\n             sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n           >\r\n \r\n             <TableCell align=\"center\">{row.title}</TableCell>\r\n          \r\n           \r\n             <TableCell align=\"center\">{row.price}</TableCell>\r\n             <TableCell align=\"center\">{row.quantity}</TableCell>\r\n             <TableCell align=\"center\">{row.status}</TableCell>\r\n             <TableCell align=\"center\">\r\n           \r\n            \r\n            \r\n              </TableCell>\r\n             <TableCell align=\"center\">\r\n               <DoneIcon onClick={() => handleApprove(row, id)} />{' '}{' '}\r\n               <CloseIcon onClick={() => handleReject(row, id)} />\r\n             </TableCell>\r\n           </TableRow>\r\n         ))}\r\n \r\n \r\n        \r\n       </TableBody> \r\n     \r\n     </Table> : ashow? <Procurementapproval key='happr'></Procurementapproval>:<Procurementreject key='hrej'></Procurementreject>\r\n     }\r\n   \r\n    </TableContainer>\r\n \r\n  );\r\n}\r\n \r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}