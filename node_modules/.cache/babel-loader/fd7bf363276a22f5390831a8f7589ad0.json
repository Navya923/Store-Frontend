{"ast":null,"code":"import { __assign } from \"tslib\";\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\n\nexport function makeSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n\n  var semanticColors = __assign({\n    primaryButtonBorder: 'transparent',\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353'\n  }, s);\n\n  var fullSemanticColors = getSemanticColors(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n/**\n * Map partial platte and effects to partial semantic colors.\n */\n\nexport function getSemanticColors(p, e, s, isInverted, depComments) {\n  if (depComments === void 0) {\n    depComments = false;\n  }\n\n  var result = {}; // map palette\n\n  var _a = p || {},\n      white = _a.white,\n      black = _a.black,\n      themePrimary = _a.themePrimary,\n      themeDark = _a.themeDark,\n      themeDarker = _a.themeDarker,\n      themeDarkAlt = _a.themeDarkAlt,\n      themeLighter = _a.themeLighter,\n      neutralLight = _a.neutralLight,\n      neutralLighter = _a.neutralLighter,\n      neutralDark = _a.neutralDark,\n      neutralQuaternary = _a.neutralQuaternary,\n      neutralQuaternaryAlt = _a.neutralQuaternaryAlt,\n      neutralPrimary = _a.neutralPrimary,\n      neutralSecondary = _a.neutralSecondary,\n      neutralSecondaryAlt = _a.neutralSecondaryAlt,\n      neutralTertiary = _a.neutralTertiary,\n      neutralTertiaryAlt = _a.neutralTertiaryAlt,\n      neutralLighterAlt = _a.neutralLighterAlt,\n      accent = _a.accent;\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight; // eslint-disable-next-line deprecation/deprecation\n\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = (s === null || s === void 0 ? void 0 : s.variantBorderHovered) || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n\n  if (accent) {\n    result.accentButtonBackground = accent;\n  } // map effects\n\n\n  if (e === null || e === void 0 ? void 0 : e.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n\n  if (!isInverted && (e === null || e === void 0 ? void 0 : e.elevation8)) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = __assign(__assign({}, result), s);\n  return result;\n}\n\nfunction _fixDeprecatedSlots(s, depComments) {\n  // Add @deprecated tag as comment if enabled\n  var dep = '';\n\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n  /* eslint-disable deprecation/deprecation */\n\n\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n\n  return s;\n}","map":{"version":3,"mappings":"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","names":["makeSemanticColors","p","e","s","isInverted","depComments","semanticColors","primaryButtonBorder","errorText","messageText","messageLink","messageLinkHovered","infoIcon","errorIcon","blockingIcon","warningIcon","severeWarningIcon","successIcon","infoBackground","errorBackground","blockingBackground","warningBackground","severeWarningBackground","successBackground","warningHighlight","successText","fullSemanticColors","getSemanticColors","_fixDeprecatedSlots","result","white","black","themePrimary","themeDark","themeDarker","themeDarkAlt","themeLighter","neutralLight","neutralLighter","neutralDark","neutralQuaternary","neutralQuaternaryAlt","neutralPrimary","neutralSecondary","neutralSecondaryAlt","neutralTertiary","neutralTertiaryAlt","neutralLighterAlt","accent","bodyBackground","bodyFrameBackground","accentButtonText","buttonBackground","primaryButtonText","primaryButtonTextHovered","primaryButtonTextPressed","inputBackground","inputForegroundChecked","listBackground","menuBackground","cardStandoutBackground","bodyTextChecked","buttonTextCheckedHovered","link","primaryButtonBackground","inputBackgroundChecked","inputIcon","inputFocusBorderAlt","menuIcon","menuHeader","accentButtonBackground","primaryButtonBackgroundPressed","inputBackgroundCheckedHovered","inputIconHovered","linkHovered","primaryButtonBackgroundHovered","inputPlaceholderBackgroundChecked","bodyBackgroundChecked","bodyFrameDivider","bodyDivider","variantBorder","buttonBackgroundCheckedHovered","buttonBackgroundPressed","listItemBackgroundChecked","listHeaderBackgroundPressed","menuItemBackgroundPressed","menuItemBackgroundChecked","bodyBackgroundHovered","buttonBackgroundHovered","buttonBackgroundDisabled","buttonBorderDisabled","primaryButtonBackgroundDisabled","disabledBackground","listItemBackgroundHovered","listHeaderBackgroundHovered","menuItemBackgroundHovered","primaryButtonTextDisabled","disabledSubtext","listItemBackgroundCheckedHovered","disabledBodyText","variantBorderHovered","buttonTextDisabled","inputIconDisabled","disabledText","bodyText","actionLink","buttonText","inputBorderHovered","inputText","listText","menuItemText","bodyStandoutBackground","defaultStateBackground","actionLinkHovered","buttonTextHovered","buttonTextChecked","buttonTextPressed","inputTextHovered","menuItemTextHovered","bodySubtext","focusBorder","inputBorder","smallInputBorder","inputPlaceholderText","buttonBorder","disabledBodySubtext","disabledBorder","buttonBackgroundChecked","menuDivider","elevation4","cardShadow","elevation8","cardShadowHovered","dep","listTextColor","warningText"],"sources":["/home/npr/Downloads/Final FrontEnd (2)/node_modules/@fluentui/theme/lib/src/utilities/makeSemanticColors.ts"],"sourcesContent":["import type { IEffects, IPalette, ISemanticColors } from '../types/index';\n\n/** Generates all the semantic slot colors based on the theme so far\n * We'll use these as fallbacks for semantic slots that the passed in theme did not define.\n * The caller must still mix in the customized semantic slots at the end.\n */\nexport function makeSemanticColors(\n  p: IPalette,\n  e: IEffects,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): ISemanticColors {\n  const semanticColors: Partial<ISemanticColors> = {\n    primaryButtonBorder: 'transparent',\n\n    errorText: !isInverted ? '#a4262c' : '#F1707B',\n\n    messageText: !isInverted ? '#323130' : '#F3F2F1',\n    messageLink: !isInverted ? '#005A9E' : '#6CB8F6',\n    messageLinkHovered: !isInverted ? '#004578' : '#82C7FF',\n\n    infoIcon: !isInverted ? '#605e5c' : '#C8C6C4',\n    errorIcon: !isInverted ? '#A80000' : '#F1707B',\n    blockingIcon: !isInverted ? '#FDE7E9' : '#442726',\n    warningIcon: !isInverted ? '#797775' : '#C8C6C4',\n    severeWarningIcon: !isInverted ? '#D83B01' : '#FCE100',\n    successIcon: !isInverted ? '#107C10' : '#92C353',\n\n    infoBackground: !isInverted ? '#f3f2f1' : '#323130',\n    errorBackground: !isInverted ? '#FDE7E9' : '#442726',\n    blockingBackground: !isInverted ? '#FDE7E9' : '#442726',\n    warningBackground: !isInverted ? '#FFF4CE' : '#433519',\n    severeWarningBackground: !isInverted ? '#FED9CC' : '#4F2A0F',\n    successBackground: !isInverted ? '#DFF6DD' : '#393D1B',\n\n    // deprecated\n    warningHighlight: !isInverted ? '#ffb900' : '#fff100',\n    successText: !isInverted ? '#107C10' : '#92c353',\n\n    ...s,\n  };\n\n  const fullSemanticColors = getSemanticColors<ISemanticColors>(p, e, semanticColors, isInverted);\n  return _fixDeprecatedSlots(fullSemanticColors, depComments);\n}\n\n/**\n * Map partial platte and effects to partial semantic colors.\n */\nexport function getSemanticColors<TResult = Partial<ISemanticColors>>(\n  p: Partial<IPalette> | undefined,\n  e: Partial<IEffects> | undefined,\n  s: Partial<ISemanticColors> | undefined,\n  isInverted: boolean,\n  depComments: boolean = false,\n): TResult {\n  let result: Partial<ISemanticColors> = {};\n\n  // map palette\n  const {\n    white,\n    black,\n    themePrimary,\n    themeDark,\n    themeDarker,\n    themeDarkAlt,\n    themeLighter,\n    neutralLight,\n    neutralLighter,\n    neutralDark,\n    neutralQuaternary,\n    neutralQuaternaryAlt,\n    neutralPrimary,\n    neutralSecondary,\n    neutralSecondaryAlt,\n    neutralTertiary,\n    neutralTertiaryAlt,\n    neutralLighterAlt,\n    accent,\n  } = p || {};\n\n  if (white) {\n    result.bodyBackground = white;\n    result.bodyFrameBackground = white;\n    result.accentButtonText = white;\n    result.buttonBackground = white;\n    result.primaryButtonText = white;\n    result.primaryButtonTextHovered = white;\n    result.primaryButtonTextPressed = white;\n    result.inputBackground = white;\n    result.inputForegroundChecked = white;\n    result.listBackground = white;\n    result.menuBackground = white;\n    result.cardStandoutBackground = white;\n  }\n  if (black) {\n    result.bodyTextChecked = black;\n    result.buttonTextCheckedHovered = black;\n  }\n  if (themePrimary) {\n    result.link = themePrimary;\n    result.primaryButtonBackground = themePrimary;\n    result.inputBackgroundChecked = themePrimary;\n    result.inputIcon = themePrimary;\n    result.inputFocusBorderAlt = themePrimary;\n    result.menuIcon = themePrimary;\n    result.menuHeader = themePrimary;\n    result.accentButtonBackground = themePrimary;\n  }\n  if (themeDark) {\n    result.primaryButtonBackgroundPressed = themeDark;\n    result.inputBackgroundCheckedHovered = themeDark;\n    result.inputIconHovered = themeDark;\n  }\n  if (themeDarker) {\n    result.linkHovered = themeDarker;\n  }\n  if (themeDarkAlt) {\n    result.primaryButtonBackgroundHovered = themeDarkAlt;\n  }\n  if (themeLighter) {\n    result.inputPlaceholderBackgroundChecked = themeLighter;\n  }\n  if (neutralLight) {\n    result.bodyBackgroundChecked = neutralLight;\n    result.bodyFrameDivider = neutralLight;\n    result.bodyDivider = neutralLight;\n    result.variantBorder = neutralLight;\n    result.buttonBackgroundCheckedHovered = neutralLight;\n    result.buttonBackgroundPressed = neutralLight;\n    result.listItemBackgroundChecked = neutralLight;\n    result.listHeaderBackgroundPressed = neutralLight;\n    result.menuItemBackgroundPressed = neutralLight;\n    // eslint-disable-next-line deprecation/deprecation\n    result.menuItemBackgroundChecked = neutralLight;\n  }\n  if (neutralLighter) {\n    result.bodyBackgroundHovered = neutralLighter;\n    result.buttonBackgroundHovered = neutralLighter;\n    result.buttonBackgroundDisabled = neutralLighter;\n    result.buttonBorderDisabled = neutralLighter;\n    result.primaryButtonBackgroundDisabled = neutralLighter;\n    result.disabledBackground = neutralLighter;\n    result.listItemBackgroundHovered = neutralLighter;\n    result.listHeaderBackgroundHovered = neutralLighter;\n    result.menuItemBackgroundHovered = neutralLighter;\n  }\n  if (neutralQuaternary) {\n    result.primaryButtonTextDisabled = neutralQuaternary;\n    result.disabledSubtext = neutralQuaternary;\n  }\n  if (neutralQuaternaryAlt) {\n    result.listItemBackgroundCheckedHovered = neutralQuaternaryAlt;\n  }\n  if (neutralTertiary) {\n    result.disabledBodyText = neutralTertiary;\n    result.variantBorderHovered = s?.variantBorderHovered || neutralTertiary;\n    result.buttonTextDisabled = neutralTertiary;\n    result.inputIconDisabled = neutralTertiary;\n    result.disabledText = neutralTertiary;\n  }\n  if (neutralPrimary) {\n    result.bodyText = neutralPrimary;\n    result.actionLink = neutralPrimary;\n    result.buttonText = neutralPrimary;\n    result.inputBorderHovered = neutralPrimary;\n    result.inputText = neutralPrimary;\n    result.listText = neutralPrimary;\n    result.menuItemText = neutralPrimary;\n  }\n  if (neutralLighterAlt) {\n    result.bodyStandoutBackground = neutralLighterAlt;\n    result.defaultStateBackground = neutralLighterAlt;\n  }\n  if (neutralDark) {\n    result.actionLinkHovered = neutralDark;\n    result.buttonTextHovered = neutralDark;\n    result.buttonTextChecked = neutralDark;\n    result.buttonTextPressed = neutralDark;\n    result.inputTextHovered = neutralDark;\n    result.menuItemTextHovered = neutralDark;\n  }\n  if (neutralSecondary) {\n    result.bodySubtext = neutralSecondary;\n    result.focusBorder = neutralSecondary;\n    result.inputBorder = neutralSecondary;\n    result.smallInputBorder = neutralSecondary;\n    result.inputPlaceholderText = neutralSecondary;\n  }\n  if (neutralSecondaryAlt) {\n    result.buttonBorder = neutralSecondaryAlt;\n  }\n  if (neutralTertiaryAlt) {\n    result.disabledBodySubtext = neutralTertiaryAlt;\n    result.disabledBorder = neutralTertiaryAlt;\n    result.buttonBackgroundChecked = neutralTertiaryAlt;\n    result.menuDivider = neutralTertiaryAlt;\n  }\n  if (accent) {\n    result.accentButtonBackground = accent;\n  }\n\n  // map effects\n  if (e?.elevation4) {\n    result.cardShadow = e.elevation4;\n  }\n  if (!isInverted && e?.elevation8) {\n    result.cardShadowHovered = e.elevation8;\n  } else if (result.variantBorderHovered) {\n    result.cardShadowHovered = '0 0 1px ' + result.variantBorderHovered;\n  }\n\n  result = {\n    ...result,\n    // mix in customized semantic slots\n    ...s,\n  };\n\n  return result as TResult;\n}\n\nfunction _fixDeprecatedSlots(s: ISemanticColors, depComments: boolean): ISemanticColors {\n  // Add @deprecated tag as comment if enabled\n  let dep = '';\n  if (depComments === true) {\n    dep = ' /* @deprecated */';\n  }\n\n  /* eslint-disable deprecation/deprecation */\n  s.listTextColor = s.listText + dep;\n  s.menuItemBackgroundChecked += dep;\n  s.warningHighlight += dep;\n  s.warningText = s.messageText + dep;\n  s.successText += dep;\n  /* eslint-enable deprecation/deprecation */\n  return s;\n}\n"]},"metadata":{},"sourceType":"module"}